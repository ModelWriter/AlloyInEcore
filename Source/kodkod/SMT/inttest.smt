(declare-datatypes ((univ 0)) ((univ (|1|) (|2|) (|3|) (|4|) (obj2) (obj1) (obj0) (obj3))))
(declare-fun Object (univ) Bool)
(declare-fun Max (univ) Bool)
(declare-fun no (univ univ) Bool)
(declare-fun |SUM[(o . no)]16| (univ) (_ BitVec 5))
(declare-fun |SUM[(Max . no)]0| () (_ BitVec 5))
(declare-fun Ints (univ) Bool)
(declare-fun |NO[(o . no)]20| (univ (_ BitVec 5)) (_ BitVec 5))
(declare-fun |SUM_RECURSIVE[(o . no)]18| (univ (_ BitVec 5)) (_ BitVec 5))
(declare-fun |#[(o . no)]17| (univ) (_ BitVec 5))
(declare-fun toInt (univ) (_ BitVec 5))
(declare-fun |ord[(o . no)]19| (univ univ) (_ BitVec 5))
(declare-fun |#[(Max . no)]1| () (_ BitVec 5))
(declare-fun |ord[(Max . no)]3| (univ) (_ BitVec 5))
(declare-fun |NO[(Max . no)]4| ((_ BitVec 5)) (_ BitVec 5))
(declare-fun |SUM_RECURSIVE[(Max . no)]2| ((_ BitVec 5)) (_ BitVec 5))
(assert (Object obj2))
(assert (Object obj1))
(assert (Object obj0))
(assert (Object obj3))
(assert (not (Object |1|)))
(assert (not (Object |2|)))
(assert (not (Object |3|)))
(assert (not (Object |4|)))
(assert (not (Max |1|)))
(assert (not (Max |2|)))
(assert (not (Max |3|)))
(assert (not (Max |4|)))
(assert (let ((a!1 (and (exists ((x!0 univ)) (! (no obj1 x!0) :skolemid s!14 :qid q!54))
                (=> (and (no obj1 obj3) (no obj1 obj1)) (and (= obj1 obj3)))
                (=> (and (no obj1 |3|) (no obj1 obj1)) (and (= obj1 |3|)))
                (=> (and (no obj1 obj1) (no obj1 |4|)) (and (= |4| obj1)))
                (=> (and (no obj1 |2|) (no obj1 |3|)) (and (= |3| |2|)))
                (=> (and (no obj1 obj1) (no obj1 |1|)) (and (= |1| obj1)))
                (=> (and (no obj1 |3|) (no obj1 obj3)) (and (= obj3 |3|)))
                (=> (and (no obj1 obj3) (no obj1 obj2)) (and (= obj2 obj3)))
                (=> (and (no obj1 |1|) (no obj1 |4|)) (and (= |4| |1|)))
                (=> (and (no obj1 |4|) (no obj1 |2|)) (and (= |2| |4|)))
                (=> (and (no obj1 obj0) (no obj1 |4|)) (and (= |4| obj0)))
                (=> (and (no obj1 |4|) (no obj1 |3|)) (and (= |3| |4|)))
                (=> (and (no obj1 obj1) (no obj1 obj3)) (and (= obj3 obj1)))
                (=> (and (no obj1 |4|) (no obj1 |4|)) (and (= |4| |4|)))
                (=> (and (no obj1 |1|) (no obj1 obj3)) (and (= obj3 |1|)))
                (=> (and (no obj1 obj2) (no obj1 obj3)) (and (= obj3 obj2)))
                (=> (and (no obj1 |2|) (no obj1 obj3)) (and (= obj3 |2|)))
                (=> (and (no obj1 obj1) (no obj1 |3|)) (and (= |3| obj1)))
                (=> (and (no obj1 obj3) (no obj1 obj3)) (and (= obj3 obj3)))
                (=> (and (no obj1 obj0) (no obj1 obj3)) (and (= obj3 obj0)))
                (=> (and (no obj1 |1|) (no obj1 obj1)) (and (= obj1 |1|)))
                (=> (and (no obj1 obj1) (no obj1 obj0)) (and (= obj0 obj1)))
                (=> (and (no obj1 obj2) (no obj1 |1|)) (and (= |1| obj2)))
                (=> (and (no obj1 |4|) (no obj1 obj0)) (and (= obj0 |4|)))
                (=> (and (no obj1 obj2) (no obj1 obj0)) (and (= obj0 obj2)))
                (=> (and (no obj1 |4|) (no obj1 obj1)) (and (= obj1 |4|)))
                (=> (and (no obj1 |1|) (no obj1 obj2)) (and (= obj2 |1|)))
                (=> (and (no obj1 obj1) (no obj1 obj1)) (and (= obj1 obj1)))
                (=> (and (no obj1 |3|) (no obj1 |3|)) (and (= |3| |3|)))
                (=> (and (no obj1 |1|) (no obj1 |2|)) (and (= |2| |1|)))
                (=> (and (no obj1 |2|) (no obj1 obj1)) (and (= obj1 |2|)))
                (=> (and (no obj1 obj3) (no obj1 |2|)) (and (= |2| obj3)))
                (=> (and (no obj1 obj2) (no obj1 |4|)) (and (= |4| obj2)))
                (=> (and (no obj1 |4|) (no obj1 obj2)) (and (= obj2 |4|)))
                (=> (and (no obj1 obj3) (no obj1 |4|)) (and (= |4| obj3)))
                (=> (and (no obj1 |2|) (no obj1 |2|)) (and (= |2| |2|)))
                (=> (and (no obj1 |3|) (no obj1 |2|)) (and (= |2| |3|)))
                (=> (and (no obj1 obj0) (no obj1 |3|)) (and (= |3| obj0)))
                (=> (and (no obj1 |4|) (no obj1 |1|)) (and (= |1| |4|)))
                (=> (and (no obj1 |3|) (no obj1 obj2)) (and (= obj2 |3|)))
                (=> (and (no obj1 obj1) (no obj1 |2|)) (and (= |2| obj1)))
                (=> (and (no obj1 |4|) (no obj1 obj3)) (and (= obj3 |4|)))
                (=> (and (no obj1 obj2) (no obj1 |2|)) (and (= |2| obj2)))
                (=> (and (no obj1 obj0) (no obj1 obj0)) (and (= obj0 obj0)))
                (=> (and (no obj1 |2|) (no obj1 obj2)) (and (= obj2 |2|)))
                (=> (and (no obj1 |3|) (no obj1 |1|)) (and (= |1| |3|)))
                (=> (and (no obj1 obj1) (no obj1 obj2)) (and (= obj2 obj1)))
                (=> (and (no obj1 obj0) (no obj1 obj2)) (and (= obj2 obj0)))
                (=> (and (no obj1 |3|) (no obj1 obj0)) (and (= obj0 |3|)))
                (=> (and (no obj1 obj0) (no obj1 |2|)) (and (= |2| obj0)))
                (=> (and (no obj1 |1|) (no obj1 |1|)) (and (= |1| |1|)))
                (=> (and (no obj1 |3|) (no obj1 |4|)) (and (= |4| |3|)))
                (=> (and (no obj1 obj2) (no obj1 |3|)) (and (= |3| obj2)))
                (=> (and (no obj1 obj3) (no obj1 obj0)) (and (= obj0 obj3)))
                (=> (and (no obj1 |2|) (no obj1 |1|)) (and (= |1| |2|)))
                (=> (and (no obj1 obj3) (no obj1 |1|)) (and (= |1| obj3)))
                (=> (and (no obj1 obj3) (no obj1 |3|)) (and (= |3| obj3)))
                (=> (and (no obj1 |1|) (no obj1 obj0)) (and (= obj0 |1|)))
                (=> (and (no obj1 obj2) (no obj1 obj2)) (and (= obj2 obj2)))
                (=> (and (no obj1 |2|) (no obj1 |4|)) (and (= |4| |2|)))
                (=> (and (no obj1 obj0) (no obj1 obj1)) (and (= obj1 obj0)))
                (=> (and (no obj1 obj2) (no obj1 obj1)) (and (= obj1 obj2)))
                (=> (and (no obj1 |1|) (no obj1 |3|)) (and (= |3| |1|)))
                (=> (and (no obj1 |2|) (no obj1 obj0)) (and (= obj0 |2|)))
                (=> (and (no obj1 obj0) (no obj1 |1|)) (and (= |1| obj0))))))
  (=> (and (Object obj1)) a!1)))
(assert (let ((a!1 (and (exists ((x!1 univ)) (! (no obj3 x!1) :skolemid s!15 :qid q!55))
                (=> (and (no obj3 |3|) (no obj3 |4|)) (and (= |4| |3|)))
                (=> (and (no obj3 |4|) (no obj3 |1|)) (and (= |1| |4|)))
                (=> (and (no obj3 |1|) (no obj3 |1|)) (and (= |1| |1|)))
                (=> (and (no obj3 |1|) (no obj3 |4|)) (and (= |4| |1|)))
                (=> (and (no obj3 |2|) (no obj3 |2|)) (and (= |2| |2|)))
                (=> (and (no obj3 obj3) (no obj3 obj3)) (and (= obj3 obj3)))
                (=> (and (no obj3 |3|) (no obj3 obj0)) (and (= obj0 |3|)))
                (=> (and (no obj3 obj2) (no obj3 |3|)) (and (= |3| obj2)))
                (=> (and (no obj3 obj2) (no obj3 obj2)) (and (= obj2 obj2)))
                (=> (and (no obj3 obj1) (no obj3 |2|)) (and (= |2| obj1)))
                (=> (and (no obj3 |2|) (no obj3 |3|)) (and (= |3| |2|)))
                (=> (and (no obj3 obj3) (no obj3 |4|)) (and (= |4| obj3)))
                (=> (and (no obj3 obj1) (no obj3 |4|)) (and (= |4| obj1)))
                (=> (and (no obj3 |2|) (no obj3 obj0)) (and (= obj0 |2|)))
                (=> (and (no obj3 obj1) (no obj3 |1|)) (and (= |1| obj1)))
                (=> (and (no obj3 |1|) (no obj3 obj0)) (and (= obj0 |1|)))
                (=> (and (no obj3 |4|) (no obj3 obj3)) (and (= obj3 |4|)))
                (=> (and (no obj3 obj1) (no obj3 obj2)) (and (= obj2 obj1)))
                (=> (and (no obj3 |4|) (no obj3 |4|)) (and (= |4| |4|)))
                (=> (and (no obj3 |3|) (no obj3 obj1)) (and (= obj1 |3|)))
                (=> (and (no obj3 obj0) (no obj3 obj2)) (and (= obj2 obj0)))
                (=> (and (no obj3 |1|) (no obj3 |3|)) (and (= |3| |1|)))
                (=> (and (no obj3 |1|) (no obj3 |2|)) (and (= |2| |1|)))
                (=> (and (no obj3 |3|) (no obj3 obj2)) (and (= obj2 |3|)))
                (=> (and (no obj3 |3|) (no obj3 |2|)) (and (= |2| |3|)))
                (=> (and (no obj3 obj2) (no obj3 |2|)) (and (= |2| obj2)))
                (=> (and (no obj3 obj0) (no obj3 |2|)) (and (= |2| obj0)))
                (=> (and (no obj3 obj3) (no obj3 obj2)) (and (= obj2 obj3)))
                (=> (and (no obj3 |1|) (no obj3 obj1)) (and (= obj1 |1|)))
                (=> (and (no obj3 |2|) (no obj3 |4|)) (and (= |4| |2|)))
                (=> (and (no obj3 |3|) (no obj3 obj3)) (and (= obj3 |3|)))
                (=> (and (no obj3 |4|) (no obj3 obj2)) (and (= obj2 |4|)))
                (=> (and (no obj3 obj0) (no obj3 obj3)) (and (= obj3 obj0)))
                (=> (and (no obj3 obj3) (no obj3 |1|)) (and (= |1| obj3)))
                (=> (and (no obj3 obj3) (no obj3 |2|)) (and (= |2| obj3)))
                (=> (and (no obj3 |1|) (no obj3 obj2)) (and (= obj2 |1|)))
                (=> (and (no obj3 |4|) (no obj3 obj1)) (and (= obj1 |4|)))
                (=> (and (no obj3 |3|) (no obj3 |1|)) (and (= |1| |3|)))
                (=> (and (no obj3 obj3) (no obj3 obj0)) (and (= obj0 obj3)))
                (=> (and (no obj3 |1|) (no obj3 obj3)) (and (= obj3 |1|)))
                (=> (and (no obj3 obj0) (no obj3 |1|)) (and (= |1| obj0)))
                (=> (and (no obj3 |2|) (no obj3 |1|)) (and (= |1| |2|)))
                (=> (and (no obj3 |3|) (no obj3 |3|)) (and (= |3| |3|)))
                (=> (and (no obj3 obj1) (no obj3 obj1)) (and (= obj1 obj1)))
                (=> (and (no obj3 obj0) (no obj3 |4|)) (and (= |4| obj0)))
                (=> (and (no obj3 |4|) (no obj3 |3|)) (and (= |3| |4|)))
                (=> (and (no obj3 obj2) (no obj3 obj1)) (and (= obj1 obj2)))
                (=> (and (no obj3 |4|) (no obj3 |2|)) (and (= |2| |4|)))
                (=> (and (no obj3 |4|) (no obj3 obj0)) (and (= obj0 |4|)))
                (=> (and (no obj3 obj0) (no obj3 obj1)) (and (= obj1 obj0)))
                (=> (and (no obj3 obj2) (no obj3 |4|)) (and (= |4| obj2)))
                (=> (and (no obj3 obj1) (no obj3 |3|)) (and (= |3| obj1)))
                (=> (and (no obj3 |2|) (no obj3 obj1)) (and (= obj1 |2|)))
                (=> (and (no obj3 obj0) (no obj3 obj0)) (and (= obj0 obj0)))
                (=> (and (no obj3 obj2) (no obj3 obj3)) (and (= obj3 obj2)))
                (=> (and (no obj3 obj0) (no obj3 |3|)) (and (= |3| obj0)))
                (=> (and (no obj3 obj3) (no obj3 |3|)) (and (= |3| obj3)))
                (=> (and (no obj3 obj1) (no obj3 obj3)) (and (= obj3 obj1)))
                (=> (and (no obj3 obj2) (no obj3 |1|)) (and (= |1| obj2)))
                (=> (and (no obj3 obj2) (no obj3 obj0)) (and (= obj0 obj2)))
                (=> (and (no obj3 obj1) (no obj3 obj0)) (and (= obj0 obj1)))
                (=> (and (no obj3 |2|) (no obj3 obj3)) (and (= obj3 |2|)))
                (=> (and (no obj3 |2|) (no obj3 obj2)) (and (= obj2 |2|)))
                (=> (and (no obj3 obj3) (no obj3 obj1)) (and (= obj1 obj3))))))
  (=> (and (Object obj3)) a!1)))
(assert (let ((a!1 (and (exists ((x!2 univ)) (! (no obj0 x!2) :skolemid s!16 :qid q!56))
                (=> (and (no obj0 |4|) (no obj0 |3|)) (and (= |3| |4|)))
                (=> (and (no obj0 |2|) (no obj0 |1|)) (and (= |1| |2|)))
                (=> (and (no obj0 |2|) (no obj0 |4|)) (and (= |4| |2|)))
                (=> (and (no obj0 |2|) (no obj0 obj2)) (and (= obj2 |2|)))
                (=> (and (no obj0 obj2) (no obj0 |2|)) (and (= |2| obj2)))
                (=> (and (no obj0 obj2) (no obj0 obj1)) (and (= obj1 obj2)))
                (=> (and (no obj0 obj3) (no obj0 |4|)) (and (= |4| obj3)))
                (=> (and (no obj0 |2|) (no obj0 obj3)) (and (= obj3 |2|)))
                (=> (and (no obj0 obj1) (no obj0 |4|)) (and (= |4| obj1)))
                (=> (and (no obj0 obj3) (no obj0 |2|)) (and (= |2| obj3)))
                (=> (and (no obj0 |2|) (no obj0 |3|)) (and (= |3| |2|)))
                (=> (and (no obj0 obj3) (no obj0 |3|)) (and (= |3| obj3)))
                (=> (and (no obj0 |2|) (no obj0 obj1)) (and (= obj1 |2|)))
                (=> (and (no obj0 |2|) (no obj0 obj0)) (and (= obj0 |2|)))
                (=> (and (no obj0 |3|) (no obj0 obj3)) (and (= obj3 |3|)))
                (=> (and (no obj0 obj2) (no obj0 obj0)) (and (= obj0 obj2)))
                (=> (and (no obj0 |4|) (no obj0 |2|)) (and (= |2| |4|)))
                (=> (and (no obj0 obj1) (no obj0 |1|)) (and (= |1| obj1)))
                (=> (and (no obj0 |1|) (no obj0 obj1)) (and (= obj1 |1|)))
                (=> (and (no obj0 obj3) (no obj0 obj1)) (and (= obj1 obj3)))
                (=> (and (no obj0 obj1) (no obj0 |2|)) (and (= |2| obj1)))
                (=> (and (no obj0 obj3) (no obj0 obj2)) (and (= obj2 obj3)))
                (=> (and (no obj0 obj0) (no obj0 obj1)) (and (= obj1 obj0)))
                (=> (and (no obj0 |1|) (no obj0 obj0)) (and (= obj0 |1|)))
                (=> (and (no obj0 |3|) (no obj0 obj0)) (and (= obj0 |3|)))
                (=> (and (no obj0 obj2) (no obj0 obj3)) (and (= obj3 obj2)))
                (=> (and (no obj0 |3|) (no obj0 |4|)) (and (= |4| |3|)))
                (=> (and (no obj0 |1|) (no obj0 |2|)) (and (= |2| |1|)))
                (=> (and (no obj0 |1|) (no obj0 |1|)) (and (= |1| |1|)))
                (=> (and (no obj0 |1|) (no obj0 obj3)) (and (= obj3 |1|)))
                (=> (and (no obj0 obj2) (no obj0 obj2)) (and (= obj2 obj2)))
                (=> (and (no obj0 |1|) (no obj0 |4|)) (and (= |4| |1|)))
                (=> (and (no obj0 |1|) (no obj0 |3|)) (and (= |3| |1|)))
                (=> (and (no obj0 |3|) (no obj0 |3|)) (and (= |3| |3|)))
                (=> (and (no obj0 obj1) (no obj0 obj1)) (and (= obj1 obj1)))
                (=> (and (no obj0 |2|) (no obj0 |2|)) (and (= |2| |2|)))
                (=> (and (no obj0 |3|) (no obj0 |2|)) (and (= |2| |3|)))
                (=> (and (no obj0 |4|) (no obj0 |4|)) (and (= |4| |4|)))
                (=> (and (no obj0 obj3) (no obj0 obj0)) (and (= obj0 obj3)))
                (=> (and (no obj0 obj3) (no obj0 obj3)) (and (= obj3 obj3)))
                (=> (and (no obj0 |3|) (no obj0 obj2)) (and (= obj2 |3|)))
                (=> (and (no obj0 |4|) (no obj0 obj0)) (and (= obj0 |4|)))
                (=> (and (no obj0 obj0) (no obj0 obj2)) (and (= obj2 obj0)))
                (=> (and (no obj0 obj1) (no obj0 obj3)) (and (= obj3 obj1)))
                (=> (and (no obj0 obj3) (no obj0 |1|)) (and (= |1| obj3)))
                (=> (and (no obj0 obj0) (no obj0 |1|)) (and (= |1| obj0)))
                (=> (and (no obj0 obj2) (no obj0 |1|)) (and (= |1| obj2)))
                (=> (and (no obj0 |3|) (no obj0 obj1)) (and (= obj1 |3|)))
                (=> (and (no obj0 obj1) (no obj0 obj0)) (and (= obj0 obj1)))
                (=> (and (no obj0 obj2) (no obj0 |4|)) (and (= |4| obj2)))
                (=> (and (no obj0 |4|) (no obj0 |1|)) (and (= |1| |4|)))
                (=> (and (no obj0 obj0) (no obj0 |3|)) (and (= |3| obj0)))
                (=> (and (no obj0 obj0) (no obj0 |4|)) (and (= |4| obj0)))
                (=> (and (no obj0 obj1) (no obj0 |3|)) (and (= |3| obj1)))
                (=> (and (no obj0 |1|) (no obj0 obj2)) (and (= obj2 |1|)))
                (=> (and (no obj0 |4|) (no obj0 obj2)) (and (= obj2 |4|)))
                (=> (and (no obj0 obj0) (no obj0 obj3)) (and (= obj3 obj0)))
                (=> (and (no obj0 obj0) (no obj0 |2|)) (and (= |2| obj0)))
                (=> (and (no obj0 obj0) (no obj0 obj0)) (and (= obj0 obj0)))
                (=> (and (no obj0 |3|) (no obj0 |1|)) (and (= |1| |3|)))
                (=> (and (no obj0 |4|) (no obj0 obj3)) (and (= obj3 |4|)))
                (=> (and (no obj0 obj1) (no obj0 obj2)) (and (= obj2 obj1)))
                (=> (and (no obj0 |4|) (no obj0 obj1)) (and (= obj1 |4|)))
                (=> (and (no obj0 obj2) (no obj0 |3|)) (and (= |3| obj2))))))
  (=> (and (Object obj0)) a!1)))
(assert (let ((a!1 (and (exists ((x!3 univ)) (! (no obj2 x!3) :skolemid s!17 :qid q!57))
                (=> (and (no obj2 obj2) (no obj2 obj1)) (and (= obj1 obj2)))
                (=> (and (no obj2 |4|) (no obj2 obj0)) (and (= obj0 |4|)))
                (=> (and (no obj2 |3|) (no obj2 |2|)) (and (= |2| |3|)))
                (=> (and (no obj2 obj3) (no obj2 obj0)) (and (= obj0 obj3)))
                (=> (and (no obj2 |4|) (no obj2 |4|)) (and (= |4| |4|)))
                (=> (and (no obj2 obj2) (no obj2 obj2)) (and (= obj2 obj2)))
                (=> (and (no obj2 obj1) (no obj2 obj0)) (and (= obj0 obj1)))
                (=> (and (no obj2 |3|) (no obj2 obj0)) (and (= obj0 |3|)))
                (=> (and (no obj2 |2|) (no obj2 obj1)) (and (= obj1 |2|)))
                (=> (and (no obj2 |4|) (no obj2 |2|)) (and (= |2| |4|)))
                (=> (and (no obj2 obj3) (no obj2 |1|)) (and (= |1| obj3)))
                (=> (and (no obj2 obj3) (no obj2 obj3)) (and (= obj3 obj3)))
                (=> (and (no obj2 |4|) (no obj2 obj1)) (and (= obj1 |4|)))
                (=> (and (no obj2 |1|) (no obj2 obj1)) (and (= obj1 |1|)))
                (=> (and (no obj2 obj0) (no obj2 obj3)) (and (= obj3 obj0)))
                (=> (and (no obj2 obj1) (no obj2 |2|)) (and (= |2| obj1)))
                (=> (and (no obj2 obj0) (no obj2 |1|)) (and (= |1| obj0)))
                (=> (and (no obj2 |2|) (no obj2 obj3)) (and (= obj3 |2|)))
                (=> (and (no obj2 |2|) (no obj2 |2|)) (and (= |2| |2|)))
                (=> (and (no obj2 obj1) (no obj2 |4|)) (and (= |4| obj1)))
                (=> (and (no obj2 obj0) (no obj2 |4|)) (and (= |4| obj0)))
                (=> (and (no obj2 |2|) (no obj2 |1|)) (and (= |1| |2|)))
                (=> (and (no obj2 |2|) (no obj2 obj2)) (and (= obj2 |2|)))
                (=> (and (no obj2 obj0) (no obj2 |3|)) (and (= |3| obj0)))
                (=> (and (no obj2 obj3) (no obj2 obj1)) (and (= obj1 obj3)))
                (=> (and (no obj2 |1|) (no obj2 |3|)) (and (= |3| |1|)))
                (=> (and (no obj2 obj2) (no obj2 obj0)) (and (= obj0 obj2)))
                (=> (and (no obj2 |3|) (no obj2 |1|)) (and (= |1| |3|)))
                (=> (and (no obj2 obj0) (no obj2 obj1)) (and (= obj1 obj0)))
                (=> (and (no obj2 obj3) (no obj2 |2|)) (and (= |2| obj3)))
                (=> (and (no obj2 |4|) (no obj2 obj2)) (and (= obj2 |4|)))
                (=> (and (no obj2 |1|) (no obj2 obj2)) (and (= obj2 |1|)))
                (=> (and (no obj2 |4|) (no obj2 |1|)) (and (= |1| |4|)))
                (=> (and (no obj2 obj1) (no obj2 |3|)) (and (= |3| obj1)))
                (=> (and (no obj2 |3|) (no obj2 obj3)) (and (= obj3 |3|)))
                (=> (and (no obj2 obj3) (no obj2 |4|)) (and (= |4| obj3)))
                (=> (and (no obj2 obj3) (no obj2 obj2)) (and (= obj2 obj3)))
                (=> (and (no obj2 obj2) (no obj2 |3|)) (and (= |3| obj2)))
                (=> (and (no obj2 |1|) (no obj2 |1|)) (and (= |1| |1|)))
                (=> (and (no obj2 |3|) (no obj2 obj1)) (and (= obj1 |3|)))
                (=> (and (no obj2 |2|) (no obj2 |3|)) (and (= |3| |2|)))
                (=> (and (no obj2 |4|) (no obj2 |3|)) (and (= |3| |4|)))
                (=> (and (no obj2 |1|) (no obj2 obj3)) (and (= obj3 |1|)))
                (=> (and (no obj2 obj1) (no obj2 obj3)) (and (= obj3 obj1)))
                (=> (and (no obj2 obj1) (no obj2 |1|)) (and (= |1| obj1)))
                (=> (and (no obj2 obj3) (no obj2 |3|)) (and (= |3| obj3)))
                (=> (and (no obj2 |3|) (no obj2 |3|)) (and (= |3| |3|)))
                (=> (and (no obj2 obj0) (no obj2 obj2)) (and (= obj2 obj0)))
                (=> (and (no obj2 |1|) (no obj2 |4|)) (and (= |4| |1|)))
                (=> (and (no obj2 obj1) (no obj2 obj2)) (and (= obj2 obj1)))
                (=> (and (no obj2 |1|) (no obj2 obj0)) (and (= obj0 |1|)))
                (=> (and (no obj2 |3|) (no obj2 obj2)) (and (= obj2 |3|)))
                (=> (and (no obj2 |2|) (no obj2 obj0)) (and (= obj0 |2|)))
                (=> (and (no obj2 obj1) (no obj2 obj1)) (and (= obj1 obj1)))
                (=> (and (no obj2 |1|) (no obj2 |2|)) (and (= |2| |1|)))
                (=> (and (no obj2 |4|) (no obj2 obj3)) (and (= obj3 |4|)))
                (=> (and (no obj2 obj2) (no obj2 obj3)) (and (= obj3 obj2)))
                (=> (and (no obj2 obj0) (no obj2 |2|)) (and (= |2| obj0)))
                (=> (and (no obj2 obj2) (no obj2 |2|)) (and (= |2| obj2)))
                (=> (and (no obj2 obj2) (no obj2 |1|)) (and (= |1| obj2)))
                (=> (and (no obj2 obj0) (no obj2 obj0)) (and (= obj0 obj0)))
                (=> (and (no obj2 |2|) (no obj2 |4|)) (and (= |4| |2|)))
                (=> (and (no obj2 obj2) (no obj2 |4|)) (and (= |4| obj2)))
                (=> (and (no obj2 |3|) (no obj2 |4|)) (and (= |4| |3|))))))
  (=> (and (Object obj2)) a!1)))
(assert (let ((a!1 (forall ((x!5 univ))
             (! (and (=> (no obj1 x!5) (no obj1 x!5))
                     (=> (no obj1 x!5) (no obj1 x!5)))
                :qid q!64))))
  (=> (and (Object obj1) (Object obj1) (not (= obj1 obj1))) (not a!1))))
(assert (let ((a!1 (forall ((x!7 univ))
             (! (and (=> (no obj2 x!7) (no obj0 x!7))
                     (=> (no obj0 x!7) (no obj2 x!7)))
                :qid q!66))))
  (=> (and (Object obj2) (Object obj0) (not (= obj2 obj0))) (not a!1))))
(assert (let ((a!1 (forall ((x!15 univ))
             (! (and (=> (no obj3 x!15) (no obj2 x!15))
                     (=> (no obj2 x!15) (no obj3 x!15)))
                :qid q!74))))
  (=> (and (Object obj3) (Object obj2) (not (= obj3 obj2))) (not a!1))))
(assert (let ((a!1 (forall ((x!3 univ))
             (! (and (=> (no obj0 x!3) (no obj2 x!3))
                     (=> (no obj2 x!3) (no obj0 x!3)))
                :qid q!62))))
  (=> (and (Object obj0) (Object obj2) (not (= obj0 obj2))) (not a!1))))
(assert (let ((a!1 (forall ((x!12 univ))
             (! (and (=> (no obj3 x!12) (no obj3 x!12))
                     (=> (no obj3 x!12) (no obj3 x!12)))
                :qid q!71))))
  (=> (and (Object obj3) (Object obj3) (not (= obj3 obj3))) (not a!1))))
(assert (let ((a!1 (forall ((x!8 univ))
             (! (and (=> (no obj1 x!8) (no obj2 x!8))
                     (=> (no obj2 x!8) (no obj1 x!8)))
                :qid q!67))))
  (=> (and (Object obj1) (Object obj2) (not (= obj1 obj2))) (not a!1))))
(assert (let ((a!1 (forall ((x!11 univ))
             (! (and (=> (no obj1 x!11) (no obj3 x!11))
                     (=> (no obj3 x!11) (no obj1 x!11)))
                :qid q!70))))
  (=> (and (Object obj1) (Object obj3) (not (= obj1 obj3))) (not a!1))))
(assert (let ((a!1 (forall ((x!2 univ))
             (! (and (=> (no obj3 x!2) (no obj0 x!2))
                     (=> (no obj0 x!2) (no obj3 x!2)))
                :qid q!61))))
  (=> (and (Object obj3) (Object obj0) (not (= obj3 obj0))) (not a!1))))
(assert (let ((a!1 (forall ((x!9 univ))
             (! (and (=> (no obj0 x!9) (no obj1 x!9))
                     (=> (no obj1 x!9) (no obj0 x!9)))
                :qid q!68))))
  (=> (and (Object obj0) (Object obj1) (not (= obj0 obj1))) (not a!1))))
(assert (let ((a!1 (forall ((x!1 univ))
             (! (and (=> (no obj1 x!1) (no obj0 x!1))
                     (=> (no obj0 x!1) (no obj1 x!1)))
                :qid q!60))))
  (=> (and (Object obj1) (Object obj0) (not (= obj1 obj0))) (not a!1))))
(assert (let ((a!1 (forall ((x!6 univ))
             (! (and (=> (no obj2 x!6) (no obj2 x!6))
                     (=> (no obj2 x!6) (no obj2 x!6)))
                :qid q!65))))
  (=> (and (Object obj2) (Object obj2) (not (= obj2 obj2))) (not a!1))))
(assert (let ((a!1 (forall ((x!14 univ))
             (! (and (=> (no obj0 x!14) (no obj3 x!14))
                     (=> (no obj3 x!14) (no obj0 x!14)))
                :qid q!73))))
  (=> (and (Object obj0) (Object obj3) (not (= obj0 obj3))) (not a!1))))
(assert (let ((a!1 (forall ((x!10 univ))
             (! (and (=> (no obj2 x!10) (no obj1 x!10))
                     (=> (no obj1 x!10) (no obj2 x!10)))
                :qid q!69))))
  (=> (and (Object obj2) (Object obj1) (not (= obj2 obj1))) (not a!1))))
(assert (let ((a!1 (forall ((x!13 univ))
             (! (and (=> (no obj3 x!13) (no obj1 x!13))
                     (=> (no obj1 x!13) (no obj3 x!13)))
                :qid q!72))))
  (=> (and (Object obj3) (Object obj1) (not (= obj3 obj1))) (not a!1))))
(assert (let ((a!1 (forall ((x!0 univ))
             (! (and (=> (no obj2 x!0) (no obj3 x!0))
                     (=> (no obj3 x!0) (no obj2 x!0)))
                :qid q!59))))
  (=> (and (Object obj2) (Object obj3) (not (= obj2 obj3))) (not a!1))))
(assert (let ((a!1 (forall ((x!4 univ))
             (! (and (=> (no obj0 x!4) (no obj0 x!4))
                     (=> (no obj0 x!4) (no obj0 x!4)))
                :qid q!63))))
  (=> (and (Object obj0) (Object obj0) (not (= obj0 obj0))) (not a!1))))
(assert (=> (and (Object obj0)) (bvsge |SUM[(Max . no)]0| (|SUM[(o . no)]16| obj0))))
(assert (=> (and (Object obj1)) (bvsge |SUM[(Max . no)]0| (|SUM[(o . no)]16| obj1))))
(assert (=> (and (Object obj3)) (bvsge |SUM[(Max . no)]0| (|SUM[(o . no)]16| obj3))))
(assert (=> (and (Object obj2)) (bvsge |SUM[(Max . no)]0| (|SUM[(o . no)]16| obj2))))
(assert (=> (no |2| |1|) (and (Object |2|) (Ints |1|))))
(assert (=> (no obj2 |1|) (and (Object obj2) (Ints |1|))))
(assert (=> (no obj2 |3|) (and (Object obj2) (Ints |3|))))
(assert (=> (no obj1 |2|) (and (Object obj1) (Ints |2|))))
(assert (=> (no obj0 obj3) (and (Object obj0) (Ints obj3))))
(assert (=> (no |1| |2|) (and (Object |1|) (Ints |2|))))
(assert (=> (no |4| obj0) (and (Object |4|) (Ints obj0))))
(assert (=> (no |3| obj2) (and (Object |3|) (Ints obj2))))
(assert (=> (no obj3 |4|) (and (Object obj3) (Ints |4|))))
(assert (=> (no |3| obj3) (and (Object |3|) (Ints obj3))))
(assert (=> (no obj3 |1|) (and (Object obj3) (Ints |1|))))
(assert (=> (no |1| |3|) (and (Object |1|) (Ints |3|))))
(assert (=> (no obj0 |3|) (and (Object obj0) (Ints |3|))))
(assert (=> (no obj0 |4|) (and (Object obj0) (Ints |4|))))
(assert (=> (no obj1 obj0) (and (Object obj1) (Ints obj0))))
(assert (=> (no |1| obj2) (and (Object |1|) (Ints obj2))))
(assert (=> (no |1| |4|) (and (Object |1|) (Ints |4|))))
(assert (=> (no |4| obj1) (and (Object |4|) (Ints obj1))))
(assert (=> (no |2| obj2) (and (Object |2|) (Ints obj2))))
(assert (=> (no |3| |2|) (and (Object |3|) (Ints |2|))))
(assert (=> (no |3| |4|) (and (Object |3|) (Ints |4|))))
(assert (=> (no |3| obj0) (and (Object |3|) (Ints obj0))))
(assert (=> (no |4| obj3) (and (Object |4|) (Ints obj3))))
(assert (=> (no obj1 |4|) (and (Object obj1) (Ints |4|))))
(assert (=> (no |2| obj0) (and (Object |2|) (Ints obj0))))
(assert (=> (no obj0 |2|) (and (Object obj0) (Ints |2|))))
(assert (=> (no |1| obj0) (and (Object |1|) (Ints obj0))))
(assert (=> (no obj3 obj0) (and (Object obj3) (Ints obj0))))
(assert (=> (no |4| |1|) (and (Object |4|) (Ints |1|))))
(assert (=> (no obj1 obj3) (and (Object obj1) (Ints obj3))))
(assert (=> (no obj0 |1|) (and (Object obj0) (Ints |1|))))
(assert (=> (no obj2 obj1) (and (Object obj2) (Ints obj1))))
(assert (=> (no |4| |4|) (and (Object |4|) (Ints |4|))))
(assert (=> (no obj3 obj1) (and (Object obj3) (Ints obj1))))
(assert (=> (no obj1 obj2) (and (Object obj1) (Ints obj2))))
(assert (=> (no obj3 |2|) (and (Object obj3) (Ints |2|))))
(assert (=> (no obj0 obj1) (and (Object obj0) (Ints obj1))))
(assert (=> (no obj1 |3|) (and (Object obj1) (Ints |3|))))
(assert (=> (no |3| obj1) (and (Object |3|) (Ints obj1))))
(assert (=> (no |1| obj1) (and (Object |1|) (Ints obj1))))
(assert (=> (no |3| |1|) (and (Object |3|) (Ints |1|))))
(assert (=> (no |1| obj3) (and (Object |1|) (Ints obj3))))
(assert (=> (no obj2 obj0) (and (Object obj2) (Ints obj0))))
(assert (=> (no obj2 obj3) (and (Object obj2) (Ints obj3))))
(assert (=> (no |4| obj2) (and (Object |4|) (Ints obj2))))
(assert (=> (no obj3 |3|) (and (Object obj3) (Ints |3|))))
(assert (=> (no obj3 obj2) (and (Object obj3) (Ints obj2))))
(assert (=> (no |1| |1|) (and (Object |1|) (Ints |1|))))
(assert (=> (no obj2 |2|) (and (Object obj2) (Ints |2|))))
(assert (=> (no obj1 obj1) (and (Object obj1) (Ints obj1))))
(assert (=> (no obj1 |1|) (and (Object obj1) (Ints |1|))))
(assert (=> (no obj0 obj2) (and (Object obj0) (Ints obj2))))
(assert (=> (no obj3 obj3) (and (Object obj3) (Ints obj3))))
(assert (=> (no |3| |3|) (and (Object |3|) (Ints |3|))))
(assert (=> (no |2| obj3) (and (Object |2|) (Ints obj3))))
(assert (=> (no |2| obj1) (and (Object |2|) (Ints obj1))))
(assert (=> (no obj2 |4|) (and (Object obj2) (Ints |4|))))
(assert (=> (no |2| |4|) (and (Object |2|) (Ints |4|))))
(assert (=> (no |4| |2|) (and (Object |4|) (Ints |2|))))
(assert (=> (no |4| |3|) (and (Object |4|) (Ints |3|))))
(assert (=> (no obj0 obj0) (and (Object obj0) (Ints obj0))))
(assert (=> (no |2| |3|) (and (Object |2|) (Ints |3|))))
(assert (=> (no obj2 obj2) (and (Object obj2) (Ints obj2))))
(assert (=> (no |2| |2|) (and (Object |2|) (Ints |2|))))
(assert (exists ((x!0 univ)) (! (Max x!0) :skolemid s!18 :qid q!58)))
(assert (=> (and (Max obj0) (Max obj2)) (and (= obj2 obj0))))
(assert (=> (and (Max obj1) (Max obj2)) (and (= obj2 obj1))))
(assert (=> (and (Max obj2) (Max obj0)) (and (= obj0 obj2))))
(assert (=> (and (Max obj1) (Max obj0)) (and (= obj0 obj1))))
(assert (=> (and (Max obj0) (Max obj0)) (and (= obj0 obj0))))
(assert (=> (and (Max obj0) (Max obj3)) (and (= obj3 obj0))))
(assert (=> (and (Max obj2) (Max obj1)) (and (= obj1 obj2))))
(assert (=> (and (Max obj3) (Max obj3)) (and (= obj3 obj3))))
(assert (=> (and (Max obj0) (Max obj1)) (and (= obj1 obj0))))
(assert (=> (and (Max obj1) (Max obj1)) (and (= obj1 obj1))))
(assert (=> (and (Max obj1) (Max obj3)) (and (= obj3 obj1))))
(assert (=> (and (Max obj2) (Max obj3)) (and (= obj3 obj2))))
(assert (=> (and (Max obj3) (Max obj2)) (and (= obj2 obj3))))
(assert (=> (and (Max obj3) (Max obj0)) (and (= obj0 obj3))))
(assert (=> (and (Max obj3) (Max obj1)) (and (= obj1 obj3))))
(assert (=> (and (Max obj2) (Max obj2)) (and (= obj2 obj2))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj3 #b00110)
   (ite (bvsle #b00110 (|#[(o . no)]17| obj3))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj3 #b00111)
               (|NO[(o . no)]20| obj3 #b00110))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) #b00111)
    (= (|NO[(o . no)]20| obj3 #b00111) (toInt |2|))))
(assert (=> (or (and (Max obj1) (no obj1 obj2))
        (and (Max obj0) (no obj0 obj2))
        (and (Max obj3) (no obj3 obj2))
        (and (Max obj2) (no obj2 obj2)))
    (and (bvsle #b00001 (|ord[(Max . no)]3| obj2))
         (bvsle (|ord[(Max . no)]3| obj2) |#[(Max . no)]1|))))
(assert (=> (no obj3 |1|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj3 |1|))
         (bvsle (|ord[(o . no)]19| obj3 |1|) (|#[(o . no)]17| obj3)))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) (|ord[(o . no)]19| obj0 |1|))
    (and (= obj0 |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj3) (|ord[(Max . no)]3| |1|)) (and (= obj3 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) (|ord[(o . no)]19| obj2 |4|))
    (and (= obj2 |4|))))
(assert (let ((a!1 (exists ((x!26 univ))
             (! (and (= (|ord[(o . no)]19| obj0 x!26) #b00110) (no obj0 x!26))
                :qid q!42))))
  (=> (and (bvsle #b00001 #b00110) (bvsle #b00110 (|#[(o . no)]17| obj0))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) (|ord[(o . no)]19| obj1 |4|))
    (and (= |4| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) #b00111)
    (= (|NO[(o . no)]20| obj0 #b00111) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) (|ord[(o . no)]19| obj2 obj1))
    (and (= obj0 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) #b00010)
    (= (|NO[(o . no)]20| obj0 #b00010) (toInt obj3))))
(assert (=> (no obj2 obj0)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj2 obj0))
         (bvsle (|ord[(o . no)]19| obj2 obj0) (|#[(o . no)]17| obj2)))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) #b00011)
    (= (|NO[(o . no)]20| obj1 #b00011) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) (|ord[(o . no)]19| obj2 |4|))
    (and (= |2| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) (|ord[(o . no)]19| obj1 obj3))
    (and (= |4| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) #b00011)
    (= (|NO[(o . no)]20| obj3 #b00011) (toInt |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj0) (|ord[(Max . no)]3| obj3)) (and (= obj0 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) #b01000)
    (= (|NO[(o . no)]20| obj0 #b01000) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) #b00010)
    (= (|NO[(o . no)]20| obj3 #b00010) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) (|ord[(o . no)]19| obj2 |2|))
    (and (= |1| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) #b00100)
    (= (|NO[(o . no)]20| obj1 #b00100) (toInt obj2))))
(assert (=> (= (|ord[(Max . no)]3| obj2) (|ord[(Max . no)]3| obj3)) (and (= obj2 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) (|ord[(o . no)]19| obj2 |1|))
    (and (= |2| |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) (|ord[(o . no)]19| obj1 |1|))
    (and (= |2| |1|))))
(assert (let ((a!1 (exists ((x!7 univ))
             (! (and (= (|ord[(Max . no)]3| x!7) #b00100)
                     (exists ((x!11 univ))
                       (! (and (Max x!11) (no x!11 x!7)) :skolemid s!5 :qid q!8)))
                :qid q!9))))
  (=> (and (bvsle #b00001 #b00100) (bvsle #b00100 |#[(Max . no)]1|)) a!1)))
(assert (=> (= (|ord[(Max . no)]3| |1|) (|ord[(Max . no)]3| |4|)) (and (= |1| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) #b01000)
    (= (|NO[(o . no)]20| obj3 #b01000) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) (|ord[(o . no)]19| obj3 |3|))
    (and (= obj1 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) #b00110)
    (= (|NO[(o . no)]20| obj1 #b00110) (toInt obj1))))
(assert (=> (= (|ord[(Max . no)]3| obj3) #b01000)
    (= (|NO[(Max . no)]4| #b01000) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) (|ord[(o . no)]19| obj0 obj3))
    (and (= obj3 obj3))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj0 #b00111)
   (ite (bvsle #b00111 (|#[(o . no)]17| obj0))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj0 #b01000)
               (|NO[(o . no)]20| obj0 #b00111))
        #b00000)))
(assert (=> (= (|ord[(Max . no)]3| |4|) (|ord[(Max . no)]3| obj1)) (and (= |4| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) #b00001)
    (= (|NO[(o . no)]20| obj3 #b00001) (toInt obj3))))
(assert (let ((a!1 (exists ((x!22 univ))
             (! (and (= (|ord[(o . no)]19| obj1 x!22) #b01000) (no obj1 x!22))
                :qid q!26))))
  (=> (and (bvsle #b00001 #b01000) (bvsle #b01000 (|#[(o . no)]17| obj1))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) (|ord[(o . no)]19| obj0 obj3))
    (and (= |4| obj3))))
(assert (=> (= (|ord[(Max . no)]3| |2|) (|ord[(Max . no)]3| obj1)) (and (= |2| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) (|ord[(o . no)]19| obj3 obj2))
    (and (= obj1 obj2))))
(assert (= (|SUM_RECURSIVE[(Max . no)]2| #b00111)
   (ite (bvsle #b00111 |#[(Max . no)]1|)
        (bvadd (|SUM_RECURSIVE[(Max . no)]2| #b01000)
               (|NO[(Max . no)]4| #b00111))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) #b00111)
    (= (|NO[(o . no)]20| obj2 #b00111) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) #b00011)
    (= (|NO[(o . no)]20| obj3 #b00011) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) #b00011)
    (= (|NO[(o . no)]20| obj0 #b00011) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) (|ord[(o . no)]19| obj1 obj0))
    (and (= obj0 obj0))))
(assert (=> (no obj3 |3|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj3 |3|))
         (bvsle (|ord[(o . no)]19| obj3 |3|) (|#[(o . no)]17| obj3)))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) (|ord[(o . no)]19| obj1 |2|))
    (and (= obj1 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) #b00011)
    (= (|NO[(o . no)]20| obj3 #b00011) (toInt |4|))))
(assert (=> (no obj3 obj0)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj3 obj0))
         (bvsle (|ord[(o . no)]19| obj3 obj0) (|#[(o . no)]17| obj3)))))
(assert (=> (= (|ord[(Max . no)]3| |2|) #b00011)
    (= (|NO[(Max . no)]4| #b00011) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) (|ord[(o . no)]19| obj0 obj1))
    (and (= |3| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) #b00101)
    (= (|NO[(o . no)]20| obj3 #b00101) (toInt obj0))))
(assert (=> (= (|ord[(Max . no)]3| |3|) (|ord[(Max . no)]3| obj1)) (and (= |3| obj1))))
(assert (=> (= (|ord[(Max . no)]3| obj3) #b00011)
    (= (|NO[(Max . no)]4| #b00011) (toInt obj3))))
(assert (=> (= (|ord[(Max . no)]3| obj1) (|ord[(Max . no)]3| obj1)) (and (= obj1 obj1))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj1 #b00101)
   (ite (bvsle #b00101 (|#[(o . no)]17| obj1))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj1 #b00110)
               (|NO[(o . no)]20| obj1 #b00101))
        #b00000)))
(assert (= (toInt obj0) #b00000))
(assert (=> (= (|ord[(Max . no)]3| obj3) #b00111)
    (= (|NO[(Max . no)]4| #b00111) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) #b00111)
    (= (|NO[(o . no)]20| obj0 #b00111) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) #b00011)
    (= (|NO[(o . no)]20| obj2 #b00011) (toInt obj2))))
(assert (=> (= (|ord[(Max . no)]3| |1|) #b00010)
    (= (|NO[(Max . no)]4| #b00010) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) #b00100)
    (= (|NO[(o . no)]20| obj2 #b00100) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) (|ord[(o . no)]19| obj2 |1|))
    (and (= |3| |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) (|ord[(Max . no)]3| |1|)) (and (= obj2 |1|))))
(assert (= (|SUM_RECURSIVE[(Max . no)]2| #b01000)
   (ite (bvsle #b01000 |#[(Max . no)]1|)
        (bvadd (|SUM_RECURSIVE[(Max . no)]2| #b01001)
               (|NO[(Max . no)]4| #b01000))
        #b00000)))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj0 #b00011)
   (ite (bvsle #b00011 (|#[(o . no)]17| obj0))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj0 #b00100)
               (|NO[(o . no)]20| obj0 #b00011))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) #b00001)
    (= (|NO[(o . no)]20| obj1 #b00001) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) #b00100)
    (= (|NO[(o . no)]20| obj3 #b00100) (toInt |3|))))
(assert (let ((a!1 (exists ((x!28 univ))
             (! (and (= (|ord[(o . no)]19| obj2 x!28) #b01000) (no obj2 x!28))
                :qid q!53))))
  (=> (and (bvsle #b00001 #b01000) (bvsle #b01000 (|#[(o . no)]17| obj2))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) #b00001)
    (= (|NO[(o . no)]20| obj2 #b00001) (toInt obj3))))
(assert (=> (= (|ord[(Max . no)]3| |2|) (|ord[(Max . no)]3| |2|)) (and (= |2| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) #b00100)
    (= (|NO[(o . no)]20| obj0 #b00100) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) (|ord[(o . no)]19| obj1 obj2))
    (and (= obj3 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) #b01000)
    (= (|NO[(o . no)]20| obj0 #b01000) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) (|ord[(o . no)]19| obj0 obj3))
    (and (= obj1 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) (|ord[(o . no)]19| obj0 obj1))
    (and (= |1| obj1))))
(assert (=> (no obj2 obj2)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj2 obj2))
         (bvsle (|ord[(o . no)]19| obj2 obj2) (|#[(o . no)]17| obj2)))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) #b01000)
    (= (|NO[(o . no)]20| obj3 #b01000) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) (|ord[(o . no)]19| obj0 obj0))
    (and (= obj1 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) (|ord[(o . no)]19| obj1 obj1))
    (and (= |4| obj1))))
(assert (=> (= (|ord[(Max . no)]3| |3|) #b00101)
    (= (|NO[(Max . no)]4| #b00101) (toInt |3|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj0 #b00101)
   (ite (bvsle #b00101 (|#[(o . no)]17| obj0))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj0 #b00110)
               (|NO[(o . no)]20| obj0 #b00101))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) #b00110)
    (= (|NO[(o . no)]20| obj2 #b00110) (toInt obj2))))
(assert (=> (no obj0 |1|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj0 |1|))
         (bvsle (|ord[(o . no)]19| obj0 |1|) (|#[(o . no)]17| obj0)))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) #b00001)
    (= (|NO[(o . no)]20| obj0 #b00001) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) #b00101)
    (= (|NO[(o . no)]20| obj0 #b00101) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) #b00110)
    (= (|NO[(o . no)]20| obj2 #b00110) (toInt obj3))))
(assert (= (|SUM_RECURSIVE[(Max . no)]2| #b00011)
   (ite (bvsle #b00011 |#[(Max . no)]1|)
        (bvadd (|SUM_RECURSIVE[(Max . no)]2| #b00100)
               (|NO[(Max . no)]4| #b00011))
        #b00000)))
(assert (=> (no obj3 |2|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj3 |2|))
         (bvsle (|ord[(o . no)]19| obj3 |2|) (|#[(o . no)]17| obj3)))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) (|ord[(o . no)]19| obj3 obj3))
    (and (= obj2 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) #b00101)
    (= (|NO[(o . no)]20| obj2 #b00101) (toInt |2|))))
(assert (= (|SUM_RECURSIVE[(Max . no)]2| #b00101)
   (ite (bvsle #b00101 |#[(Max . no)]1|)
        (bvadd (|SUM_RECURSIVE[(Max . no)]2| #b00110)
               (|NO[(Max . no)]4| #b00101))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) #b00101)
    (= (|NO[(o . no)]20| obj1 #b00101) (toInt obj2))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj1 #b00111)
   (ite (bvsle #b00111 (|#[(o . no)]17| obj1))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj1 #b01000)
               (|NO[(o . no)]20| obj1 #b00111))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) (|ord[(o . no)]19| obj1 obj3))
    (and (= |3| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) #b00001)
    (= (|NO[(o . no)]20| obj3 #b00001) (toInt |4|))))
(assert (=> (= (|ord[(Max . no)]3| obj1) (|ord[(Max . no)]3| |2|)) (and (= obj1 |2|))))
(assert (=> (no obj1 obj2)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj1 obj2))
         (bvsle (|ord[(o . no)]19| obj1 obj2) (|#[(o . no)]17| obj1)))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) #b00110)
    (= (|NO[(o . no)]20| obj0 #b00110) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) (|ord[(o . no)]19| obj0 obj2))
    (and (= obj1 obj2))))
(assert (=> (= (|ord[(Max . no)]3| obj1) #b00110)
    (= (|NO[(Max . no)]4| #b00110) (toInt obj1))))
(assert (=> (= (|ord[(Max . no)]3| |2|) #b00110)
    (= (|NO[(Max . no)]4| #b00110) (toInt |2|))))
(assert (=> (= (|ord[(Max . no)]3| |3|) (|ord[(Max . no)]3| obj0)) (and (= |3| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) #b00101)
    (= (|NO[(o . no)]20| obj3 #b00101) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) #b00111)
    (= (|NO[(o . no)]20| obj1 #b00111) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) (|ord[(o . no)]19| obj3 |3|))
    (and (= |1| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) (|ord[(o . no)]19| obj0 obj1))
    (and (= obj0 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) #b00110)
    (= (|NO[(o . no)]20| obj2 #b00110) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) #b00011)
    (= (|NO[(o . no)]20| obj0 #b00011) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) #b00100)
    (= (|NO[(o . no)]20| obj3 #b00100) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) #b00001)
    (= (|NO[(o . no)]20| obj3 #b00001) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) (|ord[(o . no)]19| obj0 obj2))
    (and (= obj2 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) #b00001)
    (= (|NO[(o . no)]20| obj3 #b00001) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) (|ord[(o . no)]19| obj3 obj0))
    (and (= obj0 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) (|ord[(o . no)]19| obj3 obj1))
    (and (= obj0 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) (|ord[(o . no)]19| obj2 obj2))
    (and (= |3| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) (|ord[(o . no)]19| obj1 obj1))
    (and (= obj1 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) (|ord[(o . no)]19| obj1 |3|))
    (and (= |4| |3|))))
(assert (=> (no obj2 obj1)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj2 obj1))
         (bvsle (|ord[(o . no)]19| obj2 obj1) (|#[(o . no)]17| obj2)))))
(assert (=> (= (|ord[(Max . no)]3| |3|) #b00111)
    (= (|NO[(Max . no)]4| #b00111) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) #b00100)
    (= (|NO[(o . no)]20| obj0 #b00100) (toInt |4|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj3 #b00101)
   (ite (bvsle #b00101 (|#[(o . no)]17| obj3))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj3 #b00110)
               (|NO[(o . no)]20| obj3 #b00101))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) #b01000)
    (= (|NO[(o . no)]20| obj3 #b01000) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) (|ord[(o . no)]19| obj1 obj2))
    (and (= obj1 obj2))))
(assert (=> (= (|ord[(Max . no)]3| |1|) (|ord[(Max . no)]3| |2|)) (and (= |1| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) #b00110)
    (= (|NO[(o . no)]20| obj3 #b00110) (toInt obj3))))
(assert (= (|SUM[(o . no)]16| obj3) (|SUM_RECURSIVE[(o . no)]18| obj3 #b00001)))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) (|ord[(o . no)]19| obj1 |3|))
    (and (= obj2 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) #b00110)
    (= (|NO[(o . no)]20| obj3 #b00110) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) (|ord[(o . no)]19| obj1 |1|))
    (and (= obj3 |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) (|ord[(Max . no)]3| obj1)) (and (= obj2 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) (|ord[(o . no)]19| obj3 |1|))
    (and (= |4| |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj3) (|ord[(Max . no)]3| obj2)) (and (= obj3 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) (|ord[(o . no)]19| obj1 |2|))
    (and (= |2| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) #b01000)
    (= (|NO[(o . no)]20| obj1 #b01000) (toInt obj2))))
(assert (=> (or (and (Max obj1) (no obj1 obj0))
        (and (Max obj0) (no obj0 obj0))
        (and (Max obj3) (no obj3 obj0))
        (and (Max obj2) (no obj2 obj0)))
    (and (bvsle #b00001 (|ord[(Max . no)]3| obj0))
         (bvsle (|ord[(Max . no)]3| obj0) |#[(Max . no)]1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) (|ord[(o . no)]19| obj3 obj3))
    (and (= obj1 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) (|ord[(o . no)]19| obj3 obj1))
    (and (= obj1 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) (|ord[(o . no)]19| obj3 |3|))
    (and (= obj3 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) (|ord[(o . no)]19| obj3 obj3))
    (and (= obj0 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) #b00011)
    (= (|NO[(o . no)]20| obj2 #b00011) (toInt obj3))))
(assert (=> (= (|ord[(Max . no)]3| |4|) #b01000)
    (= (|NO[(Max . no)]4| #b01000) (toInt |4|))))
(assert (let ((a!1 (exists ((x!24 univ))
             (! (and (= (|ord[(o . no)]19| obj3 x!24) #b00101) (no obj3 x!24))
                :qid q!32))))
  (=> (and (bvsle #b00001 #b00101) (bvsle #b00101 (|#[(o . no)]17| obj3))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) #b00111)
    (= (|NO[(o . no)]20| obj1 #b00111) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) (|ord[(o . no)]19| obj0 obj2))
    (and (= |4| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) #b00110)
    (= (|NO[(o . no)]20| obj0 #b00110) (toInt |4|))))
(assert (=> (= (|ord[(Max . no)]3| obj0) #b00101)
    (= (|NO[(Max . no)]4| #b00101) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) (|ord[(o . no)]19| obj3 obj0))
    (and (= |3| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) (|ord[(o . no)]19| obj3 |3|))
    (and (= obj0 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) (|ord[(o . no)]19| obj3 |2|))
    (and (= |4| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) (|ord[(o . no)]19| obj3 obj3))
    (and (= |3| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) (|ord[(o . no)]19| obj0 |2|))
    (and (= obj1 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) #b00111)
    (= (|NO[(o . no)]20| obj2 #b00111) (toInt |2|))))
(assert (=> (or (and (Max obj1) (no obj1 obj1))
        (and (Max obj3) (no obj3 obj1))
        (and (Max obj2) (no obj2 obj1))
        (and (Max obj0) (no obj0 obj1)))
    (and (bvsle #b00001 (|ord[(Max . no)]3| obj1))
         (bvsle (|ord[(Max . no)]3| obj1) |#[(Max . no)]1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) #b00111)
    (= (|NO[(o . no)]20| obj2 #b00111) (toInt obj3))))
(assert (=> (or (and (Max obj1) (no obj1 |2|))
        (and (Max obj0) (no obj0 |2|))
        (and (Max obj3) (no obj3 |2|))
        (and (Max obj2) (no obj2 |2|)))
    (and (bvsle #b00001 (|ord[(Max . no)]3| |2|))
         (bvsle (|ord[(Max . no)]3| |2|) |#[(Max . no)]1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) #b00111)
    (= (|NO[(o . no)]20| obj1 #b00111) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) #b00111)
    (= (|NO[(o . no)]20| obj0 #b00111) (toInt obj0))))
(assert (=> (= (|ord[(Max . no)]3| obj1) (|ord[(Max . no)]3| obj3)) (and (= obj1 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) (|ord[(o . no)]19| obj1 obj1))
    (and (= |1| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) #b00011)
    (= (|NO[(o . no)]20| obj3 #b00011) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) (|ord[(o . no)]19| obj2 obj3))
    (and (= obj2 obj3))))
(assert (=> (= (|ord[(Max . no)]3| |4|) #b00110)
    (= (|NO[(Max . no)]4| #b00110) (toInt |4|))))
(assert (=> (= (|ord[(Max . no)]3| |2|) (|ord[(Max . no)]3| |4|)) (and (= |2| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) (|ord[(o . no)]19| obj2 |1|))
    (and (= obj2 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) #b00011)
    (= (|NO[(o . no)]20| obj1 #b00011) (toInt obj2))))
(assert (let ((a!1 (exists ((x!22 univ))
             (! (and (= (|ord[(o . no)]19| obj1 x!22) #b00001) (no obj1 x!22))
                :qid q!19))))
  (=> (and (bvsle #b00001 #b00001) (bvsle #b00001 (|#[(o . no)]17| obj1))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) (|ord[(o . no)]19| obj2 |3|))
    (and (= |2| |3|))))
(assert (=> (= (|ord[(Max . no)]3| |1|) #b00110)
    (= (|NO[(Max . no)]4| #b00110) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) (|ord[(o . no)]19| obj3 |4|))
    (and (= |2| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) (|ord[(o . no)]19| obj3 |1|))
    (and (= obj2 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) (|ord[(o . no)]19| obj0 obj0))
    (and (= obj0 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) #b00100)
    (= (|NO[(o . no)]20| obj3 #b00100) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) #b01000)
    (= (|NO[(o . no)]20| obj1 #b01000) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) #b00100)
    (= (|NO[(o . no)]20| obj1 #b00100) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) #b00101)
    (= (|NO[(o . no)]20| obj1 #b00101) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) (|ord[(o . no)]19| obj2 obj3))
    (and (= |3| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) (|ord[(o . no)]19| obj0 |4|))
    (and (= |2| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) #b00011)
    (= (|NO[(o . no)]20| obj0 #b00011) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) (|ord[(o . no)]19| obj0 obj2))
    (and (= |1| obj2))))
(assert (=> (no obj2 |1|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj2 |1|))
         (bvsle (|ord[(o . no)]19| obj2 |1|) (|#[(o . no)]17| obj2)))))
(assert (= (|SUM_RECURSIVE[(Max . no)]2| #b00001)
   (ite (bvsle #b00001 |#[(Max . no)]1|)
        (bvadd (|SUM_RECURSIVE[(Max . no)]2| #b00010)
               (|NO[(Max . no)]4| #b00001))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) (|ord[(o . no)]19| obj0 obj2))
    (and (= obj3 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) (|ord[(o . no)]19| obj2 |3|))
    (and (= obj2 |3|))))
(assert (=> (= (|ord[(Max . no)]3| obj1) #b00010)
    (= (|NO[(Max . no)]4| #b00010) (toInt obj1))))
(assert (=> (no obj1 obj1)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj1 obj1))
         (bvsle (|ord[(o . no)]19| obj1 obj1) (|#[(o . no)]17| obj1)))))
(assert (=> (= (|ord[(Max . no)]3| obj3) #b00010)
    (= (|NO[(Max . no)]4| #b00010) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) (|ord[(o . no)]19| obj1 obj0))
    (and (= obj3 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) (|ord[(o . no)]19| obj2 obj2))
    (and (= |1| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) #b00100)
    (= (|NO[(o . no)]20| obj2 #b00100) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) (|ord[(o . no)]19| obj0 obj2))
    (and (= |3| obj2))))
(assert (=> (= (|ord[(Max . no)]3| obj3) #b00100)
    (= (|NO[(Max . no)]4| #b00100) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) #b00011)
    (= (|NO[(o . no)]20| obj3 #b00011) (toInt obj2))))
(assert (=> (no obj0 obj2)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj0 obj2))
         (bvsle (|ord[(o . no)]19| obj0 obj2) (|#[(o . no)]17| obj0)))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj2 #b00010)
   (ite (bvsle #b00010 (|#[(o . no)]17| obj2))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj2 #b00011)
               (|NO[(o . no)]20| obj2 #b00010))
        #b00000)))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj2 #b00110)
   (ite (bvsle #b00110 (|#[(o . no)]17| obj2))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj2 #b00111)
               (|NO[(o . no)]20| obj2 #b00110))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) #b01000)
    (= (|NO[(o . no)]20| obj2 #b01000) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) (|ord[(o . no)]19| obj3 |1|))
    (and (= |1| |1|))))
(assert (=> (= (|ord[(Max . no)]3| |3|) (|ord[(Max . no)]3| obj3)) (and (= |3| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) (|ord[(o . no)]19| obj1 obj3))
    (and (= |2| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) #b00001)
    (= (|NO[(o . no)]20| obj0 #b00001) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) #b00111)
    (= (|NO[(o . no)]20| obj3 #b00111) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) (|ord[(o . no)]19| obj0 |2|))
    (and (= |2| |2|))))
(assert (let ((a!1 (exists ((x!28 univ))
             (! (and (= (|ord[(o . no)]19| obj2 x!28) #b00100) (no obj2 x!28))
                :qid q!49))))
  (=> (and (bvsle #b00001 #b00100) (bvsle #b00100 (|#[(o . no)]17| obj2))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) (|ord[(o . no)]19| obj2 |2|))
    (and (= obj0 |2|))))
(assert (=> (= (|ord[(Max . no)]3| obj1) (|ord[(Max . no)]3| obj2)) (and (= obj1 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) (|ord[(o . no)]19| obj1 obj3))
    (and (= obj0 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) #b01000)
    (= (|NO[(o . no)]20| obj0 #b01000) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) #b00100)
    (= (|NO[(o . no)]20| obj0 #b00100) (toInt obj0))))
(assert (=> (= (|ord[(Max . no)]3| obj0) #b00010)
    (= (|NO[(Max . no)]4| #b00010) (toInt obj0))))
(assert (Ints |4|))
(assert (= (toInt |2|) #b00010))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) (|ord[(o . no)]19| obj3 |4|))
    (and (= |3| |4|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj3 #b00001)
   (ite (bvsle #b00001 (|#[(o . no)]17| obj3))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj3 #b00010)
               (|NO[(o . no)]20| obj3 #b00001))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) #b00110)
    (= (|NO[(o . no)]20| obj1 #b00110) (toInt obj0))))
(assert (=> (= (|ord[(Max . no)]3| |2|) #b00111)
    (= (|NO[(Max . no)]4| #b00111) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) (|ord[(o . no)]19| obj1 |2|))
    (and (= obj2 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) #b01000)
    (= (|NO[(o . no)]20| obj2 #b01000) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) #b00010)
    (= (|NO[(o . no)]20| obj0 #b00010) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) #b00100)
    (= (|NO[(o . no)]20| obj0 #b00100) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) (|ord[(o . no)]19| obj1 obj2))
    (and (= obj0 obj2))))
(assert (not (Ints obj1)))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj3 #b01000)
   (ite (bvsle #b01000 (|#[(o . no)]17| obj3))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj3 #b01001)
               (|NO[(o . no)]20| obj3 #b01000))
        #b00000)))
(assert (= (|SUM[(o . no)]16| obj2) (|SUM_RECURSIVE[(o . no)]18| obj2 #b00001)))
(assert (=> (= (|ord[(Max . no)]3| obj3) (|ord[(Max . no)]3| |2|)) (and (= obj3 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) (|ord[(o . no)]19| obj2 obj0))
    (and (= obj2 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) #b01000)
    (= (|NO[(o . no)]20| obj3 #b01000) (toInt |4|))))
(assert (=> (= (|ord[(Max . no)]3| |4|) #b00100)
    (= (|NO[(Max . no)]4| #b00100) (toInt |4|))))
(assert (=> (= (|#[(o . no)]17| obj1) #b00000)
    (and (not (no obj1 |1|))
         (not (no obj1 |2|))
         (not (no obj1 obj2))
         (not (no obj1 obj1))
         (not (no obj1 obj0))
         (not (no obj1 obj3))
         (not (no obj1 |3|))
         (not (no obj1 |4|)))))
(assert (=> (not (exists ((x!21 univ)) (! (no obj1 x!21) :skolemid s!10 :qid q!18)))
    (= (|#[(o . no)]17| obj1) #b00000)))
(assert (=> (= (|ord[(Max . no)]3| obj0) (|ord[(Max . no)]3| |2|)) (and (= obj0 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) #b00010)
    (= (|NO[(o . no)]20| obj2 #b00010) (toInt |3|))))
(assert (=> (= (|ord[(Max . no)]3| obj0) (|ord[(Max . no)]3| obj2)) (and (= obj0 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) (|ord[(o . no)]19| obj2 obj0))
    (and (= |2| obj0))))
(assert (=> (= (|ord[(Max . no)]3| |4|) (|ord[(Max . no)]3| |4|)) (and (= |4| |4|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj0 #b00100)
   (ite (bvsle #b00100 (|#[(o . no)]17| obj0))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj0 #b00101)
               (|NO[(o . no)]20| obj0 #b00100))
        #b00000)))
(assert (=> (= (|ord[(Max . no)]3| |1|) (|ord[(Max . no)]3| |3|)) (and (= |1| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) #b01000)
    (= (|NO[(o . no)]20| obj1 #b01000) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) (|ord[(o . no)]19| obj0 obj1))
    (and (= |4| obj1))))
(assert (=> (= (|ord[(Max . no)]3| |1|) #b00001)
    (= (|NO[(Max . no)]4| #b00001) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) (|ord[(o . no)]19| obj3 obj0))
    (and (= |1| obj0))))
(assert (let ((a!1 (exists ((x!26 univ))
             (! (and (= (|ord[(o . no)]19| obj0 x!26) #b00010) (no obj0 x!26))
                :qid q!38))))
  (=> (and (bvsle #b00001 #b00010) (bvsle #b00010 (|#[(o . no)]17| obj0))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) (|ord[(o . no)]19| obj2 obj0))
    (and (= obj0 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) #b00111)
    (= (|NO[(o . no)]20| obj2 #b00111) (toInt obj1))))
(assert (=> (= (|ord[(Max . no)]3| obj2) #b00100)
    (= (|NO[(Max . no)]4| #b00100) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) #b00110)
    (= (|NO[(o . no)]20| obj1 #b00110) (toInt |1|))))
(assert (let ((a!1 (exists ((x!24 univ))
             (! (and (= (|ord[(o . no)]19| obj3 x!24) #b01000) (no obj3 x!24))
                :qid q!35))))
  (=> (and (bvsle #b00001 #b01000) (bvsle #b01000 (|#[(o . no)]17| obj3))) a!1)))
(assert (let ((a!1 (exists ((x!28 univ))
             (! (and (= (|ord[(o . no)]19| obj2 x!28) #b00010) (no obj2 x!28))
                :qid q!47))))
  (=> (and (bvsle #b00001 #b00010) (bvsle #b00010 (|#[(o . no)]17| obj2))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) (|ord[(o . no)]19| obj1 |4|))
    (and (= |2| |4|))))
(assert (let ((a!1 (exists ((x!28 univ))
             (! (and (= (|ord[(o . no)]19| obj2 x!28) #b00111) (no obj2 x!28))
                :qid q!52))))
  (=> (and (bvsle #b00001 #b00111) (bvsle #b00111 (|#[(o . no)]17| obj2))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) #b00110)
    (= (|NO[(o . no)]20| obj0 #b00110) (toInt |3|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) (|ord[(Max . no)]3| |2|)) (and (= obj2 |2|))))
(assert (let ((a!1 (exists ((x!24 univ))
             (! (and (= (|ord[(o . no)]19| obj3 x!24) #b00011) (no obj3 x!24))
                :qid q!30))))
  (=> (and (bvsle #b00001 #b00011) (bvsle #b00011 (|#[(o . no)]17| obj3))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) (|ord[(o . no)]19| obj0 |1|))
    (and (= obj2 |1|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj1 #b00110)
   (ite (bvsle #b00110 (|#[(o . no)]17| obj1))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj1 #b00111)
               (|NO[(o . no)]20| obj1 #b00110))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) (|ord[(o . no)]19| obj0 |1|))
    (and (= |2| |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) #b00111)
    (= (|NO[(Max . no)]4| #b00111) (toInt obj2))))
(assert (let ((a!1 (exists ((x!26 univ))
             (! (and (= (|ord[(o . no)]19| obj0 x!26) #b01000) (no obj0 x!26))
                :qid q!44))))
  (=> (and (bvsle #b00001 #b01000) (bvsle #b01000 (|#[(o . no)]17| obj0))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) (|ord[(o . no)]19| obj2 obj2))
    (and (= obj3 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) (|ord[(o . no)]19| obj2 obj2))
    (and (= |2| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) (|ord[(o . no)]19| obj3 obj2))
    (and (= obj2 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) #b01000)
    (= (|NO[(o . no)]20| obj0 #b01000) (toInt obj2))))
(assert (=> (= (|ord[(Max . no)]3| |3|) (|ord[(Max . no)]3| |4|)) (and (= |3| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) (|ord[(o . no)]19| obj0 |4|))
    (and (= |1| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) (|ord[(o . no)]19| obj2 |3|))
    (and (= |1| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) #b00111)
    (= (|NO[(o . no)]20| obj1 #b00111) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) #b00010)
    (= (|NO[(o . no)]20| obj1 #b00010) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) #b00010)
    (= (|NO[(o . no)]20| obj3 #b00010) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) #b00110)
    (= (|NO[(o . no)]20| obj0 #b00110) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) #b00001)
    (= (|NO[(o . no)]20| obj1 #b00001) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) #b00100)
    (= (|NO[(o . no)]20| obj0 #b00100) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) (|ord[(o . no)]19| obj2 |3|))
    (and (= obj1 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) (|ord[(o . no)]19| obj1 obj1))
    (and (= obj2 obj1))))
(assert (=> (= (|ord[(Max . no)]3| |4|) (|ord[(Max . no)]3| obj3)) (and (= |4| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) #b00101)
    (= (|NO[(o . no)]20| obj2 #b00101) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) (|ord[(o . no)]19| obj2 |2|))
    (and (= obj2 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) #b00010)
    (= (|NO[(o . no)]20| obj2 #b00010) (toInt |1|))))
(assert (=> (= (|ord[(Max . no)]3| |4|) (|ord[(Max . no)]3| obj0)) (and (= |4| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) #b00011)
    (= (|NO[(o . no)]20| obj0 #b00011) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) (|ord[(o . no)]19| obj2 |4|))
    (and (= |4| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) (|ord[(o . no)]19| obj1 obj0))
    (and (= |2| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) #b00011)
    (= (|NO[(o . no)]20| obj2 #b00011) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) #b00001)
    (= (|NO[(o . no)]20| obj2 #b00001) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) #b00011)
    (= (|NO[(o . no)]20| obj2 #b00011) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) (|ord[(o . no)]19| obj2 obj3))
    (and (= |1| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) #b00001)
    (= (|NO[(o . no)]20| obj2 #b00001) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) #b01000)
    (= (|NO[(o . no)]20| obj1 #b01000) (toInt |3|))))
(assert (=> (= (|ord[(Max . no)]3| obj3) #b00001)
    (= (|NO[(Max . no)]4| #b00001) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) (|ord[(o . no)]19| obj1 |3|))
    (and (= |2| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) (|ord[(o . no)]19| obj1 obj0))
    (and (= |1| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) (|ord[(o . no)]19| obj3 obj1))
    (and (= obj2 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) (|ord[(o . no)]19| obj1 |2|))
    (and (= |1| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) #b00100)
    (= (|NO[(o . no)]20| obj1 #b00100) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) (|ord[(o . no)]19| obj2 |1|))
    (and (= |1| |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) (|ord[(o . no)]19| obj1 obj3))
    (and (= |1| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) #b01000)
    (= (|NO[(o . no)]20| obj3 #b01000) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) #b00001)
    (= (|NO[(o . no)]20| obj3 #b00001) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) #b00110)
    (= (|NO[(o . no)]20| obj2 #b00110) (toInt obj0))))
(assert (let ((a!1 (exists ((x!7 univ))
             (! (and (= (|ord[(Max . no)]3| x!7) #b00001)
                     (exists ((x!8 univ))
                       (! (and (Max x!8) (no x!8 x!7)) :skolemid s!2 :qid q!2)))
                :qid q!3))))
  (=> (and (bvsle #b00001 #b00001) (bvsle #b00001 |#[(Max . no)]1|)) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) (|ord[(o . no)]19| obj3 obj1))
    (and (= obj3 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) #b00011)
    (= (|NO[(o . no)]20| obj0 #b00011) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) #b00100)
    (= (|NO[(o . no)]20| obj3 #b00100) (toInt |4|))))
(assert (=> (= (|ord[(Max . no)]3| obj3) (|ord[(Max . no)]3| |3|)) (and (= obj3 |3|))))
(assert (=> (= (|ord[(Max . no)]3| |4|) #b00011)
    (= (|NO[(Max . no)]4| #b00011) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) (|ord[(o . no)]19| obj0 |2|))
    (and (= obj0 |2|))))
(assert (not (Ints obj2)))
(assert (let ((a!1 (exists ((x!7 univ))
             (! (and (= (|ord[(Max . no)]3| x!7) #b01000)
                     (exists ((x!15 univ))
                       (! (and (Max x!15) (no x!15 x!7))
                          :skolemid s!9
                          :qid q!16)))
                :qid q!17))))
  (=> (and (bvsle #b00001 #b01000) (bvsle #b01000 |#[(Max . no)]1|)) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) (|ord[(o . no)]19| obj3 |2|))
    (and (= |2| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) #b00111)
    (= (|NO[(o . no)]20| obj0 #b00111) (toInt |3|))))
(assert (=> (= (|ord[(Max . no)]3| obj0) (|ord[(Max . no)]3| |4|)) (and (= obj0 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) (|ord[(o . no)]19| obj3 obj1))
    (and (= |2| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) #b00010)
    (= (|NO[(o . no)]20| obj3 #b00010) (toInt obj1))))
(assert (=> (no obj0 |3|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj0 |3|))
         (bvsle (|ord[(o . no)]19| obj0 |3|) (|#[(o . no)]17| obj0)))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) (|ord[(o . no)]19| obj0 obj0))
    (and (= obj3 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) (|ord[(o . no)]19| obj1 |3|))
    (and (= obj3 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) (|ord[(o . no)]19| obj0 |1|))
    (and (= |1| |1|))))
(assert (=> (no obj0 |4|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj0 |4|))
         (bvsle (|ord[(o . no)]19| obj0 |4|) (|#[(o . no)]17| obj0)))))
(assert (=> (= (|ord[(Max . no)]3| obj1) #b01000)
    (= (|NO[(Max . no)]4| #b01000) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) #b00001)
    (= (|NO[(o . no)]20| obj3 #b00001) (toInt |2|))))
(assert (let ((a!1 (not (or (and (Max obj1) (no obj1 obj3))
                    (and (Max obj3) (no obj3 obj3))
                    (and (Max obj2) (no obj2 obj3))
                    (and (Max obj0) (no obj0 obj3)))))
      (a!2 (not (or (and (Max obj2) (no obj2 |1|))
                    (and (Max obj0) (no obj0 |1|))
                    (and (Max obj3) (no obj3 |1|))
                    (and (Max obj1) (no obj1 |1|)))))
      (a!3 (not (or (and (Max obj3) (no obj3 |4|))
                    (and (Max obj0) (no obj0 |4|))
                    (and (Max obj2) (no obj2 |4|))
                    (and (Max obj1) (no obj1 |4|)))))
      (a!4 (not (or (and (Max obj1) (no obj1 |2|))
                    (and (Max obj0) (no obj0 |2|))
                    (and (Max obj3) (no obj3 |2|))
                    (and (Max obj2) (no obj2 |2|)))))
      (a!5 (not (or (and (Max obj0) (no obj0 |3|))
                    (and (Max obj3) (no obj3 |3|))
                    (and (Max obj1) (no obj1 |3|))
                    (and (Max obj2) (no obj2 |3|)))))
      (a!6 (not (or (and (Max obj1) (no obj1 obj0))
                    (and (Max obj0) (no obj0 obj0))
                    (and (Max obj3) (no obj3 obj0))
                    (and (Max obj2) (no obj2 obj0)))))
      (a!7 (not (or (and (Max obj1) (no obj1 obj1))
                    (and (Max obj3) (no obj3 obj1))
                    (and (Max obj2) (no obj2 obj1))
                    (and (Max obj0) (no obj0 obj1)))))
      (a!8 (not (or (and (Max obj1) (no obj1 obj2))
                    (and (Max obj0) (no obj0 obj2))
                    (and (Max obj3) (no obj3 obj2))
                    (and (Max obj2) (no obj2 obj2))))))
  (=> (= |#[(Max . no)]1| #b00000) (and a!1 a!2 a!3 a!4 a!5 a!6 a!7 a!8))))
(assert (let ((a!1 (exists ((x!5 univ))
             (! (exists ((x!6 univ))
                  (! (and (Max x!6) (no x!6 x!5)) :skolemid s!0 :qid q!0))
                :skolemid s!1
                :qid q!1))))
  (=> (not a!1) (= |#[(Max . no)]1| #b00000))))
(assert (=> (= (|ord[(Max . no)]3| |4|) (|ord[(Max . no)]3| obj2)) (and (= |4| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) (|ord[(o . no)]19| obj1 |4|))
    (and (= obj3 |4|))))
(assert (=> (= (|#[(o . no)]17| obj3) #b00000)
    (and (not (no obj3 |1|))
         (not (no obj3 obj1))
         (not (no obj3 obj0))
         (not (no obj3 obj2))
         (not (no obj3 |2|))
         (not (no obj3 |4|))
         (not (no obj3 obj3))
         (not (no obj3 |3|)))))
(assert (=> (not (exists ((x!23 univ)) (! (no obj3 x!23) :skolemid s!11 :qid q!27)))
    (= (|#[(o . no)]17| obj3) #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) (|ord[(o . no)]19| obj3 |3|))
    (and (= |4| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) #b00011)
    (= (|NO[(o . no)]20| obj0 #b00011) (toInt |3|))))
(assert (=> (no obj1 |2|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj1 |2|))
         (bvsle (|ord[(o . no)]19| obj1 |2|) (|#[(o . no)]17| obj1)))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) #b00111)
    (= (|NO[(o . no)]20| obj3 #b00111) (toInt obj1))))
(assert (=> (= (|ord[(Max . no)]3| |2|) #b01000)
    (= (|NO[(Max . no)]4| #b01000) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) #b00001)
    (= (|NO[(o . no)]20| obj1 #b00001) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) #b00001)
    (= (|NO[(o . no)]20| obj0 #b00001) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) (|ord[(o . no)]19| obj2 |1|))
    (and (= |4| |1|))))
(assert (let ((a!1 (exists ((x!24 univ))
             (! (and (= (|ord[(o . no)]19| obj3 x!24) #b00110) (no obj3 x!24))
                :qid q!33))))
  (=> (and (bvsle #b00001 #b00110) (bvsle #b00110 (|#[(o . no)]17| obj3))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) (|ord[(o . no)]19| obj2 obj1))
    (and (= |3| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) (|ord[(o . no)]19| obj0 |4|))
    (and (= obj3 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) #b00011)
    (= (|NO[(o . no)]20| obj2 #b00011) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) (|ord[(o . no)]19| obj2 |3|))
    (and (= |3| |3|))))
(assert (=> (= (|ord[(Max . no)]3| |2|) (|ord[(Max . no)]3| obj2)) (and (= |2| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) (|ord[(o . no)]19| obj0 |1|))
    (and (= |4| |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) (|ord[(o . no)]19| obj1 |1|))
    (and (= |3| |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) (|ord[(o . no)]19| obj3 |2|))
    (and (= obj2 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) (|ord[(o . no)]19| obj0 |4|))
    (and (= |3| |4|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj1 #b00100)
   (ite (bvsle #b00100 (|#[(o . no)]17| obj1))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj1 #b00101)
               (|NO[(o . no)]20| obj1 #b00100))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) (|ord[(o . no)]19| obj0 obj0))
    (and (= obj2 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) (|ord[(o . no)]19| obj1 |2|))
    (and (= |4| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) #b00111)
    (= (|NO[(o . no)]20| obj3 #b00111) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) #b00001)
    (= (|NO[(o . no)]20| obj2 #b00001) (toInt obj2))))
(assert (=> (= (|ord[(Max . no)]3| obj3) (|ord[(Max . no)]3| obj3)) (and (= obj3 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) #b00011)
    (= (|NO[(o . no)]20| obj2 #b00011) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) (|ord[(o . no)]19| obj3 |1|))
    (and (= |2| |1|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) (|ord[(o . no)]19| obj0 obj0))
    (and (= |3| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) (|ord[(o . no)]19| obj0 obj2))
    (and (= |2| obj2))))
(assert (Ints |1|))
(assert (not (Ints obj3)))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) (|ord[(o . no)]19| obj2 |2|))
    (and (= |4| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) (|ord[(o . no)]19| obj2 obj2))
    (and (= |4| obj2))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj1 #b00011)
   (ite (bvsle #b00011 (|#[(o . no)]17| obj1))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj1 #b00100)
               (|NO[(o . no)]20| obj1 #b00011))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) #b00100)
    (= (|NO[(o . no)]20| obj2 #b00100) (toInt |2|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) (|ord[(Max . no)]3| obj2)) (and (= obj2 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) #b00010)
    (= (|NO[(o . no)]20| obj0 #b00010) (toInt obj0))))
(assert (let ((a!1 (exists ((x!26 univ))
             (! (and (= (|ord[(o . no)]19| obj0 x!26) #b00100) (no obj0 x!26))
                :qid q!40))))
  (=> (and (bvsle #b00001 #b00100) (bvsle #b00100 (|#[(o . no)]17| obj0))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) (|ord[(o . no)]19| obj0 |2|))
    (and (= |4| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) #b00111)
    (= (|NO[(o . no)]20| obj2 #b00111) (toInt obj0))))
(assert (=> (= (|ord[(Max . no)]3| |3|) #b01000)
    (= (|NO[(Max . no)]4| #b01000) (toInt |3|))))
(assert (=> (no obj3 |4|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj3 |4|))
         (bvsle (|ord[(o . no)]19| obj3 |4|) (|#[(o . no)]17| obj3)))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) #b00010)
    (= (|NO[(o . no)]20| obj2 #b00010) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) (|ord[(o . no)]19| obj0 obj1))
    (and (= |2| obj1))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj0 #b00110)
   (ite (bvsle #b00110 (|#[(o . no)]17| obj0))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj0 #b00111)
               (|NO[(o . no)]20| obj0 #b00110))
        #b00000)))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj2 #b00001)
   (ite (bvsle #b00001 (|#[(o . no)]17| obj2))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj2 #b00010)
               (|NO[(o . no)]20| obj2 #b00001))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) (|ord[(o . no)]19| obj1 obj2))
    (and (= |4| obj2))))
(assert (=> (= (|ord[(Max . no)]3| |4|) #b00010)
    (= (|NO[(Max . no)]4| #b00010) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) #b00110)
    (= (|NO[(o . no)]20| obj0 #b00110) (toInt obj2))))
(assert (=> (= (|ord[(Max . no)]3| obj0) (|ord[(Max . no)]3| obj0)) (and (= obj0 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) #b00010)
    (= (|NO[(o . no)]20| obj3 #b00010) (toInt obj0))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj2 #b00101)
   (ite (bvsle #b00101 (|#[(o . no)]17| obj2))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj2 #b00110)
               (|NO[(o . no)]20| obj2 #b00101))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) #b00001)
    (= (|NO[(o . no)]20| obj3 #b00001) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) (|ord[(o . no)]19| obj0 obj1))
    (and (= obj2 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) #b00110)
    (= (|NO[(o . no)]20| obj1 #b00110) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) #b00101)
    (= (|NO[(o . no)]20| obj2 #b00101) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) #b00011)
    (= (|NO[(o . no)]20| obj1 #b00011) (toInt obj0))))
(assert (=> (no obj0 obj0)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj0 obj0))
         (bvsle (|ord[(o . no)]19| obj0 obj0) (|#[(o . no)]17| obj0)))))
(assert (=> (= (|ord[(Max . no)]3| |1|) #b00100)
    (= (|NO[(Max . no)]4| #b00100) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) #b00101)
    (= (|NO[(o . no)]20| obj1 #b00101) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) (|ord[(o . no)]19| obj0 |3|))
    (and (= obj3 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) #b00101)
    (= (|NO[(o . no)]20| obj1 #b00101) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) #b00010)
    (= (|NO[(o . no)]20| obj3 #b00010) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) #b01000)
    (= (|NO[(o . no)]20| obj0 #b01000) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) (|ord[(o . no)]19| obj2 |2|))
    (and (= |2| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) (|ord[(o . no)]19| obj1 obj0))
    (and (= obj1 obj0))))
(assert (=> (= (|ord[(Max . no)]3| |3|) #b00001)
    (= (|NO[(Max . no)]4| #b00001) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) (|ord[(o . no)]19| obj0 |2|))
    (and (= obj3 |2|))))
(assert (let ((a!1 (exists ((x!28 univ))
             (! (and (= (|ord[(o . no)]19| obj2 x!28) #b00001) (no obj2 x!28))
                :qid q!46))))
  (=> (and (bvsle #b00001 #b00001) (bvsle #b00001 (|#[(o . no)]17| obj2))) a!1)))
(assert (=> (= (|ord[(Max . no)]3| |3|) #b00011)
    (= (|NO[(Max . no)]4| #b00011) (toInt |3|))))
(assert (let ((a!1 (exists ((x!7 univ))
             (! (and (= (|ord[(Max . no)]3| x!7) #b00101)
                     (exists ((x!12 univ))
                       (! (and (Max x!12) (no x!12 x!7))
                          :skolemid s!6
                          :qid q!10)))
                :qid q!11))))
  (=> (and (bvsle #b00001 #b00101) (bvsle #b00101 |#[(Max . no)]1|)) a!1)))
(assert (=> (= (|ord[(Max . no)]3| |3|) #b00010)
    (= (|NO[(Max . no)]4| #b00010) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) (|ord[(o . no)]19| obj0 obj3))
    (and (= |1| obj3))))
(assert (let ((a!1 (exists ((x!22 univ))
             (! (and (= (|ord[(o . no)]19| obj1 x!22) #b00111) (no obj1 x!22))
                :qid q!25))))
  (=> (and (bvsle #b00001 #b00111) (bvsle #b00111 (|#[(o . no)]17| obj1))) a!1)))
(assert (= (toInt |1|) #b00001))
(assert (=> (= (|ord[(Max . no)]3| |3|) #b00110)
    (= (|NO[(Max . no)]4| #b00110) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) (|ord[(o . no)]19| obj2 obj0))
    (and (= |3| obj0))))
(assert (=> (= (|ord[(Max . no)]3| |4|) (|ord[(Max . no)]3| |1|)) (and (= |4| |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) #b01000)
    (= (|NO[(o . no)]20| obj3 #b01000) (toInt obj1))))
(assert (= (|SUM[(o . no)]16| obj1) (|SUM_RECURSIVE[(o . no)]18| obj1 #b00001)))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj1 #b00010)
   (ite (bvsle #b00010 (|#[(o . no)]17| obj1))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj1 #b00011)
               (|NO[(o . no)]20| obj1 #b00010))
        #b00000)))
(assert (=> (= (|ord[(Max . no)]3| |2|) #b00100)
    (= (|NO[(Max . no)]4| #b00100) (toInt |2|))))
(assert (let ((a!1 (exists ((x!24 univ))
             (! (and (= (|ord[(o . no)]19| obj3 x!24) #b00111) (no obj3 x!24))
                :qid q!34))))
  (=> (and (bvsle #b00001 #b00111) (bvsle #b00111 (|#[(o . no)]17| obj3))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) (|ord[(o . no)]19| obj0 obj0))
    (and (= |4| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) #b00001)
    (= (|NO[(o . no)]20| obj0 #b00001) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) (|ord[(o . no)]19| obj0 obj3))
    (and (= obj0 obj3))))
(assert (= (|SUM[(o . no)]16| obj0) (|SUM_RECURSIVE[(o . no)]18| obj0 #b00001)))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) (|ord[(o . no)]19| obj3 obj0))
    (and (= |2| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) (|ord[(o . no)]19| obj2 |3|))
    (and (= |4| |3|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj2 #b00011)
   (ite (bvsle #b00011 (|#[(o . no)]17| obj2))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj2 #b00100)
               (|NO[(o . no)]20| obj2 #b00011))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) #b00001)
    (= (|NO[(o . no)]20| obj1 #b00001) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) (|ord[(o . no)]19| obj3 |1|))
    (and (= |3| |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) (|ord[(o . no)]19| obj1 |4|))
    (and (= |1| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) #b00101)
    (= (|NO[(o . no)]20| obj2 #b00101) (toInt obj2))))
(assert (=> (= (|ord[(Max . no)]3| |3|) (|ord[(Max . no)]3| |3|)) (and (= |3| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) #b00001)
    (= (|NO[(o . no)]20| obj0 #b00001) (toInt obj1))))
(assert (=> (= (|ord[(Max . no)]3| obj1) #b00101)
    (= (|NO[(Max . no)]4| #b00101) (toInt obj1))))
(assert (=> (= (|ord[(Max . no)]3| obj0) #b01000)
    (= (|NO[(Max . no)]4| #b01000) (toInt obj0))))
(assert (let ((a!1 (exists ((x!26 univ))
             (! (and (= (|ord[(o . no)]19| obj0 x!26) #b00001) (no obj0 x!26))
                :qid q!37))))
  (=> (and (bvsle #b00001 #b00001) (bvsle #b00001 (|#[(o . no)]17| obj0))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) (|ord[(o . no)]19| obj2 |4|))
    (and (= obj3 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) #b00101)
    (= (|NO[(o . no)]20| obj2 #b00101) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) (|ord[(o . no)]19| obj2 obj1))
    (and (= |4| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) #b00111)
    (= (|NO[(o . no)]20| obj0 #b00111) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) #b00011)
    (= (|NO[(o . no)]20| obj2 #b00011) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) #b01000)
    (= (|NO[(o . no)]20| obj2 #b01000) (toInt |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj0) #b00011)
    (= (|NO[(Max . no)]4| #b00011) (toInt obj0))))
(assert (=> (= (|ord[(Max . no)]3| |2|) (|ord[(Max . no)]3| |3|)) (and (= |2| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) (|ord[(o . no)]19| obj0 |2|))
    (and (= obj2 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) #b00010)
    (= (|NO[(o . no)]20| obj0 #b00010) (toInt obj1))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj1 #b01000)
   (ite (bvsle #b01000 (|#[(o . no)]17| obj1))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj1 #b01001)
               (|NO[(o . no)]20| obj1 #b01000))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) #b00110)
    (= (|NO[(o . no)]20| obj3 #b00110) (toInt obj1))))
(assert (not (Ints obj0)))
(assert (let ((a!1 (exists ((x!24 univ))
             (! (and (= (|ord[(o . no)]19| obj3 x!24) #b00010) (no obj3 x!24))
                :qid q!29))))
  (=> (and (bvsle #b00001 #b00010) (bvsle #b00010 (|#[(o . no)]17| obj3))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) (|ord[(o . no)]19| obj2 |1|))
    (and (= obj0 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) (|ord[(o . no)]19| obj1 |2|))
    (and (= |3| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) #b00110)
    (= (|NO[(o . no)]20| obj0 #b00110) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) (|ord[(o . no)]19| obj0 |1|))
    (and (= |3| |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj3) #b00110)
    (= (|NO[(Max . no)]4| #b00110) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) (|ord[(o . no)]19| obj3 |2|))
    (and (= obj3 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) (|ord[(o . no)]19| obj1 obj1))
    (and (= obj3 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) (|ord[(o . no)]19| obj2 obj1))
    (and (= obj2 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) #b00101)
    (= (|NO[(o . no)]20| obj1 #b00101) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) (|ord[(o . no)]19| obj2 |4|))
    (and (= |1| |4|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj1 #b00001)
   (ite (bvsle #b00001 (|#[(o . no)]17| obj1))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj1 #b00010)
               (|NO[(o . no)]20| obj1 #b00001))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) (|ord[(o . no)]19| obj1 |4|))
    (and (= obj0 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) #b00010)
    (= (|NO[(o . no)]20| obj0 #b00010) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) (|ord[(o . no)]19| obj2 |2|))
    (and (= obj1 |2|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj2 #b00100)
   (ite (bvsle #b00100 (|#[(o . no)]17| obj2))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj2 #b00101)
               (|NO[(o . no)]20| obj2 #b00100))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) (|ord[(o . no)]19| obj1 |2|))
    (and (= obj3 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) #b00100)
    (= (|NO[(o . no)]20| obj3 #b00100) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) #b00001)
    (= (|NO[(o . no)]20| obj3 #b00001) (toInt obj0))))
(assert (=> (= (|ord[(Max . no)]3| |2|) (|ord[(Max . no)]3| obj0)) (and (= |2| obj0))))
(assert (=> (no obj0 obj1)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj0 obj1))
         (bvsle (|ord[(o . no)]19| obj0 obj1) (|#[(o . no)]17| obj0)))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) (|ord[(o . no)]19| obj3 obj2))
    (and (= |4| obj2))))
(assert (= (|SUM_RECURSIVE[(Max . no)]2| #b00110)
   (ite (bvsle #b00110 |#[(Max . no)]1|)
        (bvadd (|SUM_RECURSIVE[(Max . no)]2| #b00111)
               (|NO[(Max . no)]4| #b00110))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) (|ord[(o . no)]19| obj2 |3|))
    (and (= obj3 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) #b00101)
    (= (|NO[(o . no)]20| obj2 #b00101) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) #b00010)
    (= (|NO[(o . no)]20| obj3 #b00010) (toInt |2|))))
(assert (= (|SUM_RECURSIVE[(Max . no)]2| #b00100)
   (ite (bvsle #b00100 |#[(Max . no)]1|)
        (bvadd (|SUM_RECURSIVE[(Max . no)]2| #b00101)
               (|NO[(Max . no)]4| #b00100))
        #b00000)))
(assert (= (|SUM_RECURSIVE[(Max . no)]2| #b00010)
   (ite (bvsle #b00010 |#[(Max . no)]1|)
        (bvadd (|SUM_RECURSIVE[(Max . no)]2| #b00011)
               (|NO[(Max . no)]4| #b00010))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) (|ord[(o . no)]19| obj3 obj0))
    (and (= obj3 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) (|ord[(o . no)]19| obj0 obj0))
    (and (= |1| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) (|ord[(o . no)]19| obj2 obj0))
    (and (= |1| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) #b00111)
    (= (|NO[(o . no)]20| obj0 #b00111) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) (|ord[(o . no)]19| obj2 |2|))
    (and (= |3| |2|))))
(assert (=> (no obj1 obj3)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj1 obj3))
         (bvsle (|ord[(o . no)]19| obj1 obj3) (|#[(o . no)]17| obj1)))))
(assert (= |SUM[(Max . no)]0| (|SUM_RECURSIVE[(Max . no)]2| #b00001)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) (|ord[(o . no)]19| obj2 obj3))
    (and (= obj3 obj3))))
(assert (let ((a!1 (exists ((x!22 univ))
             (! (and (= (|ord[(o . no)]19| obj1 x!22) #b00010) (no obj1 x!22))
                :qid q!20))))
  (=> (and (bvsle #b00001 #b00010) (bvsle #b00010 (|#[(o . no)]17| obj1))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) #b00010)
    (= (|NO[(o . no)]20| obj0 #b00010) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) #b00111)
    (= (|NO[(o . no)]20| obj2 #b00111) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) #b00100)
    (= (|NO[(o . no)]20| obj0 #b00100) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) (|ord[(o . no)]19| obj2 obj1))
    (and (= obj1 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) #b00110)
    (= (|NO[(o . no)]20| obj3 #b00110) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) (|ord[(o . no)]19| obj3 |4|))
    (and (= |1| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) (|ord[(o . no)]19| obj2 obj1))
    (and (= |1| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) #b00100)
    (= (|NO[(o . no)]20| obj1 #b00100) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) #b00100)
    (= (|NO[(o . no)]20| obj1 #b00100) (toInt obj1))))
(assert (= (toInt obj2) #b00000))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) #b00001)
    (= (|NO[(o . no)]20| obj0 #b00001) (toInt obj2))))
(assert (=> (no obj2 |3|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj2 |3|))
         (bvsle (|ord[(o . no)]19| obj2 |3|) (|#[(o . no)]17| obj2)))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) (|ord[(o . no)]19| obj1 |1|))
    (and (= obj2 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) #b00100)
    (= (|NO[(o . no)]20| obj1 #b00100) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) (|ord[(o . no)]19| obj3 |4|))
    (and (= |4| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) (|ord[(o . no)]19| obj3 obj2))
    (and (= obj0 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) #b00010)
    (= (|NO[(o . no)]20| obj2 #b00010) (toInt obj2))))
(assert (=> (= (|ord[(Max . no)]3| |4|) #b00111)
    (= (|NO[(Max . no)]4| #b00111) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) #b00010)
    (= (|NO[(o . no)]20| obj1 #b00010) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) (|ord[(o . no)]19| obj3 obj1))
    (and (= |3| obj1))))
(assert (=> (= (|ord[(Max . no)]3| obj0) #b00001)
    (= (|NO[(Max . no)]4| #b00001) (toInt obj0))))
(assert (=> (or (and (Max obj0) (no obj0 |3|))
        (and (Max obj3) (no obj3 |3|))
        (and (Max obj1) (no obj1 |3|))
        (and (Max obj2) (no obj2 |3|)))
    (and (bvsle #b00001 (|ord[(Max . no)]3| |3|))
         (bvsle (|ord[(Max . no)]3| |3|) |#[(Max . no)]1|))))
(assert (=> (= (|#[(o . no)]17| obj0) #b00000)
    (and (not (no obj0 |1|))
         (not (no obj0 obj1))
         (not (no obj0 |4|))
         (not (no obj0 |2|))
         (not (no obj0 obj0))
         (not (no obj0 obj3))
         (not (no obj0 |3|))
         (not (no obj0 obj2)))))
(assert (=> (not (exists ((x!25 univ)) (! (no obj0 x!25) :skolemid s!12 :qid q!36)))
    (= (|#[(o . no)]17| obj0) #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) (|ord[(o . no)]19| obj0 |4|))
    (and (= obj0 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) #b00110)
    (= (|NO[(o . no)]20| obj2 #b00110) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) #b00010)
    (= (|NO[(o . no)]20| obj1 #b00010) (toInt obj1))))
(assert (=> (= (|ord[(Max . no)]3| |3|) (|ord[(Max . no)]3| |1|)) (and (= |3| |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) #b01000)
    (= (|NO[(o . no)]20| obj3 #b01000) (toInt |2|))))
(assert (=> (= (|ord[(Max . no)]3| |4|) #b00001)
    (= (|NO[(Max . no)]4| #b00001) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) (|ord[(o . no)]19| obj2 obj3))
    (and (= obj0 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) #b00101)
    (= (|NO[(o . no)]20| obj2 #b00101) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) #b00110)
    (= (|NO[(o . no)]20| obj2 #b00110) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) (|ord[(o . no)]19| obj0 |2|))
    (and (= |1| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) (|ord[(o . no)]19| obj3 obj3))
    (and (= obj3 obj3))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj0 #b01000)
   (ite (bvsle #b01000 (|#[(o . no)]17| obj0))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj0 #b01001)
               (|NO[(o . no)]20| obj0 #b01000))
        #b00000)))
(assert (=> (= (|ord[(Max . no)]3| obj2) #b01000)
    (= (|NO[(Max . no)]4| #b01000) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) (|ord[(o . no)]19| obj0 |3|))
    (and (= obj1 |3|))))
(assert (let ((a!1 (exists ((x!28 univ))
             (! (and (= (|ord[(o . no)]19| obj2 x!28) #b00101) (no obj2 x!28))
                :qid q!50))))
  (=> (and (bvsle #b00001 #b00101) (bvsle #b00101 (|#[(o . no)]17| obj2))) a!1)))
(assert (=> (= (|ord[(Max . no)]3| |2|) (|ord[(Max . no)]3| |1|)) (and (= |2| |1|))))
(assert (=> (= (|ord[(Max . no)]3| |4|) #b00101)
    (= (|NO[(Max . no)]4| #b00101) (toInt |4|))))
(assert (=> (no obj3 obj1)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj3 obj1))
         (bvsle (|ord[(o . no)]19| obj3 obj1) (|#[(o . no)]17| obj3)))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) #b00011)
    (= (|NO[(o . no)]20| obj1 #b00011) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) #b00001)
    (= (|NO[(o . no)]20| obj2 #b00001) (toInt obj1))))
(assert (=> (= (|ord[(Max . no)]3| |3|) #b00100)
    (= (|NO[(Max . no)]4| #b00100) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) #b00111)
    (= (|NO[(o . no)]20| obj2 #b00111) (toInt |1|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj3 #b00011)
   (ite (bvsle #b00011 (|#[(o . no)]17| obj3))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj3 #b00100)
               (|NO[(o . no)]20| obj3 #b00011))
        #b00000)))
(assert (let ((a!1 (exists ((x!28 univ))
             (! (and (= (|ord[(o . no)]19| obj2 x!28) #b00110) (no obj2 x!28))
                :qid q!51))))
  (=> (and (bvsle #b00001 #b00110) (bvsle #b00110 (|#[(o . no)]17| obj2))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) (|ord[(o . no)]19| obj3 |3|))
    (and (= obj2 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) (|ord[(o . no)]19| obj1 |1|))
    (and (= |1| |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) #b00100)
    (= (|NO[(o . no)]20| obj2 #b00100) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) (|ord[(o . no)]19| obj0 |4|))
    (and (= obj2 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) #b00110)
    (= (|NO[(o . no)]20| obj1 #b00110) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) #b00100)
    (= (|NO[(o . no)]20| obj1 #b00100) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) (|ord[(o . no)]19| obj1 |4|))
    (and (= obj1 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) (|ord[(o . no)]19| obj3 |1|))
    (and (= obj1 |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) (|ord[(Max . no)]3| |4|)) (and (= obj2 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) #b00011)
    (= (|NO[(o . no)]20| obj1 #b00011) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) #b01000)
    (= (|NO[(o . no)]20| obj2 #b01000) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) #b01000)
    (= (|NO[(o . no)]20| obj1 #b01000) (toInt |4|))))
(assert (=> (= (|ord[(Max . no)]3| obj3) (|ord[(Max . no)]3| obj1)) (and (= obj3 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) #b00100)
    (= (|NO[(o . no)]20| obj2 #b00100) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) (|ord[(o . no)]19| obj2 |3|))
    (and (= obj0 |3|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) #b00010)
    (= (|NO[(Max . no)]4| #b00010) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) #b00001)
    (= (|NO[(o . no)]20| obj1 #b00001) (toInt |3|))))
(assert (= (toInt obj1) #b00000))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) (|ord[(o . no)]19| obj0 |3|))
    (and (= obj0 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) (|ord[(o . no)]19| obj3 obj2))
    (and (= |3| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) (|ord[(o . no)]19| obj0 obj2))
    (and (= obj0 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) (|ord[(o . no)]19| obj2 |4|))
    (and (= |3| |4|))))
(assert (=> (= (|ord[(Max . no)]3| |2|) #b00101)
    (= (|NO[(Max . no)]4| #b00101) (toInt |2|))))
(assert (=> (= (|ord[(Max . no)]3| |2|) #b00010)
    (= (|NO[(Max . no)]4| #b00010) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) (|ord[(o . no)]19| obj1 |1|))
    (and (= obj0 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) #b00110)
    (= (|NO[(o . no)]20| obj3 #b00110) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) #b00100)
    (= (|NO[(o . no)]20| obj3 #b00100) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) (|ord[(o . no)]19| obj0 |3|))
    (and (= obj2 |3|))))
(assert (=> (= (|ord[(Max . no)]3| |2|) #b00001)
    (= (|NO[(Max . no)]4| #b00001) (toInt |2|))))
(assert (let ((a!1 (exists ((x!24 univ))
             (! (and (= (|ord[(o . no)]19| obj3 x!24) #b00001) (no obj3 x!24))
                :qid q!28))))
  (=> (and (bvsle #b00001 #b00001) (bvsle #b00001 (|#[(o . no)]17| obj3))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) #b00100)
    (= (|NO[(o . no)]20| obj1 #b00100) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) #b01000)
    (= (|NO[(o . no)]20| obj3 #b01000) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) #b01000)
    (= (|NO[(o . no)]20| obj2 #b01000) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) #b00010)
    (= (|NO[(o . no)]20| obj1 #b00010) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) (|ord[(o . no)]19| obj1 |3|))
    (and (= |3| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) (|ord[(o . no)]19| obj1 obj3))
    (and (= obj3 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) (|ord[(o . no)]19| obj0 obj3))
    (and (= |2| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) #b01000)
    (= (|NO[(o . no)]20| obj0 #b01000) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) #b00010)
    (= (|NO[(o . no)]20| obj1 #b00010) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) #b00010)
    (= (|NO[(o . no)]20| obj2 #b00010) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) #b00101)
    (= (|NO[(o . no)]20| obj0 #b00101) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) (|ord[(o . no)]19| obj3 obj2))
    (and (= |1| obj2))))
(assert (=> (= (|ord[(Max . no)]3| |1|) (|ord[(Max . no)]3| obj2)) (and (= |1| obj2))))
(assert (let ((a!1 (exists ((x!7 univ))
             (! (and (= (|ord[(Max . no)]3| x!7) #b00011)
                     (exists ((x!10 univ))
                       (! (and (Max x!10) (no x!10 x!7)) :skolemid s!4 :qid q!6)))
                :qid q!7))))
  (=> (and (bvsle #b00001 #b00011) (bvsle #b00011 |#[(Max . no)]1|)) a!1)))
(assert (=> (= (|ord[(Max . no)]3| obj2) (|ord[(Max . no)]3| obj0)) (and (= obj2 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) #b00011)
    (= (|NO[(o . no)]20| obj0 #b00011) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) (|ord[(o . no)]19| obj0 |1|))
    (and (= obj1 |1|))))
(assert (let ((a!1 (exists ((x!7 univ))
             (! (and (= (|ord[(Max . no)]3| x!7) #b00110)
                     (exists ((x!13 univ))
                       (! (and (Max x!13) (no x!13 x!7))
                          :skolemid s!7
                          :qid q!12)))
                :qid q!13))))
  (=> (and (bvsle #b00001 #b00110) (bvsle #b00110 |#[(Max . no)]1|)) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) (|ord[(o . no)]19| obj1 obj2))
    (and (= |1| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) (|ord[(o . no)]19| obj1 obj0))
    (and (= obj2 obj0))))
(assert (Ints |3|))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) #b00101)
    (= (|NO[(o . no)]20| obj0 #b00101) (toInt |2|))))
(assert (let ((a!1 (exists ((x!26 univ))
             (! (and (= (|ord[(o . no)]19| obj0 x!26) #b00011) (no obj0 x!26))
                :qid q!39))))
  (=> (and (bvsle #b00001 #b00011) (bvsle #b00011 (|#[(o . no)]17| obj0))) a!1)))
(assert (=> (or (and (Max obj2) (no obj2 |1|))
        (and (Max obj0) (no obj0 |1|))
        (and (Max obj3) (no obj3 |1|))
        (and (Max obj1) (no obj1 |1|)))
    (and (bvsle #b00001 (|ord[(Max . no)]3| |1|))
         (bvsle (|ord[(Max . no)]3| |1|) |#[(Max . no)]1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) #b00001)
    (= (|NO[(o . no)]20| obj2 #b00001) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) #b00101)
    (= (|NO[(o . no)]20| obj3 #b00101) (toInt |4|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj2 #b00111)
   (ite (bvsle #b00111 (|#[(o . no)]17| obj2))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj2 #b01000)
               (|NO[(o . no)]20| obj2 #b00111))
        #b00000)))
(assert (=> (= (|ord[(Max . no)]3| obj3) (|ord[(Max . no)]3| obj0)) (and (= obj3 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) (|ord[(o . no)]19| obj2 obj0))
    (and (= obj1 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) (|ord[(o . no)]19| obj1 obj2))
    (and (= obj2 obj2))))
(assert (let ((a!1 (exists ((x!26 univ))
             (! (and (= (|ord[(o . no)]19| obj0 x!26) #b00101) (no obj0 x!26))
                :qid q!41))))
  (=> (and (bvsle #b00001 #b00101) (bvsle #b00101 (|#[(o . no)]17| obj0))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) (|ord[(o . no)]19| obj0 |3|))
    (and (= |1| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) #b00111)
    (= (|NO[(o . no)]20| obj1 #b00111) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) (|ord[(o . no)]19| obj0 obj1))
    (and (= obj3 obj1))))
(assert (=> (= (|ord[(Max . no)]3| |1|) #b00011)
    (= (|NO[(Max . no)]4| #b00011) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) (|ord[(o . no)]19| obj1 |4|))
    (and (= |3| |4|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) #b00101)
    (= (|NO[(o . no)]20| obj0 #b00101) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) #b00101)
    (= (|NO[(o . no)]20| obj1 #b00101) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) #b00001)
    (= (|NO[(o . no)]20| obj0 #b00001) (toInt |1|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj0 #b00001)
   (ite (bvsle #b00001 (|#[(o . no)]17| obj0))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj0 #b00010)
               (|NO[(o . no)]20| obj0 #b00001))
        #b00000)))
(assert (let ((a!1 (exists ((x!22 univ))
             (! (and (= (|ord[(o . no)]19| obj1 x!22) #b00110) (no obj1 x!22))
                :qid q!24))))
  (=> (and (bvsle #b00001 #b00110) (bvsle #b00110 (|#[(o . no)]17| obj1))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) (|ord[(o . no)]19| obj0 |3|))
    (and (= |4| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) (|ord[(o . no)]19| obj0 obj3))
    (and (= obj2 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) (|ord[(o . no)]19| obj0 |1|))
    (and (= obj3 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) (|ord[(o . no)]19| obj3 |1|))
    (and (= obj0 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) (|ord[(o . no)]19| obj2 obj3))
    (and (= |4| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) #b00101)
    (= (|NO[(o . no)]20| obj3 #b00101) (toInt |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj1) (|ord[(Max . no)]3| |3|)) (and (= obj1 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) #b00010)
    (= (|NO[(o . no)]20| obj0 #b00010) (toInt |3|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) #b00001)
    (= (|NO[(Max . no)]4| #b00001) (toInt obj2))))
(assert (=> (no obj1 |4|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj1 |4|))
         (bvsle (|ord[(o . no)]19| obj1 |4|) (|#[(o . no)]17| obj1)))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) (|ord[(o . no)]19| obj2 obj2))
    (and (= obj1 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) #b00101)
    (= (|NO[(o . no)]20| obj3 #b00101) (toInt obj3))))
(assert (=> (= (|ord[(Max . no)]3| |1|) #b00101)
    (= (|NO[(Max . no)]4| #b00101) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) #b00010)
    (= (|NO[(o . no)]20| obj1 #b00010) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) #b00101)
    (= (|NO[(o . no)]20| obj3 #b00101) (toInt |2|))))
(assert (=> (or (and (Max obj3) (no obj3 |4|))
        (and (Max obj0) (no obj0 |4|))
        (and (Max obj2) (no obj2 |4|))
        (and (Max obj1) (no obj1 |4|)))
    (and (bvsle #b00001 (|ord[(Max . no)]3| |4|))
         (bvsle (|ord[(Max . no)]3| |4|) |#[(Max . no)]1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) (|ord[(o . no)]19| obj1 |3|))
    (and (= obj0 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) (|ord[(o . no)]19| obj3 |3|))
    (and (= |2| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) #b01000)
    (= (|NO[(o . no)]20| obj2 #b01000) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) (|ord[(o . no)]19| obj1 obj1))
    (and (= |3| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) (|ord[(o . no)]19| obj1 obj1))
    (and (= obj0 obj1))))
(assert (=> (no obj1 obj0)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj1 obj0))
         (bvsle (|ord[(o . no)]19| obj1 obj0) (|#[(o . no)]17| obj1)))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) #b00111)
    (= (|NO[(o . no)]20| obj1 #b00111) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) (|ord[(o . no)]19| obj2 obj3))
    (and (= obj1 obj3))))
(assert (let ((a!1 (exists ((x!7 univ))
             (! (and (= (|ord[(Max . no)]3| x!7) #b00010)
                     (exists ((x!9 univ))
                       (! (and (Max x!9) (no x!9 x!7)) :skolemid s!3 :qid q!4)))
                :qid q!5))))
  (=> (and (bvsle #b00001 #b00010) (bvsle #b00010 |#[(Max . no)]1|)) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) #b00010)
    (= (|NO[(o . no)]20| obj1 #b00010) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) (|ord[(o . no)]19| obj0 obj0))
    (and (= |2| obj0))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj3 #b00010)
   (ite (bvsle #b00010 (|#[(o . no)]17| obj3))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj3 #b00011)
               (|NO[(o . no)]20| obj3 #b00010))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj2) (|ord[(o . no)]19| obj2 obj2))
    (and (= obj2 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) (|ord[(o . no)]19| obj1 obj3))
    (and (= obj2 obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) #b00110)
    (= (|NO[(o . no)]20| obj1 #b00110) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) (|ord[(o . no)]19| obj3 obj0))
    (and (= |4| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) (|ord[(o . no)]19| obj1 obj2))
    (and (= |2| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) #b00100)
    (= (|NO[(o . no)]20| obj3 #b00100) (toInt obj1))))
(assert (=> (no obj2 obj3)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj2 obj3))
         (bvsle (|ord[(o . no)]19| obj2 obj3) (|#[(o . no)]17| obj2)))))
(assert (=> (= (|ord[(Max . no)]3| obj0) (|ord[(Max . no)]3| |1|)) (and (= obj0 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) #b01000)
    (= (|NO[(o . no)]20| obj1 #b01000) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) (|ord[(o . no)]19| obj2 obj1))
    (and (= obj3 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) (|ord[(o . no)]19| obj3 obj1))
    (and (= |1| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) #b00001)
    (= (|NO[(o . no)]20| obj1 #b00001) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) #b00011)
    (= (|NO[(o . no)]20| obj3 #b00011) (toInt obj0))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj0 #b00010)
   (ite (bvsle #b00010 (|#[(o . no)]17| obj0))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj0 #b00011)
               (|NO[(o . no)]20| obj0 #b00010))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) (|ord[(o . no)]19| obj3 |2|))
    (and (= obj0 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) #b00011)
    (= (|NO[(o . no)]20| obj3 #b00011) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) (|ord[(o . no)]19| obj2 |4|))
    (and (= obj0 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) #b01000)
    (= (|NO[(o . no)]20| obj2 #b01000) (toInt |2|))))
(assert (=> (= (|ord[(Max . no)]3| obj0) #b00111)
    (= (|NO[(Max . no)]4| #b00111) (toInt obj0))))
(assert (=> (no obj1 |3|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj1 |3|))
         (bvsle (|ord[(o . no)]19| obj1 |3|) (|#[(o . no)]17| obj1)))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) (|ord[(o . no)]19| obj1 |4|))
    (and (= obj2 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) #b01000)
    (= (|NO[(o . no)]20| obj1 #b01000) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) #b00011)
    (= (|NO[(o . no)]20| obj1 #b00011) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) #b01000)
    (= (|NO[(o . no)]20| obj2 #b01000) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) (|ord[(o . no)]19| obj3 |1|))
    (and (= obj3 |1|))))
(assert (=> (= (|#[(o . no)]17| obj2) #b00000)
    (and (not (no obj2 obj2))
         (not (no obj2 obj1))
         (not (no obj2 obj0))
         (not (no obj2 |2|))
         (not (no obj2 |4|))
         (not (no obj2 obj3))
         (not (no obj2 |1|))
         (not (no obj2 |3|)))))
(assert (=> (not (exists ((x!27 univ)) (! (no obj2 x!27) :skolemid s!13 :qid q!45)))
    (= (|#[(o . no)]17| obj2) #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) (|ord[(o . no)]19| obj2 obj3))
    (and (= |2| obj3))))
(assert (=> (= (|ord[(Max . no)]3| |3|) (|ord[(Max . no)]3| obj2)) (and (= |3| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) (|ord[(o . no)]19| obj3 |2|))
    (and (= obj1 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) #b01000)
    (= (|NO[(o . no)]20| obj0 #b01000) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) #b00101)
    (= (|NO[(o . no)]20| obj0 #b00101) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) #b00011)
    (= (|NO[(o . no)]20| obj3 #b00011) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) #b01000)
    (= (|NO[(o . no)]20| obj1 #b01000) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) (|ord[(o . no)]19| obj3 obj2))
    (and (= |2| obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) #b00110)
    (= (|NO[(o . no)]20| obj3 #b00110) (toInt |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) #b00111)
    (= (|NO[(o . no)]20| obj3 #b00111) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) #b00110)
    (= (|NO[(o . no)]20| obj2 #b00110) (toInt |2|))))
(assert (let ((a!1 (exists ((x!28 univ))
             (! (and (= (|ord[(o . no)]19| obj2 x!28) #b00011) (no obj2 x!28))
                :qid q!48))))
  (=> (and (bvsle #b00001 #b00011) (bvsle #b00011 (|#[(o . no)]17| obj2))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) (|ord[(o . no)]19| obj1 |2|))
    (and (= obj0 |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) (|ord[(o . no)]19| obj2 obj0))
    (and (= |4| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) (|ord[(o . no)]19| obj3 |2|))
    (and (= |3| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) (|ord[(o . no)]19| obj2 |2|))
    (and (= obj3 |2|))))
(assert (=> (= (|ord[(Max . no)]3| |1|) #b00111)
    (= (|NO[(Max . no)]4| #b00111) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) #b00110)
    (= (|NO[(o . no)]20| obj1 #b00110) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) (|ord[(o . no)]19| obj3 |4|))
    (and (= obj3 |4|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) #b00101)
    (= (|NO[(Max . no)]4| #b00101) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) #b00010)
    (= (|NO[(o . no)]20| obj1 #b00010) (toInt |2|))))
(assert (=> (= (|ord[(Max . no)]3| obj0) (|ord[(Max . no)]3| obj1)) (and (= obj0 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) #b00101)
    (= (|NO[(o . no)]20| obj3 #b00101) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) (|ord[(o . no)]19| obj0 obj3))
    (and (= |3| obj3))))
(assert (=> (no obj0 |2|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj0 |2|))
         (bvsle (|ord[(o . no)]19| obj0 |2|) (|#[(o . no)]17| obj0)))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) #b00011)
    (= (|NO[(o . no)]20| obj1 #b00011) (toInt |4|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj3 #b00100)
   (ite (bvsle #b00100 (|#[(o . no)]17| obj3))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj3 #b00101)
               (|NO[(o . no)]20| obj3 #b00100))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) #b00011)
    (= (|NO[(o . no)]20| obj2 #b00011) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) #b00011)
    (= (|NO[(o . no)]20| obj0 #b00011) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) (|ord[(o . no)]19| obj2 obj1))
    (and (= |2| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) #b00001)
    (= (|NO[(o . no)]20| obj2 #b00001) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) (|ord[(o . no)]19| obj2 |1|))
    (and (= obj1 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) (|ord[(o . no)]19| obj3 obj0))
    (and (= obj2 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) #b00010)
    (= (|NO[(o . no)]20| obj3 #b00010) (toInt |3|))))
(assert (=> (no obj1 |1|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj1 |1|))
         (bvsle (|ord[(o . no)]19| obj1 |1|) (|#[(o . no)]17| obj1)))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) #b00111)
    (= (|NO[(o . no)]20| obj3 #b00111) (toInt |1|))))
(assert (=> (= (|ord[(Max . no)]3| |2|) (|ord[(Max . no)]3| obj3)) (and (= |2| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) #b00100)
    (= (|NO[(o . no)]20| obj0 #b00100) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) (|ord[(o . no)]19| obj0 |3|))
    (and (= |2| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) #b00100)
    (= (|NO[(o . no)]20| obj2 #b00100) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) #b00011)
    (= (|NO[(o . no)]20| obj1 #b00011) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) (|ord[(o . no)]19| obj3 obj3))
    (and (= |1| obj3))))
(assert (Ints |2|))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) (|ord[(o . no)]19| obj3 |4|))
    (and (= obj2 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) #b00111)
    (= (|NO[(o . no)]20| obj2 #b00111) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) (|ord[(o . no)]19| obj1 obj1))
    (and (= |2| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) #b01000)
    (= (|NO[(o . no)]20| obj0 #b01000) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) #b00001)
    (= (|NO[(o . no)]20| obj2 #b00001) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) #b00100)
    (= (|NO[(o . no)]20| obj3 #b00100) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) #b00010)
    (= (|NO[(o . no)]20| obj3 #b00010) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) #b00111)
    (= (|NO[(o . no)]20| obj0 #b00111) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) (|ord[(o . no)]19| obj3 |4|))
    (and (= obj0 |4|))))
(assert (= (toInt obj3) #b00000))
(assert (let ((a!1 (exists ((x!22 univ))
             (! (and (= (|ord[(o . no)]19| obj1 x!22) #b00101) (no obj1 x!22))
                :qid q!23))))
  (=> (and (bvsle #b00001 #b00101) (bvsle #b00101 (|#[(o . no)]17| obj1))) a!1)))
(assert (=> (= (|ord[(Max . no)]3| |1|) (|ord[(Max . no)]3| obj3)) (and (= |1| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) (|ord[(o . no)]19| obj1 obj2))
    (and (= |3| obj2))))
(assert (=> (= (|ord[(Max . no)]3| |3|) (|ord[(Max . no)]3| |2|)) (and (= |3| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj1 |1|) (|ord[(o . no)]19| obj1 |3|))
    (and (= |1| |3|))))
(assert (=> (= (|ord[(Max . no)]3| obj0) #b00110)
    (= (|NO[(Max . no)]4| #b00110) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 |2|) #b00110)
    (= (|NO[(o . no)]20| obj1 #b00110) (toInt |2|))))
(assert (=> (= (|ord[(Max . no)]3| |1|) #b01000)
    (= (|NO[(Max . no)]4| #b01000) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) (|ord[(o . no)]19| obj0 obj1))
    (and (= obj1 obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) #b00001)
    (= (|NO[(o . no)]20| obj0 #b00001) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) #b00001)
    (= (|NO[(o . no)]20| obj1 #b00001) (toInt |4|))))
(assert (=> (= (|ord[(Max . no)]3| obj1) (|ord[(Max . no)]3| |1|)) (and (= obj1 |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) #b00011)
    (= (|NO[(Max . no)]4| #b00011) (toInt obj2))))
(assert (=> (no obj0 obj3)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj0 obj3))
         (bvsle (|ord[(o . no)]19| obj0 obj3) (|#[(o . no)]17| obj0)))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) (|ord[(o . no)]19| obj1 |1|))
    (and (= obj1 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |2|) #b00010)
    (= (|NO[(o . no)]20| obj2 #b00010) (toInt |2|))))
(assert (=> (= (|ord[(Max . no)]3| obj0) #b00100)
    (= (|NO[(Max . no)]4| #b00100) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) (|ord[(o . no)]19| obj3 |4|))
    (and (= obj1 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |4|) #b00010)
    (= (|NO[(o . no)]20| obj2 #b00010) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |3|) (|ord[(o . no)]19| obj3 |3|))
    (and (= |3| |3|))))
(assert (=> (= (|ord[(Max . no)]3| obj1) #b00001)
    (= (|NO[(Max . no)]4| #b00001) (toInt obj1))))
(assert (=> (= (|ord[(Max . no)]3| obj2) #b00110)
    (= (|NO[(Max . no)]4| #b00110) (toInt obj2))))
(assert (=> (= (|ord[(Max . no)]3| obj1) (|ord[(Max . no)]3| |4|)) (and (= obj1 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) (|ord[(o . no)]19| obj3 obj3))
    (and (= |2| obj3))))
(assert (let ((a!1 (exists ((x!24 univ))
             (! (and (= (|ord[(o . no)]19| obj3 x!24) #b00100) (no obj3 x!24))
                :qid q!31))))
  (=> (and (bvsle #b00001 #b00100) (bvsle #b00100 (|#[(o . no)]17| obj3))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) (|ord[(o . no)]19| obj0 |4|))
    (and (= |4| |4|))))
(assert (=> (no obj3 obj3)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj3 obj3))
         (bvsle (|ord[(o . no)]19| obj3 obj3) (|#[(o . no)]17| obj3)))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) #b00010)
    (= (|NO[(o . no)]20| obj2 #b00010) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) (|ord[(o . no)]19| obj0 |3|))
    (and (= |3| |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) #b00101)
    (= (|NO[(o . no)]20| obj0 #b00101) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj0) #b00101)
    (= (|NO[(o . no)]20| obj0 #b00101) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) (|ord[(o . no)]19| obj3 obj3))
    (and (= |4| obj3))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj2) #b00001)
    (= (|NO[(o . no)]20| obj1 #b00001) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj1) (|ord[(o . no)]19| obj3 obj0))
    (and (= obj1 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) (|ord[(o . no)]19| obj1 |3|))
    (and (= obj1 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj3) (|ord[(o . no)]19| obj3 obj2))
    (and (= obj3 obj2))))
(assert (=> (= (|ord[(Max . no)]3| |4|) (|ord[(Max . no)]3| |2|)) (and (= |4| |2|))))
(assert (=> (= (|ord[(Max . no)]3| obj2) (|ord[(Max . no)]3| |3|)) (and (= obj2 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) (|ord[(o . no)]19| obj2 obj0))
    (and (= obj3 obj0))))
(assert (let ((a!1 (exists ((x!22 univ))
             (! (and (= (|ord[(o . no)]19| obj1 x!22) #b00011) (no obj1 x!22))
                :qid q!21))))
  (=> (and (bvsle #b00001 #b00011) (bvsle #b00011 (|#[(o . no)]17| obj1))) a!1)))
(assert (let ((a!1 (exists ((x!22 univ))
             (! (and (= (|ord[(o . no)]19| obj1 x!22) #b00100) (no obj1 x!22))
                :qid q!22))))
  (=> (and (bvsle #b00001 #b00100) (bvsle #b00100 (|#[(o . no)]17| obj1))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) (|ord[(o . no)]19| obj3 obj1))
    (and (= |4| obj1))))
(assert (=> (= (|ord[(Max . no)]3| |1|) (|ord[(Max . no)]3| obj1)) (and (= |1| obj1))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj1) (|ord[(o . no)]19| obj2 |4|))
    (and (= obj1 |4|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj0) #b00101)
    (= (|NO[(o . no)]20| obj1 #b00101) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) (|ord[(o . no)]19| obj1 |1|))
    (and (= |4| |1|))))
(assert (=> (= (|ord[(Max . no)]3| obj1) #b00100)
    (= (|NO[(Max . no)]4| #b00100) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj2) #b00101)
    (= (|NO[(o . no)]20| obj0 #b00101) (toInt obj2))))
(assert (=> (= (|ord[(Max . no)]3| |4|) (|ord[(Max . no)]3| |3|)) (and (= |4| |3|))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj3 #b00111)
   (ite (bvsle #b00111 (|#[(o . no)]17| obj3))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj3 #b01000)
               (|NO[(o . no)]20| obj3 #b00111))
        #b00000)))
(assert (=> (= (|ord[(o . no)]19| obj0 |2|) #b00110)
    (= (|NO[(o . no)]20| obj0 #b00110) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) #b00101)
    (= (|NO[(o . no)]20| obj3 #b00101) (toInt obj2))))
(assert (=> (= (|ord[(o . no)]19| obj0 |4|) #b00111)
    (= (|NO[(o . no)]20| obj0 #b00111) (toInt |4|))))
(assert (=> (no obj3 obj2)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj3 obj2))
         (bvsle (|ord[(o . no)]19| obj3 obj2) (|#[(o . no)]17| obj3)))))
(assert (=> (= (|ord[(Max . no)]3| obj3) #b00101)
    (= (|NO[(Max . no)]4| #b00101) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) #b00110)
    (= (|NO[(o . no)]20| obj2 #b00110) (toInt |3|))))
(assert (=> (no obj2 |2|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj2 |2|))
         (bvsle (|ord[(o . no)]19| obj2 |2|) (|#[(o . no)]17| obj2)))))
(assert (= (|SUM_RECURSIVE[(o . no)]18| obj2 #b01000)
   (ite (bvsle #b01000 (|#[(o . no)]17| obj2))
        (bvadd (|SUM_RECURSIVE[(o . no)]18| obj2 #b01001)
               (|NO[(o . no)]20| obj2 #b01000))
        #b00000)))
(assert (=> (= (|ord[(Max . no)]3| |1|) (|ord[(Max . no)]3| obj0)) (and (= |1| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj2 |1|) #b00100)
    (= (|NO[(o . no)]20| obj2 #b00100) (toInt |1|))))
(assert (=> (= (|ord[(Max . no)]3| |1|) (|ord[(Max . no)]3| |1|)) (and (= |1| |1|))))
(assert (=> (= (|ord[(o . no)]19| obj2 |3|) #b00100)
    (= (|NO[(o . no)]20| obj2 #b00100) (toInt |3|))))
(assert (=> (or (and (Max obj1) (no obj1 obj3))
        (and (Max obj3) (no obj3 obj3))
        (and (Max obj2) (no obj2 obj3))
        (and (Max obj0) (no obj0 obj3)))
    (and (bvsle #b00001 (|ord[(Max . no)]3| obj3))
         (bvsle (|ord[(Max . no)]3| obj3) |#[(Max . no)]1|))))
(assert (=> (= (|ord[(Max . no)]3| obj1) #b00111)
    (= (|NO[(Max . no)]4| #b00111) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) (|ord[(o . no)]19| obj1 obj3))
    (and (= obj1 obj3))))
(assert (=> (= (|ord[(Max . no)]3| obj1) #b00011)
    (= (|NO[(Max . no)]4| #b00011) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) #b00101)
    (= (|NO[(o . no)]20| obj1 #b00101) (toInt |3|))))
(assert (=> (= (|ord[(Max . no)]3| obj0) (|ord[(Max . no)]3| |3|)) (and (= obj0 |3|))))
(assert (=> (= (|ord[(o . no)]19| obj0 |3|) (|ord[(o . no)]19| obj0 |2|))
    (and (= |3| |2|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) #b00101)
    (= (|NO[(o . no)]20| obj2 #b00101) (toInt obj0))))
(assert (=> (no obj2 |4|)
    (and (bvsle #b00001 (|ord[(o . no)]19| obj2 |4|))
         (bvsle (|ord[(o . no)]19| obj2 |4|) (|#[(o . no)]17| obj2)))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) #b00100)
    (= (|NO[(o . no)]20| obj0 #b00100) (toInt obj3))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj2) #b00110)
    (= (|NO[(o . no)]20| obj3 #b00110) (toInt obj2))))
(assert (let ((a!1 (exists ((x!7 univ))
             (! (and (= (|ord[(Max . no)]3| x!7) #b00111)
                     (exists ((x!14 univ))
                       (! (and (Max x!14) (no x!14 x!7))
                          :skolemid s!8
                          :qid q!14)))
                :qid q!15))))
  (=> (and (bvsle #b00001 #b00111) (bvsle #b00111 |#[(Max . no)]1|)) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj3 |4|) #b00111)
    (= (|NO[(o . no)]20| obj3 #b00111) (toInt |4|))))
(assert (=> (= (|ord[(o . no)]19| obj2 obj3) (|ord[(o . no)]19| obj2 |1|))
    (and (= obj3 |1|))))
(assert (=> (= (|ord[(o . no)]19| obj3 obj0) #b00111)
    (= (|NO[(o . no)]20| obj3 #b00111) (toInt obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 |1|) (|ord[(o . no)]19| obj3 |2|))
    (and (= |1| |2|))))
(assert (= (toInt |4|) #b00100))
(assert (=> (= (|ord[(o . no)]19| obj2 obj0) (|ord[(o . no)]19| obj2 obj2))
    (and (= obj0 obj2))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj3) #b00111)
    (= (|NO[(o . no)]20| obj1 #b00111) (toInt obj3))))
(assert (=> (= (|ord[(Max . no)]3| obj1) (|ord[(Max . no)]3| obj0)) (and (= obj1 obj0))))
(assert (=> (= (|ord[(o . no)]19| obj1 |4|) (|ord[(o . no)]19| obj1 obj0))
    (and (= |4| obj0))))
(assert (let ((a!1 (exists ((x!26 univ))
             (! (and (= (|ord[(o . no)]19| obj0 x!26) #b00111) (no obj0 x!26))
                :qid q!43))))
  (=> (and (bvsle #b00001 #b00111) (bvsle #b00111 (|#[(o . no)]17| obj0))) a!1)))
(assert (=> (= (|ord[(o . no)]19| obj0 obj1) (|ord[(o . no)]19| obj0 |4|))
    (and (= obj1 |4|))))
(assert (=> (= (|ord[(Max . no)]3| obj3) (|ord[(Max . no)]3| |4|)) (and (= obj3 |4|))))
(assert (= (toInt |3|) #b00011))
(assert (=> (= (|ord[(o . no)]19| obj0 |1|) #b00010)
    (= (|NO[(o . no)]20| obj0 #b00010) (toInt |1|))))
(assert (=> (= (|ord[(o . no)]19| obj1 obj1) #b00111)
    (= (|NO[(o . no)]20| obj1 #b00111) (toInt obj1))))
(assert (=> (= (|ord[(o . no)]19| obj1 |3|) (|ord[(o . no)]19| obj1 obj0))
    (and (= |3| obj0))))
(assert (=> (= (|ord[(o . no)]19| obj3 |2|) #b00110)
    (= (|NO[(o . no)]20| obj3 #b00110) (toInt |2|))))
(assert (=> (= (|ord[(o . no)]19| obj0 obj3) #b00110)
    (= (|NO[(o . no)]20| obj0 #b00110) (toInt obj3))))

(check-sat)
(get-info :all-statistics)
(get-model)
