package kodkod.examples.models.puzzle.prisonerRoomVisit;

import java.util.Arrays;
import java.util.List;
import kodkod.ast.*;
import kodkod.ast.operator.*;
import kodkod.examples.ExampleMetadata;
import kodkod.instance.*;
import kodkod.engine.*;
import kodkod.engine.satlab.SATFactory;
import kodkod.engine.config.Options;

@ExampleMetadata(
        Name = "prisoner",
        Note = "",
        IsCheck = true,
        PartialModel = true,
        BinaryRelations = 5,
        TernaryRelations = 2,
        NaryRelations = 0,
        HierarchicalTypes =8,
        NestedRelationalJoins = 28,
        TransitiveClosure = 0,
        NestedQuantifiers = 2,
        SetCardinality = 4,
        Additions = 6,
        Subtractions = 0,
        Comparison = 51,
        OrderedRelations = 1,
        Constraints = 55
)


public final class prisonerSafetyCheck {

    public static void main(String[] args) throws Exception {

        Relation x0 = Relation.unary("Int/min");
        Relation x1 = Relation.unary("Int/zero");
        Relation x2 = Relation.unary("Int/max");
        Relation x3 = Relation.nary("Int/next", 2);
        Relation x4 = Relation.unary("seq/Int");
        Relation x5 = Relation.unary("String");
        Relation x6 = Relation.unary("this/OtherPrisoner");
        Relation x7 = Relation.unary("this/CounterPrisoner");
        Relation x8 = Relation.unary("this/NULL");
        Relation x9 = Relation.unary("this/True");
        Relation x10 = Relation.unary("this/False");
        Relation x11 = Relation.unary("this/SwitcheA");
        Relation x12 = Relation.unary("this/SwitcheB");
        Relation x13 = Relation.unary("this/Up");
        Relation x14 = Relation.unary("this/Down");
        Relation x15 = Relation.unary("this/State");
        Relation x16 = Relation.unary("ordering/Ord");
        Relation x17 = Relation.nary("this/State.announced", 2);
        Relation x18 = Relation.nary("this/State.SwitchesStatus", 3);
        Relation x19 = Relation.nary("this/State.count", 2);
        Relation x20 = Relation.nary("this/State.timesSwitched", 3);
        Relation x21 = Relation.nary("this/State.currentPrisoner", 2);
        Relation x22 = Relation.unary("ordering/Ord.First");
        Relation x23 = Relation.nary("ordering/Ord.Next", 2);
        Relation x24 = Relation.unary("");

        List<String> atomlist = Arrays.asList(
                "-1", "-2", "-3", "-4", "-5",
                "-6", "-7", "-8", "0", "1", "2",
                "3", "4", "5", "6", "7", "CounterPrisoner$0",
                "Down$0", "False$0", "NULL$0", "Prisoner$0", "Prisoner$1", "State$0",
                "State$1", "State$2", "State$3", "State$4", "State$5", "State$6",
                "State$7", "State$8", "State$9", "SwitcheA$0", "SwitcheB$0", "True$0",
                "Up$0", "ordering/Ord$0"
        );

        Universe universe = new Universe(atomlist);
        TupleFactory factory = universe.factory();
        Bounds bounds = new Bounds(universe);

        TupleSet x0_upper = factory.noneOf(1);
        x0_upper.add(factory.tuple("-8"));
        bounds.boundExactly(x0, x0_upper);

        TupleSet x1_upper = factory.noneOf(1);
        x1_upper.add(factory.tuple("0"));
        bounds.boundExactly(x1, x1_upper);

        TupleSet x2_upper = factory.noneOf(1);
        x2_upper.add(factory.tuple("7"));
        bounds.boundExactly(x2, x2_upper);

        TupleSet x3_upper = factory.noneOf(2);
        x3_upper.add(factory.tuple("-8").product(factory.tuple("-7")));
        x3_upper.add(factory.tuple("-7").product(factory.tuple("-6")));
        x3_upper.add(factory.tuple("-6").product(factory.tuple("-5")));
        x3_upper.add(factory.tuple("-5").product(factory.tuple("-4")));
        x3_upper.add(factory.tuple("-4").product(factory.tuple("-3")));
        x3_upper.add(factory.tuple("-3").product(factory.tuple("-2")));
        x3_upper.add(factory.tuple("-2").product(factory.tuple("-1")));
        x3_upper.add(factory.tuple("-1").product(factory.tuple("0")));
        x3_upper.add(factory.tuple("0").product(factory.tuple("1")));
        x3_upper.add(factory.tuple("1").product(factory.tuple("2")));
        x3_upper.add(factory.tuple("2").product(factory.tuple("3")));
        x3_upper.add(factory.tuple("3").product(factory.tuple("4")));
        x3_upper.add(factory.tuple("4").product(factory.tuple("5")));
        x3_upper.add(factory.tuple("5").product(factory.tuple("6")));
        x3_upper.add(factory.tuple("6").product(factory.tuple("7")));
        bounds.boundExactly(x3, x3_upper);

        TupleSet x4_upper = factory.noneOf(1);
        x4_upper.add(factory.tuple("0"));
        x4_upper.add(factory.tuple("1"));
        x4_upper.add(factory.tuple("2"));
        x4_upper.add(factory.tuple("3"));
        bounds.boundExactly(x4, x4_upper);

        TupleSet x5_upper = factory.noneOf(1);
        bounds.boundExactly(x5, x5_upper);

        TupleSet x6_upper = factory.noneOf(1);
        x6_upper.add(factory.tuple("Prisoner$0"));
        x6_upper.add(factory.tuple("Prisoner$1"));
        bounds.bound(x6, x6_upper);

        TupleSet x7_upper = factory.noneOf(1);
        x7_upper.add(factory.tuple("CounterPrisoner$0"));
        bounds.boundExactly(x7, x7_upper);

        TupleSet x8_upper = factory.noneOf(1);
        x8_upper.add(factory.tuple("NULL$0"));
        bounds.boundExactly(x8, x8_upper);

        TupleSet x9_upper = factory.noneOf(1);
        x9_upper.add(factory.tuple("True$0"));
        bounds.boundExactly(x9, x9_upper);

        TupleSet x10_upper = factory.noneOf(1);
        x10_upper.add(factory.tuple("False$0"));
        bounds.boundExactly(x10, x10_upper);

        TupleSet x11_upper = factory.noneOf(1);
        x11_upper.add(factory.tuple("SwitcheA$0"));
        bounds.boundExactly(x11, x11_upper);

        TupleSet x12_upper = factory.noneOf(1);
        x12_upper.add(factory.tuple("SwitcheB$0"));
        bounds.boundExactly(x12, x12_upper);

        TupleSet x13_upper = factory.noneOf(1);
        x13_upper.add(factory.tuple("Up$0"));
        bounds.boundExactly(x13, x13_upper);

        TupleSet x14_upper = factory.noneOf(1);
        x14_upper.add(factory.tuple("Down$0"));
        bounds.boundExactly(x14, x14_upper);

        TupleSet x15_upper = factory.noneOf(1);
        x15_upper.add(factory.tuple("State$0"));
        x15_upper.add(factory.tuple("State$1"));
        x15_upper.add(factory.tuple("State$2"));
        x15_upper.add(factory.tuple("State$3"));
        x15_upper.add(factory.tuple("State$4"));
        x15_upper.add(factory.tuple("State$5"));
        x15_upper.add(factory.tuple("State$6"));
        x15_upper.add(factory.tuple("State$7"));
        x15_upper.add(factory.tuple("State$8"));
        x15_upper.add(factory.tuple("State$9"));
        bounds.boundExactly(x15, x15_upper);

        TupleSet x16_upper = factory.noneOf(1);
        x16_upper.add(factory.tuple("ordering/Ord$0"));
        bounds.boundExactly(x16, x16_upper);

        TupleSet x17_upper = factory.noneOf(2);
        x17_upper.add(factory.tuple("State$0").product(factory.tuple("True$0")));
        x17_upper.add(factory.tuple("State$0").product(factory.tuple("False$0")));
        x17_upper.add(factory.tuple("State$1").product(factory.tuple("True$0")));
        x17_upper.add(factory.tuple("State$1").product(factory.tuple("False$0")));
        x17_upper.add(factory.tuple("State$2").product(factory.tuple("True$0")));
        x17_upper.add(factory.tuple("State$2").product(factory.tuple("False$0")));
        x17_upper.add(factory.tuple("State$3").product(factory.tuple("True$0")));
        x17_upper.add(factory.tuple("State$3").product(factory.tuple("False$0")));
        x17_upper.add(factory.tuple("State$4").product(factory.tuple("True$0")));
        x17_upper.add(factory.tuple("State$4").product(factory.tuple("False$0")));
        x17_upper.add(factory.tuple("State$5").product(factory.tuple("True$0")));
        x17_upper.add(factory.tuple("State$5").product(factory.tuple("False$0")));
        x17_upper.add(factory.tuple("State$6").product(factory.tuple("True$0")));
        x17_upper.add(factory.tuple("State$6").product(factory.tuple("False$0")));
        x17_upper.add(factory.tuple("State$7").product(factory.tuple("True$0")));
        x17_upper.add(factory.tuple("State$7").product(factory.tuple("False$0")));
        x17_upper.add(factory.tuple("State$8").product(factory.tuple("True$0")));
        x17_upper.add(factory.tuple("State$8").product(factory.tuple("False$0")));
        x17_upper.add(factory.tuple("State$9").product(factory.tuple("True$0")));
        x17_upper.add(factory.tuple("State$9").product(factory.tuple("False$0")));
        bounds.bound(x17, x17_upper);

        TupleSet x18_upper = factory.noneOf(3);
        x18_upper.add(factory.tuple("State$0").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$0").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$0").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$0").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$1").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$1").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$1").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$1").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$2").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$2").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$2").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$2").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$3").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$3").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$3").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$3").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$4").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$4").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$4").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$4").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$5").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$5").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$5").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$5").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$6").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$6").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$6").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$6").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$7").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$7").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$7").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$7").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$8").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$8").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$8").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$8").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$9").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$9").product(factory.tuple("SwitcheA$0")).product(factory.tuple("Down$0")));
        x18_upper.add(factory.tuple("State$9").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Up$0")));
        x18_upper.add(factory.tuple("State$9").product(factory.tuple("SwitcheB$0")).product(factory.tuple("Down$0")));
        bounds.bound(x18, x18_upper);

        TupleSet x19_upper = factory.noneOf(2);
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("-8")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("-7")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("-6")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("-5")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("-4")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("-3")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("-2")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("-1")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("0")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("1")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("2")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("3")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("4")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("5")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("6")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("7")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("-8")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("-7")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("-6")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("-5")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("-4")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("-3")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("-2")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("-1")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("0")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("1")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("2")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("3")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("4")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("5")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("6")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("7")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("-8")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("-7")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("-6")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("-5")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("-4")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("-3")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("-2")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("-1")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("0")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("1")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("2")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("3")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("4")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("5")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("6")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("7")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("-8")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("-7")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("-6")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("-5")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("-4")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("-3")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("-2")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("-1")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("0")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("1")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("2")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("3")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("4")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("5")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("6")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("7")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("-8")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("-7")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("-6")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("-5")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("-4")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("-3")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("-2")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("-1")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("0")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("1")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("2")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("3")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("4")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("5")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("6")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("7")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("-8")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("-7")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("-6")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("-5")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("-4")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("-3")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("-2")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("-1")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("0")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("1")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("2")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("3")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("4")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("5")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("6")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("7")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("-8")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("-7")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("-6")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("-5")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("-4")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("-3")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("-2")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("-1")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("0")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("1")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("2")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("3")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("4")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("5")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("6")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("7")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("-8")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("-7")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("-6")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("-5")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("-4")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("-3")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("-2")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("-1")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("0")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("1")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("2")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("3")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("4")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("5")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("6")));
        x19_upper.add(factory.tuple("State$7").product(factory.tuple("7")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("-8")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("-7")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("-6")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("-5")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("-4")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("-3")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("-2")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("-1")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("0")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("1")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("2")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("3")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("4")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("5")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("6")));
        x19_upper.add(factory.tuple("State$8").product(factory.tuple("7")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("-8")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("-7")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("-6")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("-5")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("-4")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("-3")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("-2")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("-1")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("0")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("1")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("2")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("3")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("4")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("5")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("6")));
        x19_upper.add(factory.tuple("State$9").product(factory.tuple("7")));
        bounds.bound(x19, x19_upper);

        TupleSet x20_upper = factory.noneOf(3);
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")).product(factory.tuple("7")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("-8")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("-7")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("-6")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("-5")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("-4")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("-3")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("-2")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("-1")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("0")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("1")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("2")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("3")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("4")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("5")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("6")));
        x20_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")).product(factory.tuple("7")));
        bounds.bound(x20, x20_upper);

        TupleSet x21_upper = factory.noneOf(2);
        x21_upper.add(factory.tuple("State$0").product(factory.tuple("CounterPrisoner$0")));
        x21_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$0")));
        x21_upper.add(factory.tuple("State$0").product(factory.tuple("Prisoner$1")));
        x21_upper.add(factory.tuple("State$0").product(factory.tuple("NULL$0")));
        x21_upper.add(factory.tuple("State$1").product(factory.tuple("CounterPrisoner$0")));
        x21_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$0")));
        x21_upper.add(factory.tuple("State$1").product(factory.tuple("Prisoner$1")));
        x21_upper.add(factory.tuple("State$1").product(factory.tuple("NULL$0")));
        x21_upper.add(factory.tuple("State$2").product(factory.tuple("CounterPrisoner$0")));
        x21_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$0")));
        x21_upper.add(factory.tuple("State$2").product(factory.tuple("Prisoner$1")));
        x21_upper.add(factory.tuple("State$2").product(factory.tuple("NULL$0")));
        x21_upper.add(factory.tuple("State$3").product(factory.tuple("CounterPrisoner$0")));
        x21_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$0")));
        x21_upper.add(factory.tuple("State$3").product(factory.tuple("Prisoner$1")));
        x21_upper.add(factory.tuple("State$3").product(factory.tuple("NULL$0")));
        x21_upper.add(factory.tuple("State$4").product(factory.tuple("CounterPrisoner$0")));
        x21_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$0")));
        x21_upper.add(factory.tuple("State$4").product(factory.tuple("Prisoner$1")));
        x21_upper.add(factory.tuple("State$4").product(factory.tuple("NULL$0")));
        x21_upper.add(factory.tuple("State$5").product(factory.tuple("CounterPrisoner$0")));
        x21_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$0")));
        x21_upper.add(factory.tuple("State$5").product(factory.tuple("Prisoner$1")));
        x21_upper.add(factory.tuple("State$5").product(factory.tuple("NULL$0")));
        x21_upper.add(factory.tuple("State$6").product(factory.tuple("CounterPrisoner$0")));
        x21_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$0")));
        x21_upper.add(factory.tuple("State$6").product(factory.tuple("Prisoner$1")));
        x21_upper.add(factory.tuple("State$6").product(factory.tuple("NULL$0")));
        x21_upper.add(factory.tuple("State$7").product(factory.tuple("CounterPrisoner$0")));
        x21_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$0")));
        x21_upper.add(factory.tuple("State$7").product(factory.tuple("Prisoner$1")));
        x21_upper.add(factory.tuple("State$7").product(factory.tuple("NULL$0")));
        x21_upper.add(factory.tuple("State$8").product(factory.tuple("CounterPrisoner$0")));
        x21_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$0")));
        x21_upper.add(factory.tuple("State$8").product(factory.tuple("Prisoner$1")));
        x21_upper.add(factory.tuple("State$8").product(factory.tuple("NULL$0")));
        x21_upper.add(factory.tuple("State$9").product(factory.tuple("CounterPrisoner$0")));
        x21_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$0")));
        x21_upper.add(factory.tuple("State$9").product(factory.tuple("Prisoner$1")));
        x21_upper.add(factory.tuple("State$9").product(factory.tuple("NULL$0")));
        bounds.bound(x21, x21_upper);

        TupleSet x22_upper = factory.noneOf(1);
        x22_upper.add(factory.tuple("State$0"));
        x22_upper.add(factory.tuple("State$1"));
        x22_upper.add(factory.tuple("State$2"));
        x22_upper.add(factory.tuple("State$3"));
        x22_upper.add(factory.tuple("State$4"));
        x22_upper.add(factory.tuple("State$5"));
        x22_upper.add(factory.tuple("State$6"));
        x22_upper.add(factory.tuple("State$7"));
        x22_upper.add(factory.tuple("State$8"));
        x22_upper.add(factory.tuple("State$9"));
        bounds.bound(x22, x22_upper);

        TupleSet x23_upper = factory.noneOf(2);
        x23_upper.add(factory.tuple("State$0").product(factory.tuple("State$0")));
        x23_upper.add(factory.tuple("State$0").product(factory.tuple("State$1")));
        x23_upper.add(factory.tuple("State$0").product(factory.tuple("State$2")));
        x23_upper.add(factory.tuple("State$0").product(factory.tuple("State$3")));
        x23_upper.add(factory.tuple("State$0").product(factory.tuple("State$4")));
        x23_upper.add(factory.tuple("State$0").product(factory.tuple("State$5")));
        x23_upper.add(factory.tuple("State$0").product(factory.tuple("State$6")));
        x23_upper.add(factory.tuple("State$0").product(factory.tuple("State$7")));
        x23_upper.add(factory.tuple("State$0").product(factory.tuple("State$8")));
        x23_upper.add(factory.tuple("State$0").product(factory.tuple("State$9")));
        x23_upper.add(factory.tuple("State$1").product(factory.tuple("State$0")));
        x23_upper.add(factory.tuple("State$1").product(factory.tuple("State$1")));
        x23_upper.add(factory.tuple("State$1").product(factory.tuple("State$2")));
        x23_upper.add(factory.tuple("State$1").product(factory.tuple("State$3")));
        x23_upper.add(factory.tuple("State$1").product(factory.tuple("State$4")));
        x23_upper.add(factory.tuple("State$1").product(factory.tuple("State$5")));
        x23_upper.add(factory.tuple("State$1").product(factory.tuple("State$6")));
        x23_upper.add(factory.tuple("State$1").product(factory.tuple("State$7")));
        x23_upper.add(factory.tuple("State$1").product(factory.tuple("State$8")));
        x23_upper.add(factory.tuple("State$1").product(factory.tuple("State$9")));
        x23_upper.add(factory.tuple("State$2").product(factory.tuple("State$0")));
        x23_upper.add(factory.tuple("State$2").product(factory.tuple("State$1")));
        x23_upper.add(factory.tuple("State$2").product(factory.tuple("State$2")));
        x23_upper.add(factory.tuple("State$2").product(factory.tuple("State$3")));
        x23_upper.add(factory.tuple("State$2").product(factory.tuple("State$4")));
        x23_upper.add(factory.tuple("State$2").product(factory.tuple("State$5")));
        x23_upper.add(factory.tuple("State$2").product(factory.tuple("State$6")));
        x23_upper.add(factory.tuple("State$2").product(factory.tuple("State$7")));
        x23_upper.add(factory.tuple("State$2").product(factory.tuple("State$8")));
        x23_upper.add(factory.tuple("State$2").product(factory.tuple("State$9")));
        x23_upper.add(factory.tuple("State$3").product(factory.tuple("State$0")));
        x23_upper.add(factory.tuple("State$3").product(factory.tuple("State$1")));
        x23_upper.add(factory.tuple("State$3").product(factory.tuple("State$2")));
        x23_upper.add(factory.tuple("State$3").product(factory.tuple("State$3")));
        x23_upper.add(factory.tuple("State$3").product(factory.tuple("State$4")));
        x23_upper.add(factory.tuple("State$3").product(factory.tuple("State$5")));
        x23_upper.add(factory.tuple("State$3").product(factory.tuple("State$6")));
        x23_upper.add(factory.tuple("State$3").product(factory.tuple("State$7")));
        x23_upper.add(factory.tuple("State$3").product(factory.tuple("State$8")));
        x23_upper.add(factory.tuple("State$3").product(factory.tuple("State$9")));
        x23_upper.add(factory.tuple("State$4").product(factory.tuple("State$0")));
        x23_upper.add(factory.tuple("State$4").product(factory.tuple("State$1")));
        x23_upper.add(factory.tuple("State$4").product(factory.tuple("State$2")));
        x23_upper.add(factory.tuple("State$4").product(factory.tuple("State$3")));
        x23_upper.add(factory.tuple("State$4").product(factory.tuple("State$4")));
        x23_upper.add(factory.tuple("State$4").product(factory.tuple("State$5")));
        x23_upper.add(factory.tuple("State$4").product(factory.tuple("State$6")));
        x23_upper.add(factory.tuple("State$4").product(factory.tuple("State$7")));
        x23_upper.add(factory.tuple("State$4").product(factory.tuple("State$8")));
        x23_upper.add(factory.tuple("State$4").product(factory.tuple("State$9")));
        x23_upper.add(factory.tuple("State$5").product(factory.tuple("State$0")));
        x23_upper.add(factory.tuple("State$5").product(factory.tuple("State$1")));
        x23_upper.add(factory.tuple("State$5").product(factory.tuple("State$2")));
        x23_upper.add(factory.tuple("State$5").product(factory.tuple("State$3")));
        x23_upper.add(factory.tuple("State$5").product(factory.tuple("State$4")));
        x23_upper.add(factory.tuple("State$5").product(factory.tuple("State$5")));
        x23_upper.add(factory.tuple("State$5").product(factory.tuple("State$6")));
        x23_upper.add(factory.tuple("State$5").product(factory.tuple("State$7")));
        x23_upper.add(factory.tuple("State$5").product(factory.tuple("State$8")));
        x23_upper.add(factory.tuple("State$5").product(factory.tuple("State$9")));
        x23_upper.add(factory.tuple("State$6").product(factory.tuple("State$0")));
        x23_upper.add(factory.tuple("State$6").product(factory.tuple("State$1")));
        x23_upper.add(factory.tuple("State$6").product(factory.tuple("State$2")));
        x23_upper.add(factory.tuple("State$6").product(factory.tuple("State$3")));
        x23_upper.add(factory.tuple("State$6").product(factory.tuple("State$4")));
        x23_upper.add(factory.tuple("State$6").product(factory.tuple("State$5")));
        x23_upper.add(factory.tuple("State$6").product(factory.tuple("State$6")));
        x23_upper.add(factory.tuple("State$6").product(factory.tuple("State$7")));
        x23_upper.add(factory.tuple("State$6").product(factory.tuple("State$8")));
        x23_upper.add(factory.tuple("State$6").product(factory.tuple("State$9")));
        x23_upper.add(factory.tuple("State$7").product(factory.tuple("State$0")));
        x23_upper.add(factory.tuple("State$7").product(factory.tuple("State$1")));
        x23_upper.add(factory.tuple("State$7").product(factory.tuple("State$2")));
        x23_upper.add(factory.tuple("State$7").product(factory.tuple("State$3")));
        x23_upper.add(factory.tuple("State$7").product(factory.tuple("State$4")));
        x23_upper.add(factory.tuple("State$7").product(factory.tuple("State$5")));
        x23_upper.add(factory.tuple("State$7").product(factory.tuple("State$6")));
        x23_upper.add(factory.tuple("State$7").product(factory.tuple("State$7")));
        x23_upper.add(factory.tuple("State$7").product(factory.tuple("State$8")));
        x23_upper.add(factory.tuple("State$7").product(factory.tuple("State$9")));
        x23_upper.add(factory.tuple("State$8").product(factory.tuple("State$0")));
        x23_upper.add(factory.tuple("State$8").product(factory.tuple("State$1")));
        x23_upper.add(factory.tuple("State$8").product(factory.tuple("State$2")));
        x23_upper.add(factory.tuple("State$8").product(factory.tuple("State$3")));
        x23_upper.add(factory.tuple("State$8").product(factory.tuple("State$4")));
        x23_upper.add(factory.tuple("State$8").product(factory.tuple("State$5")));
        x23_upper.add(factory.tuple("State$8").product(factory.tuple("State$6")));
        x23_upper.add(factory.tuple("State$8").product(factory.tuple("State$7")));
        x23_upper.add(factory.tuple("State$8").product(factory.tuple("State$8")));
        x23_upper.add(factory.tuple("State$8").product(factory.tuple("State$9")));
        x23_upper.add(factory.tuple("State$9").product(factory.tuple("State$0")));
        x23_upper.add(factory.tuple("State$9").product(factory.tuple("State$1")));
        x23_upper.add(factory.tuple("State$9").product(factory.tuple("State$2")));
        x23_upper.add(factory.tuple("State$9").product(factory.tuple("State$3")));
        x23_upper.add(factory.tuple("State$9").product(factory.tuple("State$4")));
        x23_upper.add(factory.tuple("State$9").product(factory.tuple("State$5")));
        x23_upper.add(factory.tuple("State$9").product(factory.tuple("State$6")));
        x23_upper.add(factory.tuple("State$9").product(factory.tuple("State$7")));
        x23_upper.add(factory.tuple("State$9").product(factory.tuple("State$8")));
        x23_upper.add(factory.tuple("State$9").product(factory.tuple("State$9")));
        bounds.bound(x23, x23_upper);

        TupleSet x24_upper = factory.noneOf(1);
        x24_upper.add(factory.tuple("State$0"));
        x24_upper.add(factory.tuple("State$1"));
        x24_upper.add(factory.tuple("State$2"));
        x24_upper.add(factory.tuple("State$3"));
        x24_upper.add(factory.tuple("State$4"));
        x24_upper.add(factory.tuple("State$5"));
        x24_upper.add(factory.tuple("State$6"));
        x24_upper.add(factory.tuple("State$7"));
        x24_upper.add(factory.tuple("State$8"));
        x24_upper.add(factory.tuple("State$9"));
        bounds.bound(x24, x24_upper);

        bounds.boundExactly(-8,factory.range(factory.tuple("-8"),factory.tuple("-8")));
        bounds.boundExactly(-7,factory.range(factory.tuple("-7"),factory.tuple("-7")));
        bounds.boundExactly(-6,factory.range(factory.tuple("-6"),factory.tuple("-6")));
        bounds.boundExactly(-5,factory.range(factory.tuple("-5"),factory.tuple("-5")));
        bounds.boundExactly(-4,factory.range(factory.tuple("-4"),factory.tuple("-4")));
        bounds.boundExactly(-3,factory.range(factory.tuple("-3"),factory.tuple("-3")));
        bounds.boundExactly(-2,factory.range(factory.tuple("-2"),factory.tuple("-2")));
        bounds.boundExactly(-1,factory.range(factory.tuple("-1"),factory.tuple("-1")));
        bounds.boundExactly(0,factory.range(factory.tuple("0"),factory.tuple("0")));
        bounds.boundExactly(1,factory.range(factory.tuple("1"),factory.tuple("1")));
        bounds.boundExactly(2,factory.range(factory.tuple("2"),factory.tuple("2")));
        bounds.boundExactly(3,factory.range(factory.tuple("3"),factory.tuple("3")));
        bounds.boundExactly(4,factory.range(factory.tuple("4"),factory.tuple("4")));
        bounds.boundExactly(5,factory.range(factory.tuple("5"),factory.tuple("5")));
        bounds.boundExactly(6,factory.range(factory.tuple("6"),factory.tuple("6")));
        bounds.boundExactly(7,factory.range(factory.tuple("7"),factory.tuple("7")));

        Expression x27=x6.intersection(x7);
        Formula x26=x27.no();
        Expression x29=x9.intersection(x10);
        Formula x28=x29.no();
        Expression x31=x11.intersection(x12);
        Formula x30=x31.no();
        Expression x33=x13.intersection(x14);
        Formula x32=x33.no();
        Variable x36=Variable.unary("Safety_this");
        Decls x35=x36.oneOf(x15);
        Expression x39=x36.join(x17);
        Formula x38=x39.one();
        Expression x41=x9.union(x10);
        Formula x40=x39.in(x41);
        Formula x37=x38.and(x40);
        Formula x34=x37.forAll(x35);
        Expression x43=x17.join(Expression.UNIV);
        Formula x42=x43.in(x15);
        Variable x47=Variable.unary("Safety_this");
        Decls x46=x47.oneOf(x15);
        Expression x51=x47.join(x18);
        Expression x53=x11.union(x12);
        Expression x54=x13.union(x14);
        Expression x52=x53.product(x54);
        Formula x50=x51.in(x52);
        Variable x57=Variable.unary("");
        Decls x56=x57.oneOf(x53);
        Expression x60=x57.join(x51);
        Formula x59=x60.one();
        Formula x61=x60.in(x54);
        Formula x58=x59.and(x61);
        Formula x55=x58.forAll(x56);
        Formula x49=x50.and(x55);
        Variable x64=Variable.unary("");
        Decls x63=x64.oneOf(x54);
        Expression x66=x51.join(x64);
        Formula x65=x66.in(x53);
        Formula x62=x65.forAll(x63);
        Formula x48=x49.and(x62);
        Formula x45=x48.forAll(x46);
        Expression x69=x18.join(Expression.UNIV);
        Expression x68=x69.join(Expression.UNIV);
        Formula x67=x68.in(x15);
        Variable x72=Variable.unary("Safety_this");
        Decls x71=x72.oneOf(x15);
        Expression x75=x72.join(x19);
        Formula x74=x75.one();
        Formula x76=x75.in(Expression.INTS);
        Formula x73=x74.and(x76);
        Formula x70=x73.forAll(x71);
        Expression x79=x19.join(Expression.UNIV);
        Formula x78=x79.in(x15);
        Variable x82=Variable.unary("Safety_this");
        Decls x81=x82.oneOf(x15);
        Expression x86=x82.join(x20);
        Expression x87=x6.product(Expression.INTS);
        Formula x85=x86.in(x87);
        Variable x90=Variable.unary("");
        Decls x89=x90.oneOf(x6);
        Expression x93=x90.join(x86);
        Formula x92=x93.one();
        Formula x94=x93.in(Expression.INTS);
        Formula x91=x92.and(x94);
        Formula x88=x91.forAll(x89);
        Formula x84=x85.and(x88);
        Variable x97=Variable.unary("");
        Decls x96=x97.oneOf(Expression.INTS);
        Expression x99=x86.join(x97);
        Formula x98=x99.in(x6);
        Formula x95=x98.forAll(x96);
        Formula x83=x84.and(x95);
        Formula x80=x83.forAll(x81);
        Expression x102=x20.join(Expression.UNIV);
        Expression x101=x102.join(Expression.UNIV);
        Formula x100=x101.in(x15);
        Variable x105=Variable.unary("Safety_this");
        Decls x104=x105.oneOf(x15);
        Expression x108=x105.join(x21);
        Formula x107=x108.one();
        Expression x111=x6.union(x7);
        Expression x110=x111.union(x8);
        Formula x109=x108.in(x110);
        Formula x106=x107.and(x109);
        Formula x103=x106.forAll(x104);
        Expression x113=x21.join(Expression.UNIV);
        Formula x112=x113.in(x15);
        Expression x116=x16.product(x22);
        Expression x115=x16.join(x116);
        Formula x114=x115.in(x15);
        Expression x119=x16.product(x23);
        Expression x118=x16.join(x119);
        Expression x120=x15.product(x15);
        Formula x117=x118.in(x120);
        Formula x121=x23.totalOrder(x15,x22,x24);
        Expression x123=x6.union(x7);
        Formula x122=x111.eq(x123);
        IntExpression x125=x111.count();
        IntExpression x126=IntConstant.constant(1);
        Formula x124=x125.gt(x126);
        Expression x128=x11.union(x12);
        Formula x127=x53.eq(x128);
        Variable x131=Variable.unary("TineSwichedSetToZero_p");
        Decls x130=x131.oneOf(x6);
        IntExpression x135=IntConstant.constant(0);
        Expression x134=x135.toExpression();
        Expression x133=x131.product(x134);
        Expression x136=x22.join(x20);
        Formula x132=x133.in(x136);
        Formula x129=x132.forAll(x130);
        Expression x139=x22.join(x19);
        IntExpression x138=x139.sum();
        IntExpression x140=IntConstant.constant(0);
        Formula x137=x138.eq(x140);
        Variable x143=Variable.unary("SwitchesInBoolean_s");
        Decls x142=x143.oneOf(x53);
        Expression x146=x143.product(x14);
        Expression x147=x22.join(x18);
        Formula x145=x146.in(x147);
        Expression x149=x143.product(x13);
        Expression x150=x22.join(x18);
        Formula x148=x149.in(x150);
        Formula x144=x145.or(x148);
        Formula x141=x144.forAll(x142);
        Expression x152=x22.join(x17);
        Formula x151=x152.eq(x10);
        Expression x154=x22.join(x21);
        Formula x153=x154.eq(x8);
        Variable x158=Variable.unary("Safety_s");
        Decls x157=x158.oneOf(x15);
        Variable x160=Variable.unary("Safety_s'");
        Expression x161=x158.join(x23);
        Decls x159=x160.oneOf(x161);
        Decls x156=x157.and(x159);
        Variable x166=Variable.unary("Safety_p");
        Decls x165=x166.oneOf(x6);
        Formula x169=x166.in(x6);
        Expression x173=x160.join(x21);
        Formula x172=x173.eq(x166);
        Expression x175=x160.join(x19);
        Expression x176=x158.join(x19);
        Formula x174=x175.eq(x176);
        Formula x171=x172.and(x174);
        Expression x180=x158.join(x17);
        Formula x179=x180.eq(x9);
        Expression x183=x160.join(x18);
        Expression x184=x158.join(x18);
        Formula x182=x183.eq(x184);
        Expression x186=x160.join(x20);
        Expression x187=x158.join(x20);
        Formula x185=x186.eq(x187);
        Formula x181=x182.and(x185);
        Formula x178=x179.implies(x181);
        Formula x189=x179.not();
        Expression x195=x158.join(x18);
        Expression x194=x11.join(x195);
        Formula x193=x194.eq(x14);
        Expression x199=x158.join(x20);
        Expression x198=x166.join(x199);
        IntExpression x197=x198.sum();
        IntExpression x200=IntConstant.constant(2);
        Formula x196=x197.lt(x200);
        Formula x192=x193.and(x196);
        Expression x205=x160.join(x18);
        Expression x204=x11.join(x205);
        Formula x203=x204.eq(x13);
        Expression x208=x160.join(x18);
        Expression x207=x12.join(x208);
        Expression x210=x158.join(x18);
        Expression x209=x12.join(x210);
        Formula x206=x207.eq(x209);
        Formula x202=x203.and(x206);
        Expression x212=x160.join(x20);
        Expression x215=x158.join(x20);
        Expression x218=x158.join(x20);
        Expression x217=x166.join(x218);
        Expression x216=x166.product(x217);
        Expression x214=x215.difference(x216);
        Expression x224=x158.join(x20);
        Expression x223=x166.join(x224);
        IntExpression x222=x223.sum();
        IntExpression x225=IntConstant.constant(1);
        IntExpression x221=x222.plus(x225);
        Expression x220=x221.toExpression();
        Expression x219=x166.product(x220);
        Expression x213=x214.union(x219);
        Formula x211=x212.eq(x213);
        Formula x201=x202.and(x211);
        Formula x191=x192.implies(x201);
        Formula x227=x192.not();
        Expression x231=x160.join(x20);
        Expression x232=x158.join(x20);
        Formula x230=x231.eq(x232);
        Expression x235=x160.join(x18);
        Expression x234=x11.join(x235);
        Expression x237=x158.join(x18);
        Expression x236=x11.join(x237);
        Formula x233=x234.eq(x236);
        Formula x229=x230.and(x233);
        Expression x242=x158.join(x18);
        Expression x241=x12.join(x242);
        Formula x240=x241.eq(x13);
        Expression x245=x160.join(x18);
        Expression x244=x12.join(x245);
        Formula x243=x244.eq(x14);
        Formula x239=x240.implies(x243);
        Formula x247=x240.not();
        Expression x250=x160.join(x18);
        Expression x249=x12.join(x250);
        Formula x248=x249.eq(x13);
        Formula x246=x247.implies(x248);
        Formula x238=x239.and(x246);
        Formula x228=x229.and(x238);
        Formula x226=x227.implies(x228);
        Formula x190=x191.and(x226);
        Formula x188=x189.implies(x190);
        Formula x177=x178.and(x188);
        Formula x170=x171.and(x177);
        Formula x168=x169.and(x170);
        Expression x252=x160.join(x17);
        Expression x253=x158.join(x17);
        Formula x251=x252.eq(x253);
        Formula x167=x168.and(x251);
        Expression x164=x167.comprehension(x165);
        Formula x163=x164.one();
        Variable x257=Variable.unary("Safety_p");
        Decls x256=x257.oneOf(x7);
        Formula x260=x257.eq(x7);
        Expression x263=x160.join(x21);
        Formula x262=x263.eq(x257);
        Expression x267=x158.join(x17);
        Formula x266=x267.eq(x9);
        Expression x271=x160.join(x18);
        Expression x272=x158.join(x18);
        Formula x270=x271.eq(x272);
        Expression x274=x160.join(x17);
        Expression x275=x158.join(x17);
        Formula x273=x274.eq(x275);
        Formula x269=x270.and(x273);
        Expression x277=x160.join(x19);
        Expression x278=x158.join(x19);
        Formula x276=x277.eq(x278);
        Formula x268=x269.and(x276);
        Formula x265=x266.implies(x268);
        Formula x280=x266.not();
        Expression x285=x158.join(x18);
        Expression x284=x11.join(x285);
        Formula x283=x284.eq(x13);
        Expression x290=x160.join(x18);
        Expression x289=x11.join(x290);
        Formula x288=x289.eq(x14);
        Expression x294=x160.join(x18);
        Expression x293=x12.join(x294);
        Expression x296=x158.join(x18);
        Expression x295=x12.join(x296);
        Formula x292=x293.eq(x295);
        Expression x300=x160.join(x19);
        IntExpression x303=IntConstant.constant(2);
        IntExpression x305=x111.count();
        IntExpression x306=IntConstant.constant(1);
        IntExpression x304=x305.minus(x306);
        IntExpression x302=x303.multiply(x304);
        Expression x301=x302.toExpression();
        Formula x299=x300.eq(x301);
        Expression x308=x160.join(x17);
        Formula x307=x308.eq(x9);
        Formula x298=x299.implies(x307);
        Formula x310=x299.not();
        Expression x312=x160.join(x17);
        Expression x313=x158.join(x17);
        Formula x311=x312.eq(x313);
        Formula x309=x310.implies(x311);
        Formula x297=x298.and(x309);
        Formula x291=x292.and(x297);
        Formula x287=x288.and(x291);
        Expression x316=x160.join(x19);
        IntExpression x315=x316.sum();
        Expression x319=x158.join(x19);
        IntExpression x318=x319.sum();
        IntExpression x320=IntConstant.constant(1);
        IntExpression x317=x318.plus(x320);
        Formula x314=x315.eq(x317);
        Formula x286=x287.and(x314);
        Formula x282=x283.implies(x286);
        Formula x322=x283.not();
        Expression x326=x160.join(x19);
        Expression x327=x158.join(x19);
        Formula x325=x326.eq(x327);
        Expression x330=x160.join(x17);
        Expression x331=x158.join(x17);
        Formula x329=x330.eq(x331);
        Expression x336=x158.join(x18);
        Expression x335=x12.join(x336);
        Formula x334=x335.eq(x13);
        Expression x339=x160.join(x18);
        Expression x338=x12.join(x339);
        Formula x337=x338.eq(x14);
        Formula x333=x334.implies(x337);
        Formula x341=x334.not();
        Expression x344=x160.join(x18);
        Expression x343=x12.join(x344);
        Formula x342=x343.eq(x13);
        Formula x340=x341.implies(x342);
        Formula x332=x333.and(x340);
        Formula x328=x329.and(x332);
        Formula x324=x325.and(x328);
        Expression x347=x160.join(x18);
        Expression x346=x11.join(x347);
        Expression x349=x158.join(x18);
        Expression x348=x11.join(x349);
        Formula x345=x346.eq(x348);
        Formula x323=x324.and(x345);
        Formula x321=x322.implies(x323);
        Formula x281=x282.and(x321);
        Formula x279=x280.implies(x281);
        Formula x264=x265.and(x279);
        Formula x261=x262.and(x264);
        Formula x259=x260.and(x261);
        Expression x351=x160.join(x20);
        Expression x352=x158.join(x20);
        Formula x350=x351.eq(x352);
        Formula x258=x259.and(x350);
        Expression x255=x258.comprehension(x256);
        Formula x254=x255.one();
        Formula x162=x163.or(x254);
        Formula x155=x162.forAll(x156);
        Variable x356=Variable.unary("Safety_s");
        Decls x355=x356.oneOf(x15);
        Expression x361=x356.join(x19);
        IntExpression x364=IntConstant.constant(2);
        IntExpression x366=x111.count();
        IntExpression x367=IntConstant.constant(1);
        IntExpression x365=x366.minus(x367);
        IntExpression x363=x364.multiply(x365);
        Expression x362=x363.toExpression();
        Formula x360=x361.eq(x362);
        Formula x359=x360.not();
        Variable x370=Variable.unary("Safety_p");
        Decls x369=x370.oneOf(x6);
        Expression x374=x356.join(x20);
        Expression x373=x370.join(x374);
        IntExpression x372=x373.sum();
        IntExpression x375=IntConstant.constant(0);
        Formula x371=x372.gt(x375);
        Formula x368=x371.forAll(x369);
        Formula x358=x359.or(x368);
        Expression x378=x356.join(x17);
        Formula x377=x378.eq(x9);
        Expression x380=x356.join(x19);
        IntExpression x383=IntConstant.constant(2);
        IntExpression x385=x111.count();
        IntExpression x386=IntConstant.constant(1);
        IntExpression x384=x385.minus(x386);
        IntExpression x382=x383.multiply(x384);
        Expression x381=x382.toExpression();
        Formula x379=x380.eq(x381);
        Formula x376=x377.iff(x379);
        Formula x357=x358.and(x376);
        Formula x354=x357.forAll(x355);
        Formula x353=x354.not();
        Formula x387=x0.eq(x0);
        Formula x388=x1.eq(x1);
        Formula x389=x2.eq(x2);
        Formula x390=x3.eq(x3);
        Formula x391=x4.eq(x4);
        Formula x392=x5.eq(x5);
        Formula x393=x6.eq(x6);
        Formula x394=x7.eq(x7);
        Formula x395=x8.eq(x8);
        Formula x396=x9.eq(x9);
        Formula x397=x10.eq(x10);
        Formula x398=x11.eq(x11);
        Formula x399=x12.eq(x12);
        Formula x400=x13.eq(x13);
        Formula x401=x14.eq(x14);
        Formula x402=x15.eq(x15);
        Formula x403=x16.eq(x16);
        Formula x404=x17.eq(x17);
        Formula x405=x18.eq(x18);
        Formula x406=x19.eq(x19);
        Formula x407=x20.eq(x20);
        Formula x408=x21.eq(x21);
        Formula x409=x22.eq(x22);
        Formula x410=x23.eq(x23);
        Formula x411=x24.eq(x24);
        Formula x25=Formula.compose(FormulaOperator.AND, x26, x28, x30, x32, x34, x42, x45, x67, x70, x78, x80, x100, x103, x112, x114, x117, x121, x122, x124, x127, x129, x137, x141, x151, x153, x155, x353, x387, x388, x389, x390, x391, x392, x393, x394, x395, x396, x397, x398, x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, x409, x410, x411);

        Solver solver = new Solver();
        solver.options().setSolver(SATFactory.MiniSat);
        solver.options().setBitwidth(4);
        //solver.options().setFlatten(false);
        solver.options().setIntEncoding(Options.IntEncoding.TWOSCOMPLEMENT);
        solver.options().setSymmetryBreaking(20);
        solver.options().setSkolemDepth(0);
        System.out.println("Solving...");
        System.out.flush();
        Solution sol = solver.solve(x25,bounds);
        System.out.println(sol.toString());
    }}