package kodkod.examples.models.algorithm.election;

import java.util.Arrays;
import java.util.List;
import kodkod.ast.*;
import kodkod.ast.operator.*;
import kodkod.examples.ExampleMetadata;
import kodkod.instance.*;
import kodkod.engine.*;
import kodkod.engine.satlab.SATFactory;
import kodkod.engine.config.Options;

@ExampleMetadata(
        Name = "ringlead",
        Note = "",
        IsCheck = true,
        PartialModel = true,
        BinaryRelations = 14,
        TernaryRelations =6,
        NaryRelations = 0,
        HierarchicalTypes = 0,
        NestedRelationalJoins = 28,
        TransitiveClosure = 1,
        NestedQuantifiers = 3,
        SetCardinality = 5,
        Additions = 0,
        Subtractions = 0,
        Comparison = 17,
        OrderedRelations = 2,
        Constraints =28
)

public final class ringleadSomeLeaderRun {

    public static void main(String[] args) throws Exception {

        Relation x0 = Relation.unary("Int/min");
        Relation x1 = Relation.unary("Int/zero");
        Relation x2 = Relation.unary("Int/max");
        Relation x3 = Relation.nary("Int/next", 2);
        Relation x4 = Relation.unary("seq/Int");
        Relation x5 = Relation.unary("String");
        Relation x6 = Relation.unary("bool/True");
        Relation x7 = Relation.unary("bool/False");
        Relation x8 = Relation.unary("this/RingLeadNode");
        Relation x9 = Relation.unary("msg/Node remainder");
        Relation x10 = Relation.unary("this/RingLeadMsgState");
        Relation x11 = Relation.unary("msg/MsgState remainder");
        Relation x12 = Relation.unary("this/MsgViz");
        Relation x13 = Relation.unary("msg/Msg remainder");
        Relation x14 = Relation.unary("msg/Tick");
        Relation x15 = Relation.unary("this/RingLeadNodeState");
        Relation x16 = Relation.unary("msg/NodeState remainder");
        Relation x17 = Relation.unary("tickOrd/Ord");
        Relation x18 = Relation.unary("nodeOrd/Ord");
        Relation x19 = Relation.nary("this/RingLeadNode.rightNeighbor", 2);
        Relation x20 = Relation.nary("this/RingLeadMsgState.id", 2);
        Relation x21 = Relation.nary("this/MsgViz.vFrom", 2);
        Relation x22 = Relation.nary("this/MsgViz.vTo", 2);
        Relation x23 = Relation.nary("this/MsgViz.vId", 2);
        Relation x24 = Relation.nary("this/RingLeadNodeState.leader", 2);
        Relation x25 = Relation.nary("msg/MsgState.from", 2);
        Relation x26 = Relation.nary("msg/MsgState.to", 2);
        Relation x27 = Relation.nary("msg/Msg.state", 2);
        Relation x28 = Relation.nary("msg/Msg.sentOn", 2);
        Relation x29 = Relation.nary("msg/Msg.readOn", 3);
        Relation x30 = Relation.nary("msg/Tick.state", 3);
        Relation x31 = Relation.nary("msg/Tick.visible", 3);
        Relation x32 = Relation.nary("msg/Tick.read", 3);
        Relation x33 = Relation.nary("msg/Tick.sent", 3);
        Relation x34 = Relation.nary("msg/Tick.available", 2);
        Relation x35 = Relation.nary("msg/Tick.needsToSend", 3);
        Relation x36 = Relation.unary("tickOrd/Ord.First");
        Relation x37 = Relation.nary("tickOrd/Ord.Next", 2);
        Relation x38 = Relation.unary("nodeOrd/Ord.First");
        Relation x39 = Relation.nary("nodeOrd/Ord.Next", 2);
        Relation x40 = Relation.unary("");

        List<String> atomlist = Arrays.asList(
                "-1", "-2", "-3", "-4", "-5",
                "-6", "-7", "-8", "0", "1", "2",
                "3", "4", "5", "6", "7", "bool/False$0",
                "bool/True$0", "msg/Msg$0", "msg/Msg$1", "msg/Msg$2", "msg/Msg$3", "msg/Msg$4",
                "msg/MsgState$0", "msg/MsgState$1", "msg/MsgState$2", "msg/MsgState$3", "msg/MsgState$4", "msg/Node$0",
                "msg/Node$1", "msg/Node$2", "msg/NodeState$0", "msg/NodeState$1", "msg/Tick$0", "msg/Tick$1",
                "msg/Tick$2", "msg/Tick$3", "msg/Tick$4", "nodeOrd/Ord$0", "tickOrd/Ord$0"
        );

        Universe universe = new Universe(atomlist);
        TupleFactory factory = universe.factory();
        Bounds bounds = new Bounds(universe);

        TupleSet x0_upper = factory.noneOf(1);
        x0_upper.add(factory.tuple("-8"));
        bounds.boundExactly(x0, x0_upper);

        TupleSet x1_upper = factory.noneOf(1);
        x1_upper.add(factory.tuple("0"));
        bounds.boundExactly(x1, x1_upper);

        TupleSet x2_upper = factory.noneOf(1);
        x2_upper.add(factory.tuple("7"));
        bounds.boundExactly(x2, x2_upper);

        TupleSet x3_upper = factory.noneOf(2);
        x3_upper.add(factory.tuple("-8").product(factory.tuple("-7")));
        x3_upper.add(factory.tuple("-7").product(factory.tuple("-6")));
        x3_upper.add(factory.tuple("-6").product(factory.tuple("-5")));
        x3_upper.add(factory.tuple("-5").product(factory.tuple("-4")));
        x3_upper.add(factory.tuple("-4").product(factory.tuple("-3")));
        x3_upper.add(factory.tuple("-3").product(factory.tuple("-2")));
        x3_upper.add(factory.tuple("-2").product(factory.tuple("-1")));
        x3_upper.add(factory.tuple("-1").product(factory.tuple("0")));
        x3_upper.add(factory.tuple("0").product(factory.tuple("1")));
        x3_upper.add(factory.tuple("1").product(factory.tuple("2")));
        x3_upper.add(factory.tuple("2").product(factory.tuple("3")));
        x3_upper.add(factory.tuple("3").product(factory.tuple("4")));
        x3_upper.add(factory.tuple("4").product(factory.tuple("5")));
        x3_upper.add(factory.tuple("5").product(factory.tuple("6")));
        x3_upper.add(factory.tuple("6").product(factory.tuple("7")));
        bounds.boundExactly(x3, x3_upper);

        TupleSet x4_upper = factory.noneOf(1);
        x4_upper.add(factory.tuple("0"));
        x4_upper.add(factory.tuple("1"));
        bounds.boundExactly(x4, x4_upper);

        TupleSet x5_upper = factory.noneOf(1);
        bounds.boundExactly(x5, x5_upper);

        TupleSet x6_upper = factory.noneOf(1);
        x6_upper.add(factory.tuple("bool/True$0"));
        bounds.boundExactly(x6, x6_upper);

        TupleSet x7_upper = factory.noneOf(1);
        x7_upper.add(factory.tuple("bool/False$0"));
        bounds.boundExactly(x7, x7_upper);

        TupleSet x8_upper = factory.noneOf(1);
        x8_upper.add(factory.tuple("msg/Node$0"));
        x8_upper.add(factory.tuple("msg/Node$1"));
        x8_upper.add(factory.tuple("msg/Node$2"));
        bounds.boundExactly(x8, x8_upper);

        TupleSet x9_upper = factory.noneOf(1);
        x9_upper.add(factory.tuple("msg/Node$0"));
        x9_upper.add(factory.tuple("msg/Node$1"));
        x9_upper.add(factory.tuple("msg/Node$2"));
        bounds.boundExactly(x9, x9_upper);

        TupleSet x10_upper = factory.noneOf(1);
        x10_upper.add(factory.tuple("msg/MsgState$0"));
        x10_upper.add(factory.tuple("msg/MsgState$1"));
        x10_upper.add(factory.tuple("msg/MsgState$2"));
        x10_upper.add(factory.tuple("msg/MsgState$3"));
        x10_upper.add(factory.tuple("msg/MsgState$4"));
        bounds.bound(x10, x10_upper);

        TupleSet x11_upper = factory.noneOf(1);
        x11_upper.add(factory.tuple("msg/MsgState$0"));
        x11_upper.add(factory.tuple("msg/MsgState$1"));
        x11_upper.add(factory.tuple("msg/MsgState$2"));
        x11_upper.add(factory.tuple("msg/MsgState$3"));
        x11_upper.add(factory.tuple("msg/MsgState$4"));
        bounds.bound(x11, x11_upper);

        TupleSet x12_upper = factory.noneOf(1);
        x12_upper.add(factory.tuple("msg/Msg$0"));
        x12_upper.add(factory.tuple("msg/Msg$1"));
        x12_upper.add(factory.tuple("msg/Msg$2"));
        x12_upper.add(factory.tuple("msg/Msg$3"));
        x12_upper.add(factory.tuple("msg/Msg$4"));
        bounds.bound(x12, x12_upper);

        TupleSet x13_upper = factory.noneOf(1);
        x13_upper.add(factory.tuple("msg/Msg$0"));
        x13_upper.add(factory.tuple("msg/Msg$1"));
        x13_upper.add(factory.tuple("msg/Msg$2"));
        x13_upper.add(factory.tuple("msg/Msg$3"));
        x13_upper.add(factory.tuple("msg/Msg$4"));
        bounds.bound(x13, x13_upper);

        TupleSet x14_upper = factory.noneOf(1);
        x14_upper.add(factory.tuple("msg/Tick$0"));
        x14_upper.add(factory.tuple("msg/Tick$1"));
        x14_upper.add(factory.tuple("msg/Tick$2"));
        x14_upper.add(factory.tuple("msg/Tick$3"));
        x14_upper.add(factory.tuple("msg/Tick$4"));
        bounds.boundExactly(x14, x14_upper);

        TupleSet x15_upper = factory.noneOf(1);
        x15_upper.add(factory.tuple("msg/NodeState$0"));
        x15_upper.add(factory.tuple("msg/NodeState$1"));
        bounds.bound(x15, x15_upper);

        TupleSet x16_upper = factory.noneOf(1);
        x16_upper.add(factory.tuple("msg/NodeState$0"));
        x16_upper.add(factory.tuple("msg/NodeState$1"));
        bounds.bound(x16, x16_upper);

        TupleSet x17_upper = factory.noneOf(1);
        x17_upper.add(factory.tuple("tickOrd/Ord$0"));
        bounds.boundExactly(x17, x17_upper);

        TupleSet x18_upper = factory.noneOf(1);
        x18_upper.add(factory.tuple("nodeOrd/Ord$0"));
        bounds.boundExactly(x18, x18_upper);

        TupleSet x19_upper = factory.noneOf(2);
        x19_upper.add(factory.tuple("msg/Node$0").product(factory.tuple("msg/Node$0")));
        x19_upper.add(factory.tuple("msg/Node$0").product(factory.tuple("msg/Node$1")));
        x19_upper.add(factory.tuple("msg/Node$0").product(factory.tuple("msg/Node$2")));
        x19_upper.add(factory.tuple("msg/Node$1").product(factory.tuple("msg/Node$0")));
        x19_upper.add(factory.tuple("msg/Node$1").product(factory.tuple("msg/Node$1")));
        x19_upper.add(factory.tuple("msg/Node$1").product(factory.tuple("msg/Node$2")));
        x19_upper.add(factory.tuple("msg/Node$2").product(factory.tuple("msg/Node$0")));
        x19_upper.add(factory.tuple("msg/Node$2").product(factory.tuple("msg/Node$1")));
        x19_upper.add(factory.tuple("msg/Node$2").product(factory.tuple("msg/Node$2")));
        bounds.bound(x19, x19_upper);

        TupleSet x20_upper = factory.noneOf(2);
        x20_upper.add(factory.tuple("msg/MsgState$0").product(factory.tuple("msg/Node$0")));
        x20_upper.add(factory.tuple("msg/MsgState$0").product(factory.tuple("msg/Node$1")));
        x20_upper.add(factory.tuple("msg/MsgState$0").product(factory.tuple("msg/Node$2")));
        x20_upper.add(factory.tuple("msg/MsgState$1").product(factory.tuple("msg/Node$0")));
        x20_upper.add(factory.tuple("msg/MsgState$1").product(factory.tuple("msg/Node$1")));
        x20_upper.add(factory.tuple("msg/MsgState$1").product(factory.tuple("msg/Node$2")));
        x20_upper.add(factory.tuple("msg/MsgState$2").product(factory.tuple("msg/Node$0")));
        x20_upper.add(factory.tuple("msg/MsgState$2").product(factory.tuple("msg/Node$1")));
        x20_upper.add(factory.tuple("msg/MsgState$2").product(factory.tuple("msg/Node$2")));
        x20_upper.add(factory.tuple("msg/MsgState$3").product(factory.tuple("msg/Node$0")));
        x20_upper.add(factory.tuple("msg/MsgState$3").product(factory.tuple("msg/Node$1")));
        x20_upper.add(factory.tuple("msg/MsgState$3").product(factory.tuple("msg/Node$2")));
        x20_upper.add(factory.tuple("msg/MsgState$4").product(factory.tuple("msg/Node$0")));
        x20_upper.add(factory.tuple("msg/MsgState$4").product(factory.tuple("msg/Node$1")));
        x20_upper.add(factory.tuple("msg/MsgState$4").product(factory.tuple("msg/Node$2")));
        bounds.bound(x20, x20_upper);

        TupleSet x21_upper = factory.noneOf(2);
        x21_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$0")));
        x21_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$1")));
        x21_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$2")));
        x21_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$0")));
        x21_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$1")));
        x21_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$2")));
        x21_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$0")));
        x21_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$1")));
        x21_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$2")));
        x21_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$0")));
        x21_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$1")));
        x21_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$2")));
        x21_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$0")));
        x21_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$1")));
        x21_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$2")));
        bounds.bound(x21, x21_upper);

        TupleSet x22_upper = factory.noneOf(2);
        x22_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$0")));
        x22_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$1")));
        x22_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$2")));
        x22_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$0")));
        x22_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$1")));
        x22_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$2")));
        x22_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$0")));
        x22_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$1")));
        x22_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$2")));
        x22_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$0")));
        x22_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$1")));
        x22_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$2")));
        x22_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$0")));
        x22_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$1")));
        x22_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$2")));
        bounds.bound(x22, x22_upper);

        TupleSet x23_upper = factory.noneOf(2);
        x23_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$0")));
        x23_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$1")));
        x23_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$2")));
        x23_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$0")));
        x23_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$1")));
        x23_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$2")));
        x23_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$0")));
        x23_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$1")));
        x23_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$2")));
        x23_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$0")));
        x23_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$1")));
        x23_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$2")));
        x23_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$0")));
        x23_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$1")));
        x23_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$2")));
        bounds.bound(x23, x23_upper);

        TupleSet x24_upper = factory.noneOf(2);
        x24_upper.add(factory.tuple("msg/NodeState$0").product(factory.tuple("bool/True$0")));
        x24_upper.add(factory.tuple("msg/NodeState$0").product(factory.tuple("bool/False$0")));
        x24_upper.add(factory.tuple("msg/NodeState$1").product(factory.tuple("bool/True$0")));
        x24_upper.add(factory.tuple("msg/NodeState$1").product(factory.tuple("bool/False$0")));
        bounds.bound(x24, x24_upper);

        TupleSet x25_upper = factory.noneOf(2);
        x25_upper.add(factory.tuple("msg/MsgState$0").product(factory.tuple("msg/Node$0")));
        x25_upper.add(factory.tuple("msg/MsgState$0").product(factory.tuple("msg/Node$1")));
        x25_upper.add(factory.tuple("msg/MsgState$0").product(factory.tuple("msg/Node$2")));
        x25_upper.add(factory.tuple("msg/MsgState$1").product(factory.tuple("msg/Node$0")));
        x25_upper.add(factory.tuple("msg/MsgState$1").product(factory.tuple("msg/Node$1")));
        x25_upper.add(factory.tuple("msg/MsgState$1").product(factory.tuple("msg/Node$2")));
        x25_upper.add(factory.tuple("msg/MsgState$2").product(factory.tuple("msg/Node$0")));
        x25_upper.add(factory.tuple("msg/MsgState$2").product(factory.tuple("msg/Node$1")));
        x25_upper.add(factory.tuple("msg/MsgState$2").product(factory.tuple("msg/Node$2")));
        x25_upper.add(factory.tuple("msg/MsgState$3").product(factory.tuple("msg/Node$0")));
        x25_upper.add(factory.tuple("msg/MsgState$3").product(factory.tuple("msg/Node$1")));
        x25_upper.add(factory.tuple("msg/MsgState$3").product(factory.tuple("msg/Node$2")));
        x25_upper.add(factory.tuple("msg/MsgState$4").product(factory.tuple("msg/Node$0")));
        x25_upper.add(factory.tuple("msg/MsgState$4").product(factory.tuple("msg/Node$1")));
        x25_upper.add(factory.tuple("msg/MsgState$4").product(factory.tuple("msg/Node$2")));
        bounds.bound(x25, x25_upper);

        TupleSet x26_upper = factory.noneOf(2);
        x26_upper.add(factory.tuple("msg/MsgState$0").product(factory.tuple("msg/Node$0")));
        x26_upper.add(factory.tuple("msg/MsgState$0").product(factory.tuple("msg/Node$1")));
        x26_upper.add(factory.tuple("msg/MsgState$0").product(factory.tuple("msg/Node$2")));
        x26_upper.add(factory.tuple("msg/MsgState$1").product(factory.tuple("msg/Node$0")));
        x26_upper.add(factory.tuple("msg/MsgState$1").product(factory.tuple("msg/Node$1")));
        x26_upper.add(factory.tuple("msg/MsgState$1").product(factory.tuple("msg/Node$2")));
        x26_upper.add(factory.tuple("msg/MsgState$2").product(factory.tuple("msg/Node$0")));
        x26_upper.add(factory.tuple("msg/MsgState$2").product(factory.tuple("msg/Node$1")));
        x26_upper.add(factory.tuple("msg/MsgState$2").product(factory.tuple("msg/Node$2")));
        x26_upper.add(factory.tuple("msg/MsgState$3").product(factory.tuple("msg/Node$0")));
        x26_upper.add(factory.tuple("msg/MsgState$3").product(factory.tuple("msg/Node$1")));
        x26_upper.add(factory.tuple("msg/MsgState$3").product(factory.tuple("msg/Node$2")));
        x26_upper.add(factory.tuple("msg/MsgState$4").product(factory.tuple("msg/Node$0")));
        x26_upper.add(factory.tuple("msg/MsgState$4").product(factory.tuple("msg/Node$1")));
        x26_upper.add(factory.tuple("msg/MsgState$4").product(factory.tuple("msg/Node$2")));
        bounds.bound(x26, x26_upper);

        TupleSet x27_upper = factory.noneOf(2);
        x27_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/MsgState$0")));
        x27_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/MsgState$1")));
        x27_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/MsgState$2")));
        x27_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/MsgState$3")));
        x27_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/MsgState$4")));
        x27_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/MsgState$0")));
        x27_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/MsgState$1")));
        x27_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/MsgState$2")));
        x27_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/MsgState$3")));
        x27_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/MsgState$4")));
        x27_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/MsgState$0")));
        x27_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/MsgState$1")));
        x27_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/MsgState$2")));
        x27_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/MsgState$3")));
        x27_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/MsgState$4")));
        x27_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/MsgState$0")));
        x27_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/MsgState$1")));
        x27_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/MsgState$2")));
        x27_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/MsgState$3")));
        x27_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/MsgState$4")));
        x27_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/MsgState$0")));
        x27_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/MsgState$1")));
        x27_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/MsgState$2")));
        x27_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/MsgState$3")));
        x27_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/MsgState$4")));
        bounds.bound(x27, x27_upper);

        TupleSet x28_upper = factory.noneOf(2);
        x28_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Tick$0")));
        x28_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Tick$1")));
        x28_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Tick$2")));
        x28_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Tick$3")));
        x28_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Tick$4")));
        x28_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Tick$0")));
        x28_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Tick$1")));
        x28_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Tick$2")));
        x28_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Tick$3")));
        x28_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Tick$4")));
        x28_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Tick$0")));
        x28_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Tick$1")));
        x28_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Tick$2")));
        x28_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Tick$3")));
        x28_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Tick$4")));
        x28_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Tick$0")));
        x28_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Tick$1")));
        x28_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Tick$2")));
        x28_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Tick$3")));
        x28_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Tick$4")));
        x28_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Tick$0")));
        x28_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Tick$1")));
        x28_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Tick$2")));
        x28_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Tick$3")));
        x28_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Tick$4")));
        bounds.bound(x28, x28_upper);

        TupleSet x29_upper = factory.noneOf(3);
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Tick$4")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$0")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$1")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$2")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$3")));
        x29_upper.add(factory.tuple("msg/Msg$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Tick$4")));
        bounds.bound(x29, x29_upper);

        TupleSet x30_upper = factory.noneOf(3);
        x30_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/NodeState$1")));
        x30_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/NodeState$0")));
        x30_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/NodeState$1")));
        bounds.bound(x30, x30_upper);

        TupleSet x31_upper = factory.noneOf(3);
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x31_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        bounds.bound(x31, x31_upper);

        TupleSet x32_upper = factory.noneOf(3);
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x32_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        bounds.bound(x32, x32_upper);

        TupleSet x33_upper = factory.noneOf(3);
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x33_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        bounds.bound(x33, x33_upper);

        TupleSet x34_upper = factory.noneOf(2);
        x34_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Msg$0")));
        x34_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Msg$1")));
        x34_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Msg$2")));
        x34_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Msg$3")));
        x34_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Msg$4")));
        x34_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Msg$0")));
        x34_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Msg$1")));
        x34_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Msg$2")));
        x34_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Msg$3")));
        x34_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Msg$4")));
        x34_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Msg$0")));
        x34_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Msg$1")));
        x34_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Msg$2")));
        x34_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Msg$3")));
        x34_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Msg$4")));
        x34_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Msg$0")));
        x34_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Msg$1")));
        x34_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Msg$2")));
        x34_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Msg$3")));
        x34_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Msg$4")));
        x34_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Msg$0")));
        x34_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Msg$1")));
        x34_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Msg$2")));
        x34_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Msg$3")));
        x34_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Msg$4")));
        bounds.bound(x34, x34_upper);

        TupleSet x35_upper = factory.noneOf(3);
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$0")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$1")).product(factory.tuple("msg/Msg$4")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$0")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$1")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$2")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$3")));
        x35_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Node$2")).product(factory.tuple("msg/Msg$4")));
        bounds.bound(x35, x35_upper);

        TupleSet x36_upper = factory.noneOf(1);
        x36_upper.add(factory.tuple("msg/Tick$0"));
        x36_upper.add(factory.tuple("msg/Tick$1"));
        x36_upper.add(factory.tuple("msg/Tick$2"));
        x36_upper.add(factory.tuple("msg/Tick$3"));
        x36_upper.add(factory.tuple("msg/Tick$4"));
        bounds.bound(x36, x36_upper);

        TupleSet x37_upper = factory.noneOf(2);
        x37_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Tick$0")));
        x37_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Tick$1")));
        x37_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Tick$2")));
        x37_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Tick$3")));
        x37_upper.add(factory.tuple("msg/Tick$0").product(factory.tuple("msg/Tick$4")));
        x37_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Tick$0")));
        x37_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Tick$1")));
        x37_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Tick$2")));
        x37_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Tick$3")));
        x37_upper.add(factory.tuple("msg/Tick$1").product(factory.tuple("msg/Tick$4")));
        x37_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Tick$0")));
        x37_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Tick$1")));
        x37_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Tick$2")));
        x37_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Tick$3")));
        x37_upper.add(factory.tuple("msg/Tick$2").product(factory.tuple("msg/Tick$4")));
        x37_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Tick$0")));
        x37_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Tick$1")));
        x37_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Tick$2")));
        x37_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Tick$3")));
        x37_upper.add(factory.tuple("msg/Tick$3").product(factory.tuple("msg/Tick$4")));
        x37_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Tick$0")));
        x37_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Tick$1")));
        x37_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Tick$2")));
        x37_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Tick$3")));
        x37_upper.add(factory.tuple("msg/Tick$4").product(factory.tuple("msg/Tick$4")));
        bounds.bound(x37, x37_upper);

        TupleSet x38_upper = factory.noneOf(1);
        x38_upper.add(factory.tuple("msg/Node$0"));
        x38_upper.add(factory.tuple("msg/Node$1"));
        x38_upper.add(factory.tuple("msg/Node$2"));
        bounds.bound(x38, x38_upper);

        TupleSet x39_upper = factory.noneOf(2);
        x39_upper.add(factory.tuple("msg/Node$0").product(factory.tuple("msg/Node$0")));
        x39_upper.add(factory.tuple("msg/Node$0").product(factory.tuple("msg/Node$1")));
        x39_upper.add(factory.tuple("msg/Node$0").product(factory.tuple("msg/Node$2")));
        x39_upper.add(factory.tuple("msg/Node$1").product(factory.tuple("msg/Node$0")));
        x39_upper.add(factory.tuple("msg/Node$1").product(factory.tuple("msg/Node$1")));
        x39_upper.add(factory.tuple("msg/Node$1").product(factory.tuple("msg/Node$2")));
        x39_upper.add(factory.tuple("msg/Node$2").product(factory.tuple("msg/Node$0")));
        x39_upper.add(factory.tuple("msg/Node$2").product(factory.tuple("msg/Node$1")));
        x39_upper.add(factory.tuple("msg/Node$2").product(factory.tuple("msg/Node$2")));
        bounds.bound(x39, x39_upper);

        TupleSet x40_upper = factory.noneOf(1);
        x40_upper.add(factory.tuple("msg/Tick$0"));
        x40_upper.add(factory.tuple("msg/Tick$1"));
        x40_upper.add(factory.tuple("msg/Tick$2"));
        x40_upper.add(factory.tuple("msg/Tick$3"));
        x40_upper.add(factory.tuple("msg/Tick$4"));
        bounds.bound(x40, x40_upper);

        bounds.boundExactly(-8,factory.range(factory.tuple("-8"),factory.tuple("-8")));
        bounds.boundExactly(-7,factory.range(factory.tuple("-7"),factory.tuple("-7")));
        bounds.boundExactly(-6,factory.range(factory.tuple("-6"),factory.tuple("-6")));
        bounds.boundExactly(-5,factory.range(factory.tuple("-5"),factory.tuple("-5")));
        bounds.boundExactly(-4,factory.range(factory.tuple("-4"),factory.tuple("-4")));
        bounds.boundExactly(-3,factory.range(factory.tuple("-3"),factory.tuple("-3")));
        bounds.boundExactly(-2,factory.range(factory.tuple("-2"),factory.tuple("-2")));
        bounds.boundExactly(-1,factory.range(factory.tuple("-1"),factory.tuple("-1")));
        bounds.boundExactly(0,factory.range(factory.tuple("0"),factory.tuple("0")));
        bounds.boundExactly(1,factory.range(factory.tuple("1"),factory.tuple("1")));
        bounds.boundExactly(2,factory.range(factory.tuple("2"),factory.tuple("2")));
        bounds.boundExactly(3,factory.range(factory.tuple("3"),factory.tuple("3")));
        bounds.boundExactly(4,factory.range(factory.tuple("4"),factory.tuple("4")));
        bounds.boundExactly(5,factory.range(factory.tuple("5"),factory.tuple("5")));
        bounds.boundExactly(6,factory.range(factory.tuple("6"),factory.tuple("6")));
        bounds.boundExactly(7,factory.range(factory.tuple("7"),factory.tuple("7")));

        Expression x43=x6.intersection(x7);
        Formula x42=x43.no();
        Variable x46=Variable.unary("SomeLeader_this");
        Decls x45=x46.oneOf(x8);
        Expression x49=x46.join(x19);
        Formula x48=x49.one();
        Expression x51=x8.union(x9);
        Formula x50=x49.in(x51);
        Formula x47=x48.and(x50);
        Formula x44=x47.forAll(x45);
        Expression x53=x19.join(Expression.UNIV);
        Formula x52=x53.in(x8);
        Variable x57=Variable.unary("SomeLeader_this");
        Decls x56=x57.oneOf(x10);
        Expression x60=x57.join(x20);
        Formula x59=x60.one();
        Formula x61=x60.in(x51);
        Formula x58=x59.and(x61);
        Formula x55=x58.forAll(x56);
        Expression x63=x20.join(Expression.UNIV);
        Formula x62=x63.in(x10);
        Variable x66=Variable.unary("SomeLeader_this");
        Expression x67=x10.union(x11);
        Decls x65=x66.oneOf(x67);
        Expression x70=x66.join(x25);
        Formula x69=x70.one();
        Formula x71=x70.in(x51);
        Formula x68=x69.and(x71);
        Formula x64=x68.forAll(x65);
        Expression x73=x25.join(Expression.UNIV);
        Formula x72=x73.in(x67);
        Variable x76=Variable.unary("SomeLeader_this");
        Decls x75=x76.oneOf(x67);
        Expression x78=x76.join(x26);
        Formula x77=x78.in(x51);
        Formula x74=x77.forAll(x75);
        Expression x80=x26.join(Expression.UNIV);
        Formula x79=x80.in(x67);
        Variable x83=Variable.unary("SomeLeader_this");
        Decls x82=x83.oneOf(x12);
        Expression x86=x83.join(x21);
        Formula x85=x86.one();
        Formula x87=x86.in(x51);
        Formula x84=x85.and(x87);
        Formula x81=x84.forAll(x82);
        Expression x89=x21.join(Expression.UNIV);
        Formula x88=x89.in(x12);
        Variable x92=Variable.unary("SomeLeader_this");
        Decls x91=x92.oneOf(x12);
        Expression x94=x92.join(x22);
        Formula x93=x94.in(x51);
        Formula x90=x93.forAll(x91);
        Expression x96=x22.join(Expression.UNIV);
        Formula x95=x96.in(x12);
        Variable x99=Variable.unary("SomeLeader_this");
        Decls x98=x99.oneOf(x12);
        Expression x102=x99.join(x23);
        Formula x101=x102.one();
        Formula x103=x102.in(x51);
        Formula x100=x101.and(x103);
        Formula x97=x100.forAll(x98);
        Expression x105=x23.join(Expression.UNIV);
        Formula x104=x105.in(x12);
        Variable x108=Variable.unary("SomeLeader_this");
        Expression x109=x12.union(x13);
        Decls x107=x108.oneOf(x109);
        Expression x112=x108.join(x27);
        Formula x111=x112.one();
        Formula x113=x112.in(x67);
        Formula x110=x111.and(x113);
        Formula x106=x110.forAll(x107);
        Expression x115=x27.join(Expression.UNIV);
        Formula x114=x115.in(x109);
        Variable x118=Variable.unary("SomeLeader_this");
        Decls x117=x118.oneOf(x109);
        Expression x121=x118.join(x28);
        Formula x120=x121.one();
        Formula x122=x121.in(x14);
        Formula x119=x120.and(x122);
        Formula x116=x119.forAll(x117);
        Expression x124=x28.join(Expression.UNIV);
        Formula x123=x124.in(x109);
        Variable x127=Variable.unary("SomeLeader_this");
        Decls x126=x127.oneOf(x109);
        Expression x131=x127.join(x29);
        Expression x132=x51.product(x14);
        Formula x130=x131.in(x132);
        Variable x135=Variable.unary("");
        Decls x134=x135.oneOf(x51);
        Expression x138=x135.join(x131);
        Formula x137=x138.lone();
        Formula x139=x138.in(x14);
        Formula x136=x137.and(x139);
        Formula x133=x136.forAll(x134);
        Formula x129=x130.and(x133);
        Variable x142=Variable.unary("");
        Decls x141=x142.oneOf(x14);
        Expression x144=x131.join(x142);
        Formula x143=x144.in(x51);
        Formula x140=x143.forAll(x141);
        Formula x128=x129.and(x140);
        Formula x125=x128.forAll(x126);
        Expression x147=x29.join(Expression.UNIV);
        Expression x146=x147.join(Expression.UNIV);
        Formula x145=x146.in(x109);
        Variable x150=Variable.unary("SomeLeader_this");
        Decls x149=x150.oneOf(x109);
        Expression x153=x150.join(x29);
        Expression x152=x153.join(x14);
        Expression x155=x150.join(x27);
        Expression x154=x155.join(x26);
        Formula x151=x152.in(x154);
        Formula x148=x151.forAll(x149);
        Variable x158=Variable.unary("SomeLeader_this");
        Decls x157=x158.oneOf(x14);
        Expression x162=x158.join(x30);
        Expression x164=x15.union(x16);
        Expression x163=x51.product(x164);
        Formula x161=x162.in(x163);
        Variable x167=Variable.unary("");
        Decls x166=x167.oneOf(x51);
        Expression x170=x167.join(x162);
        Formula x169=x170.one();
        Formula x171=x170.in(x164);
        Formula x168=x169.and(x171);
        Formula x165=x168.forAll(x166);
        Formula x160=x161.and(x165);
        Variable x174=Variable.unary("");
        Decls x173=x174.oneOf(x164);
        Expression x176=x162.join(x174);
        Formula x175=x176.in(x51);
        Formula x172=x175.forAll(x173);
        Formula x159=x160.and(x172);
        Formula x156=x159.forAll(x157);
        Expression x179=x30.join(Expression.UNIV);
        Expression x178=x179.join(Expression.UNIV);
        Formula x177=x178.in(x14);
        Variable x182=Variable.unary("SomeLeader_this");
        Decls x181=x182.oneOf(x14);
        Expression x184=x182.join(x31);
        Expression x185=x51.product(x109);
        Formula x183=x184.in(x185);
        Formula x180=x183.forAll(x181);
        Expression x188=x31.join(Expression.UNIV);
        Expression x187=x188.join(Expression.UNIV);
        Formula x186=x187.in(x14);
        Variable x191=Variable.unary("SomeLeader_this");
        Decls x190=x191.oneOf(x14);
        Expression x193=x191.join(x32);
        Expression x194=x51.product(x109);
        Formula x192=x193.in(x194);
        Formula x189=x192.forAll(x190);
        Expression x197=x32.join(Expression.UNIV);
        Expression x196=x197.join(Expression.UNIV);
        Formula x195=x196.in(x14);
        Variable x200=Variable.unary("SomeLeader_this");
        Decls x199=x200.oneOf(x14);
        Expression x202=x200.join(x33);
        Expression x203=x51.product(x109);
        Formula x201=x202.in(x203);
        Formula x198=x201.forAll(x199);
        Expression x206=x33.join(Expression.UNIV);
        Expression x205=x206.join(Expression.UNIV);
        Formula x204=x205.in(x14);
        Variable x209=Variable.unary("SomeLeader_this");
        Decls x208=x209.oneOf(x14);
        Expression x211=x209.join(x34);
        Formula x210=x211.in(x109);
        Formula x207=x210.forAll(x208);
        Expression x213=x34.join(Expression.UNIV);
        Formula x212=x213.in(x14);
        Variable x216=Variable.unary("SomeLeader_this");
        Decls x215=x216.oneOf(x14);
        Expression x218=x216.join(x35);
        Expression x219=x51.product(x109);
        Formula x217=x218.in(x219);
        Formula x214=x217.forAll(x215);
        Expression x222=x35.join(Expression.UNIV);
        Expression x221=x222.join(Expression.UNIV);
        Formula x220=x221.in(x14);
        Variable x225=Variable.unary("SomeLeader_this");
        Decls x224=x225.oneOf(x15);
        Expression x228=x225.join(x24);
        Formula x227=x228.one();
        Expression x230=x6.union(x7);
        Formula x229=x228.in(x230);
        Formula x226=x227.and(x229);
        Formula x223=x226.forAll(x224);
        Expression x232=x24.join(Expression.UNIV);
        Formula x231=x232.in(x15);
        Expression x235=x17.product(x36);
        Expression x234=x17.join(x235);
        Formula x233=x234.in(x14);
        Expression x238=x17.product(x37);
        Expression x237=x17.join(x238);
        Expression x239=x14.product(x14);
        Formula x236=x237.in(x239);
        Formula x240=x37.totalOrder(x14,x36,x40);
        Expression x243=x18.product(x38);
        Expression x242=x18.join(x243);
        Formula x241=x242.in(x51);
        Expression x246=x18.product(x39);
        Expression x245=x18.join(x246);
        Expression x247=x51.product(x51);
        Formula x244=x245.in(x247);
        Variable x252=Variable.unary("");
        Decls x251=x252.oneOf(x51);
        Formula x256=x252.eq(x38);
        Expression x258=x39.join(x252);
        Formula x257=x258.one();
        Formula x255=x256.or(x257);
        Expression x262=x39.join(x51);
        Expression x261=x51.difference(x262);
        Formula x260=x252.eq(x261);
        Expression x264=x252.join(x39);
        Formula x263=x264.one();
        Formula x259=x260.or(x263);
        Formula x254=x255.and(x259);
        Expression x268=x39.closure();
        Expression x267=x252.join(x268);
        Formula x266=x252.in(x267);
        Formula x265=x266.not();
        Formula x253=x254.and(x265);
        Formula x250=x253.forAll(x251);
        Expression x271=x39.reflexiveClosure();
        Expression x270=x38.join(x271);
        Formula x269=x51.in(x270);
        Formula x249=x250.and(x269);
        Expression x273=x39.join(x38);
        Formula x272=x273.no();
        Formula x248=x249.and(x272);
        Formula x275=x51.one();
        Variable x278=Variable.unary("SomeLeader_n");
        Decls x277=x278.oneOf(x51);
        Expression x281=x278.join(x19);
        Formula x280=x278.eq(x281);
        Formula x279=x280.not();
        Formula x276=x279.forAll(x277);
        Formula x274=x275.or(x276);
        Variable x284=Variable.unary("SomeLeader_n");
        Decls x283=x284.oneOf(x51);
        Expression x287=x19.closure();
        Expression x286=x284.join(x287);
        Formula x285=x51.in(x286);
        Formula x282=x285.forAll(x283);
        Formula x288=x12.eq(x109);
        Expression x290=x27.join(x25);
        Formula x289=x21.eq(x290);
        Expression x292=x27.join(x26);
        Formula x291=x22.eq(x292);
        Expression x294=x27.join(x20);
        Formula x293=x23.eq(x294);
        Variable x297=Variable.unary("SomeLeader_n");
        Decls x296=x297.oneOf(x51);
        Expression x301=x36.join(x30);
        Expression x300=x297.join(x301);
        Expression x299=x300.join(x24);
        Formula x298=x299.eq(x7);
        Formula x295=x298.forAll(x296);
        Variable x304=Variable.unary("SomeLeader_n");
        Decls x303=x304.oneOf(x51);
        Variable x308=Variable.unary("SomeLeader_t");
        Expression x311=x37.join(x14);
        Expression x310=x14.difference(x311);
        Expression x309=x14.difference(x310);
        Decls x307=x308.oneOf(x309);
        Formula x314=x308.eq(x36);
        Expression x319=x308.join(x33);
        Expression x318=x304.join(x319);
        Formula x317=x318.one();
        Expression x325=x308.join(x35);
        Expression x324=x304.join(x325);
        IntExpression x323=x324.count();
        IntExpression x326=IntConstant.constant(1);
        Formula x322=x323.eq(x326);
        Expression x329=x318.join(x27);
        Expression x328=x329.join(x20);
        Formula x327=x328.eq(x304);
        Formula x321=x322.and(x327);
        Expression x334=x308.join(x37);
        Expression x333=x334.join(x30);
        Expression x332=x304.join(x333);
        Expression x331=x332.join(x24);
        Formula x330=x331.eq(x7);
        Formula x320=x321.and(x330);
        Formula x316=x317.and(x320);
        Expression x337=x318.join(x27);
        Expression x336=x337.join(x26);
        Expression x338=x304.join(x19);
        Formula x335=x336.eq(x338);
        Formula x315=x316.and(x335);
        Formula x313=x314.implies(x315);
        Formula x340=x314.not();
        Expression x346=x308.join(x32);
        Expression x345=x304.join(x346);
        Expression x348=x308.join(x31);
        Expression x347=x304.join(x348);
        Formula x344=x345.eq(x347);
        Variable x352=Variable.unary("RingLeadTransHelper_received");
        Decls x351=x352.oneOf(x345);
        Expression x357=x352.join(x27);
        Expression x356=x357.join(x20);
        Expression x359=x39.closure();
        Expression x358=x304.join(x359);
        Formula x355=x356.in(x358);
        Formula x354=x355.not();
        Variable x363=Variable.unary("RingLeadTransHelper_weSend");
        Expression x365=x308.join(x33);
        Expression x364=x304.join(x365);
        Decls x362=x363.oneOf(x364);
        Expression x369=x363.join(x27);
        Expression x368=x369.join(x20);
        Expression x371=x352.join(x27);
        Expression x370=x371.join(x20);
        Formula x367=x368.eq(x370);
        Expression x374=x363.join(x27);
        Expression x373=x374.join(x26);
        Expression x375=x304.join(x19);
        Formula x372=x373.eq(x375);
        Formula x366=x367.and(x372);
        Expression x361=x366.comprehension(x362);
        Formula x360=x361.one();
        Formula x353=x354.or(x360);
        Formula x350=x353.forAll(x351);
        Expression x379=x308.join(x35);
        Expression x378=x304.join(x379);
        IntExpression x377=x378.count();
        Variable x383=Variable.unary("RingLeadTransHelper_m");
        Decls x382=x383.oneOf(x345);
        Expression x386=x383.join(x27);
        Expression x385=x386.join(x20);
        Expression x388=x39.closure();
        Expression x387=x304.join(x388);
        Formula x384=x385.in(x387);
        Expression x381=x384.comprehension(x382);
        IntExpression x380=x381.count();
        Formula x376=x377.eq(x380);
        Formula x349=x350.and(x376);
        Formula x343=x344.and(x349);
        Variable x391=Variable.unary("RingLeadTransHelper_weSend");
        Decls x390=x391.oneOf(x364);
        Expression x396=x391.join(x27);
        Expression x395=x396.join(x20);
        Expression x398=x39.closure();
        Expression x397=x304.join(x398);
        Formula x394=x395.in(x397);
        Expression x401=x345.join(x27);
        Expression x400=x401.join(x20);
        Formula x399=x395.in(x400);
        Formula x393=x394.and(x399);
        Expression x404=x391.join(x27);
        Expression x403=x404.join(x26);
        Expression x405=x304.join(x19);
        Formula x402=x403.eq(x405);
        Formula x392=x393.and(x402);
        Formula x389=x392.forAll(x390);
        Formula x342=x343.and(x389);
        Expression x411=x308.join(x37);
        Expression x410=x411.join(x30);
        Expression x409=x304.join(x410);
        Expression x408=x409.join(x24);
        Formula x407=x408.eq(x6);
        Expression x416=x308.join(x30);
        Expression x415=x304.join(x416);
        Expression x414=x415.join(x24);
        Formula x413=x414.eq(x6);
        Expression x419=x345.join(x27);
        Expression x418=x419.join(x20);
        Formula x417=x304.in(x418);
        Formula x412=x413.or(x417);
        Formula x406=x407.iff(x412);
        Formula x341=x342.and(x406);
        Formula x339=x340.implies(x341);
        Formula x312=x313.and(x339);
        Formula x306=x312.forAll(x307);
        Expression x424=x310.join(x32);
        Expression x423=x304.join(x424);
        Expression x426=x310.join(x31);
        Expression x425=x304.join(x426);
        Formula x422=x423.eq(x425);
        Variable x430=Variable.unary("RingLeadTransHelper_received");
        Decls x429=x430.oneOf(x423);
        Expression x435=x430.join(x27);
        Expression x434=x435.join(x20);
        Expression x437=x39.closure();
        Expression x436=x304.join(x437);
        Formula x433=x434.in(x436);
        Formula x432=x433.not();
        Variable x441=Variable.unary("RingLeadTransHelper_weSend");
        Expression x443=x310.join(x33);
        Expression x442=x304.join(x443);
        Decls x440=x441.oneOf(x442);
        Expression x447=x441.join(x27);
        Expression x446=x447.join(x20);
        Expression x449=x430.join(x27);
        Expression x448=x449.join(x20);
        Formula x445=x446.eq(x448);
        Expression x452=x441.join(x27);
        Expression x451=x452.join(x26);
        Expression x453=x304.join(x19);
        Formula x450=x451.eq(x453);
        Formula x444=x445.and(x450);
        Expression x439=x444.comprehension(x440);
        Formula x438=x439.one();
        Formula x431=x432.or(x438);
        Formula x428=x431.forAll(x429);
        Expression x457=x310.join(x35);
        Expression x456=x304.join(x457);
        IntExpression x455=x456.count();
        Variable x461=Variable.unary("RingLeadTransHelper_m");
        Decls x460=x461.oneOf(x423);
        Expression x464=x461.join(x27);
        Expression x463=x464.join(x20);
        Expression x466=x39.closure();
        Expression x465=x304.join(x466);
        Formula x462=x463.in(x465);
        Expression x459=x462.comprehension(x460);
        IntExpression x458=x459.count();
        Formula x454=x455.eq(x458);
        Formula x427=x428.and(x454);
        Formula x421=x422.and(x427);
        Variable x469=Variable.unary("RingLeadTransHelper_weSend");
        Decls x468=x469.oneOf(x442);
        Expression x474=x469.join(x27);
        Expression x473=x474.join(x20);
        Expression x476=x39.closure();
        Expression x475=x304.join(x476);
        Formula x472=x473.in(x475);
        Expression x479=x423.join(x27);
        Expression x478=x479.join(x20);
        Formula x477=x473.in(x478);
        Formula x471=x472.and(x477);
        Expression x482=x469.join(x27);
        Expression x481=x482.join(x26);
        Expression x483=x304.join(x19);
        Formula x480=x481.eq(x483);
        Formula x470=x471.and(x480);
        Formula x467=x470.forAll(x468);
        Formula x420=x421.and(x467);
        Formula x305=x306.and(x420);
        Formula x302=x305.forAll(x303);
        Formula x484=x8.eq(x51);
        Formula x485=x10.eq(x67);
        Formula x486=x15.eq(x164);
        Expression x489=x36.join(x31);
        Expression x488=x51.join(x489);
        Formula x487=x488.no();
        Variable x492=Variable.unary("SomeLeader_pre");
        Expression x493=x14.difference(x310);
        Decls x491=x492.oneOf(x493);
        Expression x496=x492.join(x37);
        Expression x495=x496.join(x34);
        Expression x498=x492.join(x34);
        Expression x500=x492.join(x33);
        Expression x499=x51.join(x500);
        Expression x497=x498.difference(x499);
        Formula x494=x495.eq(x497);
        Formula x490=x494.forAll(x491);
        Variable x503=Variable.unary("SomeLeader_t");
        Decls x502=x503.oneOf(x14);
        Expression x508=x503.join(x33);
        Expression x507=x51.join(x508);
        Expression x509=x503.join(x34);
        Formula x506=x507.in(x509);
        Expression x515=x503.join(x33);
        Expression x514=x51.join(x515);
        Expression x513=x514.join(x28);
        Formula x512=x513.in(x503);
        Expression x518=x503.join(x33);
        Expression x517=x51.join(x518);
        Expression x520=x503.join(x33);
        Expression x519=x51.join(x520);
        Formula x516=x517.eq(x519);
        Formula x511=x512.and(x516);
        Variable x524=Variable.unary("SomeLeader_n");
        Decls x523=x524.oneOf(x51);
        Variable x526=Variable.unary("SomeLeader_m");
        Decls x525=x526.oneOf(x109);
        Decls x522=x523.and(x525);
        Expression x531=x526.join(x29);
        Expression x530=x524.join(x531);
        Formula x529=x530.eq(x503);
        Formula x528=x529.not();
        Expression x534=x503.join(x32);
        Expression x533=x524.join(x534);
        Formula x532=x526.in(x533);
        Formula x527=x528.or(x532);
        Formula x521=x527.forAll(x522);
        Formula x510=x511.and(x521);
        Formula x505=x506.and(x510);
        Expression x541=x503.join(x32);
        Expression x540=x51.join(x541);
        Expression x539=x540.join(x29);
        Expression x538=x51.join(x539);
        Formula x537=x538.in(x503);
        Variable x544=Variable.unary("SomeLeader_n");
        Decls x543=x544.oneOf(x51);
        Expression x549=x503.join(x33);
        Expression x548=x544.join(x549);
        Expression x547=x548.join(x27);
        Expression x546=x547.join(x25);
        Formula x545=x546.in(x544);
        Formula x542=x545.forAll(x543);
        Formula x536=x537.and(x542);
        Variable x553=Variable.unary("SomeLeader_n");
        Decls x552=x553.oneOf(x51);
        Variable x555=Variable.unary("SomeLeader_m");
        Decls x554=x555.oneOf(x109);
        Decls x551=x552.and(x554);
        Expression x561=x503.join(x31);
        Expression x560=x553.join(x561);
        Formula x559=x555.in(x560);
        Formula x558=x559.not();
        Expression x565=x555.join(x27);
        Expression x564=x565.join(x26);
        Formula x563=x553.in(x564);
        Expression x567=x555.join(x28);
        Expression x570=x37.transpose();
        Expression x569=x570.closure();
        Expression x568=x503.join(x569);
        Formula x566=x567.in(x568);
        Formula x562=x563.and(x566);
        Formula x557=x558.or(x562);
        Expression x575=x503.join(x32);
        Expression x574=x553.join(x575);
        Formula x573=x555.in(x574);
        Formula x572=x573.not();
        Expression x581=x37.closure();
        Expression x580=x503.join(x581);
        Expression x579=x580.join(x31);
        Expression x578=x553.join(x579);
        Formula x577=x555.in(x578);
        Formula x576=x577.not();
        Formula x571=x572.or(x576);
        Formula x556=x557.and(x571);
        Formula x550=x556.forAll(x551);
        Formula x535=x536.and(x550);
        Formula x504=x505.and(x535);
        Formula x501=x504.forAll(x502);
        Expression x584=x14.join(x33);
        Expression x583=x51.join(x584);
        Formula x582=x109.in(x583);
        Formula x585=x32.in(x31);
        Variable x588=Variable.unary("SomeLeader_t");
        Decls x587=x588.oneOf(x14);
        Variable x591=Variable.unary("SomeLeaderAtTick_n");
        Decls x590=x591.oneOf(x51);
        Expression x595=x588.join(x30);
        Expression x594=x591.join(x595);
        Expression x593=x594.join(x24);
        Formula x592=x593.eq(x6);
        Formula x589=x592.forSome(x590);
        Formula x586=x589.forSome(x587);
        Formula x596=x0.eq(x0);
        Formula x597=x1.eq(x1);
        Formula x598=x2.eq(x2);
        Formula x599=x3.eq(x3);
        Formula x600=x4.eq(x4);
        Formula x601=x5.eq(x5);
        Formula x602=x6.eq(x6);
        Formula x603=x7.eq(x7);
        Formula x604=x8.eq(x8);
        Formula x605=x9.eq(x9);
        Formula x606=x10.eq(x10);
        Formula x607=x11.eq(x11);
        Formula x608=x12.eq(x12);
        Formula x609=x13.eq(x13);
        Formula x610=x14.eq(x14);
        Formula x611=x15.eq(x15);
        Formula x612=x16.eq(x16);
        Formula x613=x17.eq(x17);
        Formula x614=x18.eq(x18);
        Formula x615=x19.eq(x19);
        Formula x616=x20.eq(x20);
        Formula x617=x21.eq(x21);
        Formula x618=x22.eq(x22);
        Formula x619=x23.eq(x23);
        Formula x620=x24.eq(x24);
        Formula x621=x25.eq(x25);
        Formula x622=x26.eq(x26);
        Formula x623=x27.eq(x27);
        Formula x624=x28.eq(x28);
        Formula x625=x29.eq(x29);
        Formula x626=x30.eq(x30);
        Formula x627=x31.eq(x31);
        Formula x628=x32.eq(x32);
        Formula x629=x33.eq(x33);
        Formula x630=x34.eq(x34);
        Formula x631=x35.eq(x35);
        Formula x632=x36.eq(x36);
        Formula x633=x37.eq(x37);
        Formula x634=x38.eq(x38);
        Formula x635=x39.eq(x39);
        Formula x636=x40.eq(x40);
        Formula x41=Formula.compose(FormulaOperator.AND, x42, x44, x52, x55, x62, x64, x72, x74, x79, x81, x88, x90, x95, x97, x104, x106, x114, x116, x123, x125, x145, x148, x156, x177, x180, x186, x189, x195, x198, x204, x207, x212, x214, x220, x223, x231, x233, x236, x240, x241, x244, x248, x274, x282, x288, x289, x291, x293, x295, x302, x484, x485, x486, x487, x490, x501, x582, x585, x586, x596, x597, x598, x599, x600, x601, x602, x603, x604, x605, x606, x607, x608, x609, x610, x611, x612, x613, x614, x615, x616, x617, x618, x619, x620, x621, x622, x623, x624, x625, x626, x627, x628, x629, x630, x631, x632, x633, x634, x635, x636);

        Solver solver = new Solver();
        solver.options().setSolver(SATFactory.MiniSat);
        solver.options().setBitwidth(4);
       // solver.options().setFlatten(false);
        solver.options().setIntEncoding(Options.IntEncoding.TWOSCOMPLEMENT);
        solver.options().setSymmetryBreaking(20);
        solver.options().setSkolemDepth(0);
        System.out.println("Solving...");
        System.out.flush();
        Solution sol = solver.solve(x41,bounds);
        System.out.println(sol.toString());
    }}