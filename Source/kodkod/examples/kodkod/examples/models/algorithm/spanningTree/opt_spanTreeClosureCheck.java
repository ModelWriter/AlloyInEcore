package kodkod.examples.models.algorithm.spanningTree;

import java.util.Arrays;
import java.util.List;
import kodkod.ast.*;
import kodkod.ast.operator.*;
import kodkod.examples.ExampleMetadata;
import kodkod.instance.*;
import kodkod.engine.*;
import kodkod.engine.satlab.SATFactory;
import kodkod.engine.config.Options;

@ExampleMetadata(
        Name = "opt_spantree",
        Note = "",
        IsCheck = true,
        PartialModel = true,
        BinaryRelations = 5,
        TernaryRelations = 2,
        NaryRelations = 0,
        HierarchicalTypes = 1,
        NestedRelationalJoins = 14,
        TransitiveClosure = 5,
        NestedQuantifiers = 3,
        SetCardinality = 0,
        Additions = 0,
        Subtractions = 0,
        Comparison = 16,
        OrderedRelations = 2,
        Constraints = 30
)


public final class opt_spanTreeClosureCheck {

    public static void main(String[] args) throws Exception {

        Relation x0 = Relation.unary("Int/min");
        Relation x1 = Relation.unary("Int/zero");
        Relation x2 = Relation.unary("Int/max");
        Relation x3 = Relation.nary("Int/next", 2);
        Relation x4 = Relation.unary("seq/Int");
        Relation x5 = Relation.unary("String");
        Relation x6 = Relation.unary("this/Root");
        Relation x7 = Relation.unary("this/Process remainder");
        Relation x8 = Relation.unary("this/Lvl");
        Relation x9 = Relation.unary("this/State");
        Relation x10 = Relation.unary("lo/Ord");
        Relation x11 = Relation.unary("so/Ord");
        Relation x12 = Relation.nary("this/Process.adj", 2);
        Relation x13 = Relation.nary("this/State.runs", 2);
        Relation x14 = Relation.nary("this/State.lvl", 3);
        Relation x15 = Relation.nary("this/State.parent", 3);
        Relation x16 = Relation.unary("lo/Ord.First");
        Relation x17 = Relation.nary("lo/Ord.Next", 2);
        Relation x18 = Relation.unary("so/Ord.First");
        Relation x19 = Relation.nary("so/Ord.Next", 2);
        Relation x20 = Relation.unary("");
        Relation x21 = Relation.unary("");

        List<String> atomlist = Arrays.asList(
                "-1", "-2", "-3", "-4", "-5",
                "-6", "-7", "-8", "0", "1", "2",
                "3", "4", "5", "6", "7", "Lvl$0",
                "Lvl$1", "Lvl$2", "Lvl$3", "Lvl$4", "Process$0", "Process$1",
                "Process$2", "Process$3", "Root$0", "State$0", "State$1", "State$2",
                "State$3", "State$4", "State$5", "State$6", "lo/Ord$0", "so/Ord$0"
        );

        Universe universe = new Universe(atomlist);
        TupleFactory factory = universe.factory();
        Bounds bounds = new Bounds(universe);

        TupleSet x0_upper = factory.noneOf(1);
        x0_upper.add(factory.tuple("-8"));
        bounds.boundExactly(x0, x0_upper);

        TupleSet x1_upper = factory.noneOf(1);
        x1_upper.add(factory.tuple("0"));
        bounds.boundExactly(x1, x1_upper);

        TupleSet x2_upper = factory.noneOf(1);
        x2_upper.add(factory.tuple("7"));
        bounds.boundExactly(x2, x2_upper);

        TupleSet x3_upper = factory.noneOf(2);
        x3_upper.add(factory.tuple("-8").product(factory.tuple("-7")));
        x3_upper.add(factory.tuple("-7").product(factory.tuple("-6")));
        x3_upper.add(factory.tuple("-6").product(factory.tuple("-5")));
        x3_upper.add(factory.tuple("-5").product(factory.tuple("-4")));
        x3_upper.add(factory.tuple("-4").product(factory.tuple("-3")));
        x3_upper.add(factory.tuple("-3").product(factory.tuple("-2")));
        x3_upper.add(factory.tuple("-2").product(factory.tuple("-1")));
        x3_upper.add(factory.tuple("-1").product(factory.tuple("0")));
        x3_upper.add(factory.tuple("0").product(factory.tuple("1")));
        x3_upper.add(factory.tuple("1").product(factory.tuple("2")));
        x3_upper.add(factory.tuple("2").product(factory.tuple("3")));
        x3_upper.add(factory.tuple("3").product(factory.tuple("4")));
        x3_upper.add(factory.tuple("4").product(factory.tuple("5")));
        x3_upper.add(factory.tuple("5").product(factory.tuple("6")));
        x3_upper.add(factory.tuple("6").product(factory.tuple("7")));
        bounds.boundExactly(x3, x3_upper);

        TupleSet x4_upper = factory.noneOf(1);
        x4_upper.add(factory.tuple("0"));
        x4_upper.add(factory.tuple("1"));
        x4_upper.add(factory.tuple("2"));
        x4_upper.add(factory.tuple("3"));
        x4_upper.add(factory.tuple("4"));
        bounds.boundExactly(x4, x4_upper);

        TupleSet x5_upper = factory.noneOf(1);
        bounds.boundExactly(x5, x5_upper);

        TupleSet x6_upper = factory.noneOf(1);
        x6_upper.add(factory.tuple("Root$0"));
        bounds.boundExactly(x6, x6_upper);

        TupleSet x7_upper = factory.noneOf(1);
        x7_upper.add(factory.tuple("Process$0"));
        x7_upper.add(factory.tuple("Process$1"));
        x7_upper.add(factory.tuple("Process$2"));
        x7_upper.add(factory.tuple("Process$3"));
        bounds.bound(x7, x7_upper);

        TupleSet x8_upper = factory.noneOf(1);
        x8_upper.add(factory.tuple("Lvl$0"));
        x8_upper.add(factory.tuple("Lvl$1"));
        x8_upper.add(factory.tuple("Lvl$2"));
        x8_upper.add(factory.tuple("Lvl$3"));
        x8_upper.add(factory.tuple("Lvl$4"));
        bounds.boundExactly(x8, x8_upper);

        TupleSet x9_upper = factory.noneOf(1);
        x9_upper.add(factory.tuple("State$0"));
        x9_upper.add(factory.tuple("State$1"));
        x9_upper.add(factory.tuple("State$2"));
        x9_upper.add(factory.tuple("State$3"));
        x9_upper.add(factory.tuple("State$4"));
        x9_upper.add(factory.tuple("State$5"));
        x9_upper.add(factory.tuple("State$6"));
        bounds.boundExactly(x9, x9_upper);

        TupleSet x10_upper = factory.noneOf(1);
        x10_upper.add(factory.tuple("lo/Ord$0"));
        bounds.boundExactly(x10, x10_upper);

        TupleSet x11_upper = factory.noneOf(1);
        x11_upper.add(factory.tuple("so/Ord$0"));
        bounds.boundExactly(x11, x11_upper);

        TupleSet x12_upper = factory.noneOf(2);
        x12_upper.add(factory.tuple("Root$0").product(factory.tuple("Root$0")));
        x12_upper.add(factory.tuple("Root$0").product(factory.tuple("Process$0")));
        x12_upper.add(factory.tuple("Root$0").product(factory.tuple("Process$1")));
        x12_upper.add(factory.tuple("Root$0").product(factory.tuple("Process$2")));
        x12_upper.add(factory.tuple("Root$0").product(factory.tuple("Process$3")));
        x12_upper.add(factory.tuple("Process$0").product(factory.tuple("Root$0")));
        x12_upper.add(factory.tuple("Process$0").product(factory.tuple("Process$0")));
        x12_upper.add(factory.tuple("Process$0").product(factory.tuple("Process$1")));
        x12_upper.add(factory.tuple("Process$0").product(factory.tuple("Process$2")));
        x12_upper.add(factory.tuple("Process$0").product(factory.tuple("Process$3")));
        x12_upper.add(factory.tuple("Process$1").product(factory.tuple("Root$0")));
        x12_upper.add(factory.tuple("Process$1").product(factory.tuple("Process$0")));
        x12_upper.add(factory.tuple("Process$1").product(factory.tuple("Process$1")));
        x12_upper.add(factory.tuple("Process$1").product(factory.tuple("Process$2")));
        x12_upper.add(factory.tuple("Process$1").product(factory.tuple("Process$3")));
        x12_upper.add(factory.tuple("Process$2").product(factory.tuple("Root$0")));
        x12_upper.add(factory.tuple("Process$2").product(factory.tuple("Process$0")));
        x12_upper.add(factory.tuple("Process$2").product(factory.tuple("Process$1")));
        x12_upper.add(factory.tuple("Process$2").product(factory.tuple("Process$2")));
        x12_upper.add(factory.tuple("Process$2").product(factory.tuple("Process$3")));
        x12_upper.add(factory.tuple("Process$3").product(factory.tuple("Root$0")));
        x12_upper.add(factory.tuple("Process$3").product(factory.tuple("Process$0")));
        x12_upper.add(factory.tuple("Process$3").product(factory.tuple("Process$1")));
        x12_upper.add(factory.tuple("Process$3").product(factory.tuple("Process$2")));
        x12_upper.add(factory.tuple("Process$3").product(factory.tuple("Process$3")));
        bounds.bound(x12, x12_upper);

        TupleSet x13_upper = factory.noneOf(2);
        x13_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")));
        x13_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")));
        x13_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")));
        x13_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")));
        x13_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")));
        x13_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")));
        x13_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")));
        x13_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")));
        x13_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")));
        x13_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")));
        x13_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")));
        x13_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")));
        x13_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")));
        x13_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")));
        x13_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")));
        x13_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")));
        x13_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")));
        x13_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")));
        x13_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")));
        x13_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")));
        x13_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")));
        x13_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")));
        x13_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")));
        x13_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")));
        x13_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")));
        x13_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")));
        x13_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")));
        x13_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")));
        x13_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")));
        x13_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")));
        x13_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")));
        x13_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")));
        x13_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")));
        x13_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")));
        x13_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")));
        bounds.bound(x13, x13_upper);

        TupleSet x14_upper = factory.noneOf(3);
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")).product(factory.tuple("Lvl$4")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$0")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$1")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$2")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$3")));
        x14_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")).product(factory.tuple("Lvl$4")));
        bounds.bound(x14, x14_upper);

        TupleSet x15_upper = factory.noneOf(3);
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Root$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$1")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$2")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$0").product(factory.tuple("Process$3")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Root$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$1")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$2")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$1").product(factory.tuple("Process$3")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Root$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$1")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$2")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$2").product(factory.tuple("Process$3")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Root$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$1")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$2")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$3").product(factory.tuple("Process$3")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Root$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$1")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$2")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$4").product(factory.tuple("Process$3")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Root$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$1")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$2")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$5").product(factory.tuple("Process$3")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Root$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$0")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$1")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$2")).product(factory.tuple("Process$3")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")).product(factory.tuple("Root$0")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")).product(factory.tuple("Process$0")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")).product(factory.tuple("Process$1")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")).product(factory.tuple("Process$2")));
        x15_upper.add(factory.tuple("State$6").product(factory.tuple("Process$3")).product(factory.tuple("Process$3")));
        bounds.bound(x15, x15_upper);

        TupleSet x16_upper = factory.noneOf(1);
        x16_upper.add(factory.tuple("Lvl$0"));
        x16_upper.add(factory.tuple("Lvl$1"));
        x16_upper.add(factory.tuple("Lvl$2"));
        x16_upper.add(factory.tuple("Lvl$3"));
        x16_upper.add(factory.tuple("Lvl$4"));
        bounds.bound(x16, x16_upper);

        TupleSet x17_upper = factory.noneOf(2);
        x17_upper.add(factory.tuple("Lvl$0").product(factory.tuple("Lvl$0")));
        x17_upper.add(factory.tuple("Lvl$0").product(factory.tuple("Lvl$1")));
        x17_upper.add(factory.tuple("Lvl$0").product(factory.tuple("Lvl$2")));
        x17_upper.add(factory.tuple("Lvl$0").product(factory.tuple("Lvl$3")));
        x17_upper.add(factory.tuple("Lvl$0").product(factory.tuple("Lvl$4")));
        x17_upper.add(factory.tuple("Lvl$1").product(factory.tuple("Lvl$0")));
        x17_upper.add(factory.tuple("Lvl$1").product(factory.tuple("Lvl$1")));
        x17_upper.add(factory.tuple("Lvl$1").product(factory.tuple("Lvl$2")));
        x17_upper.add(factory.tuple("Lvl$1").product(factory.tuple("Lvl$3")));
        x17_upper.add(factory.tuple("Lvl$1").product(factory.tuple("Lvl$4")));
        x17_upper.add(factory.tuple("Lvl$2").product(factory.tuple("Lvl$0")));
        x17_upper.add(factory.tuple("Lvl$2").product(factory.tuple("Lvl$1")));
        x17_upper.add(factory.tuple("Lvl$2").product(factory.tuple("Lvl$2")));
        x17_upper.add(factory.tuple("Lvl$2").product(factory.tuple("Lvl$3")));
        x17_upper.add(factory.tuple("Lvl$2").product(factory.tuple("Lvl$4")));
        x17_upper.add(factory.tuple("Lvl$3").product(factory.tuple("Lvl$0")));
        x17_upper.add(factory.tuple("Lvl$3").product(factory.tuple("Lvl$1")));
        x17_upper.add(factory.tuple("Lvl$3").product(factory.tuple("Lvl$2")));
        x17_upper.add(factory.tuple("Lvl$3").product(factory.tuple("Lvl$3")));
        x17_upper.add(factory.tuple("Lvl$3").product(factory.tuple("Lvl$4")));
        x17_upper.add(factory.tuple("Lvl$4").product(factory.tuple("Lvl$0")));
        x17_upper.add(factory.tuple("Lvl$4").product(factory.tuple("Lvl$1")));
        x17_upper.add(factory.tuple("Lvl$4").product(factory.tuple("Lvl$2")));
        x17_upper.add(factory.tuple("Lvl$4").product(factory.tuple("Lvl$3")));
        x17_upper.add(factory.tuple("Lvl$4").product(factory.tuple("Lvl$4")));
        bounds.bound(x17, x17_upper);

        TupleSet x18_upper = factory.noneOf(1);
        x18_upper.add(factory.tuple("State$0"));
        x18_upper.add(factory.tuple("State$1"));
        x18_upper.add(factory.tuple("State$2"));
        x18_upper.add(factory.tuple("State$3"));
        x18_upper.add(factory.tuple("State$4"));
        x18_upper.add(factory.tuple("State$5"));
        x18_upper.add(factory.tuple("State$6"));
        bounds.bound(x18, x18_upper);

        TupleSet x19_upper = factory.noneOf(2);
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("State$0")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("State$1")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("State$2")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("State$3")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("State$4")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("State$5")));
        x19_upper.add(factory.tuple("State$0").product(factory.tuple("State$6")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("State$0")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("State$1")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("State$2")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("State$3")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("State$4")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("State$5")));
        x19_upper.add(factory.tuple("State$1").product(factory.tuple("State$6")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("State$0")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("State$1")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("State$2")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("State$3")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("State$4")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("State$5")));
        x19_upper.add(factory.tuple("State$2").product(factory.tuple("State$6")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("State$0")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("State$1")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("State$2")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("State$3")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("State$4")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("State$5")));
        x19_upper.add(factory.tuple("State$3").product(factory.tuple("State$6")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("State$0")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("State$1")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("State$2")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("State$3")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("State$4")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("State$5")));
        x19_upper.add(factory.tuple("State$4").product(factory.tuple("State$6")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("State$0")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("State$1")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("State$2")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("State$3")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("State$4")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("State$5")));
        x19_upper.add(factory.tuple("State$5").product(factory.tuple("State$6")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("State$0")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("State$1")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("State$2")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("State$3")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("State$4")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("State$5")));
        x19_upper.add(factory.tuple("State$6").product(factory.tuple("State$6")));
        bounds.bound(x19, x19_upper);

        TupleSet x20_upper = factory.noneOf(1);
        x20_upper.add(factory.tuple("Lvl$0"));
        x20_upper.add(factory.tuple("Lvl$1"));
        x20_upper.add(factory.tuple("Lvl$2"));
        x20_upper.add(factory.tuple("Lvl$3"));
        x20_upper.add(factory.tuple("Lvl$4"));
        bounds.bound(x20, x20_upper);

        TupleSet x21_upper = factory.noneOf(1);
        x21_upper.add(factory.tuple("State$0"));
        x21_upper.add(factory.tuple("State$1"));
        x21_upper.add(factory.tuple("State$2"));
        x21_upper.add(factory.tuple("State$3"));
        x21_upper.add(factory.tuple("State$4"));
        x21_upper.add(factory.tuple("State$5"));
        x21_upper.add(factory.tuple("State$6"));
        bounds.bound(x21, x21_upper);

        bounds.boundExactly(-8,factory.range(factory.tuple("-8"),factory.tuple("-8")));
        bounds.boundExactly(-7,factory.range(factory.tuple("-7"),factory.tuple("-7")));
        bounds.boundExactly(-6,factory.range(factory.tuple("-6"),factory.tuple("-6")));
        bounds.boundExactly(-5,factory.range(factory.tuple("-5"),factory.tuple("-5")));
        bounds.boundExactly(-4,factory.range(factory.tuple("-4"),factory.tuple("-4")));
        bounds.boundExactly(-3,factory.range(factory.tuple("-3"),factory.tuple("-3")));
        bounds.boundExactly(-2,factory.range(factory.tuple("-2"),factory.tuple("-2")));
        bounds.boundExactly(-1,factory.range(factory.tuple("-1"),factory.tuple("-1")));
        bounds.boundExactly(0,factory.range(factory.tuple("0"),factory.tuple("0")));
        bounds.boundExactly(1,factory.range(factory.tuple("1"),factory.tuple("1")));
        bounds.boundExactly(2,factory.range(factory.tuple("2"),factory.tuple("2")));
        bounds.boundExactly(3,factory.range(factory.tuple("3"),factory.tuple("3")));
        bounds.boundExactly(4,factory.range(factory.tuple("4"),factory.tuple("4")));
        bounds.boundExactly(5,factory.range(factory.tuple("5"),factory.tuple("5")));
        bounds.boundExactly(6,factory.range(factory.tuple("6"),factory.tuple("6")));
        bounds.boundExactly(7,factory.range(factory.tuple("7"),factory.tuple("7")));

        Variable x25=Variable.unary("Closure_this");
        Expression x26=x6.union(x7);
        Decls x24=x25.oneOf(x26);
        Expression x28=x25.join(x12);
        Formula x27=x28.in(x26);
        Formula x23=x27.forAll(x24);
        Expression x30=x12.join(Expression.UNIV);
        Formula x29=x30.in(x26);
        Variable x34=Variable.unary("Closure_this");
        Decls x33=x34.oneOf(x9);
        Expression x36=x34.join(x13);
        Formula x35=x36.in(x26);
        Formula x32=x35.forAll(x33);
        Expression x38=x13.join(Expression.UNIV);
        Formula x37=x38.in(x9);
        Variable x41=Variable.unary("Closure_this");
        Decls x40=x41.oneOf(x9);
        Expression x45=x41.join(x14);
        Expression x46=x26.product(x8);
        Formula x44=x45.in(x46);
        Variable x49=Variable.unary("");
        Decls x48=x49.oneOf(x26);
        Expression x52=x49.join(x45);
        Formula x51=x52.lone();
        Formula x53=x52.in(x8);
        Formula x50=x51.and(x53);
        Formula x47=x50.forAll(x48);
        Formula x43=x44.and(x47);
        Variable x56=Variable.unary("");
        Decls x55=x56.oneOf(x8);
        Expression x58=x45.join(x56);
        Formula x57=x58.in(x26);
        Formula x54=x57.forAll(x55);
        Formula x42=x43.and(x54);
        Formula x39=x42.forAll(x40);
        Expression x61=x14.join(Expression.UNIV);
        Expression x60=x61.join(Expression.UNIV);
        Formula x59=x60.in(x9);
        Variable x64=Variable.unary("Closure_this");
        Decls x63=x64.oneOf(x9);
        Expression x68=x64.join(x15);
        Expression x69=x26.product(x26);
        Formula x67=x68.in(x69);
        Variable x72=Variable.unary("");
        Decls x71=x72.oneOf(x26);
        Expression x75=x72.join(x68);
        Formula x74=x75.lone();
        Formula x76=x75.in(x26);
        Formula x73=x74.and(x76);
        Formula x70=x73.forAll(x71);
        Formula x66=x67.and(x70);
        Variable x79=Variable.unary("");
        Decls x78=x79.oneOf(x26);
        Expression x81=x68.join(x79);
        Formula x80=x81.in(x26);
        Formula x77=x80.forAll(x78);
        Formula x65=x66.and(x77);
        Formula x62=x65.forAll(x63);
        Expression x84=x15.join(Expression.UNIV);
        Expression x83=x84.join(Expression.UNIV);
        Formula x82=x83.in(x9);
        Expression x87=x10.product(x16);
        Expression x86=x10.join(x87);
        Formula x85=x86.in(x8);
        Expression x90=x10.product(x17);
        Expression x89=x10.join(x90);
        Expression x91=x8.product(x8);
        Formula x88=x89.in(x91);
        Formula x92=x17.totalOrder(x8,x16,x20);
        Expression x95=x11.product(x18);
        Expression x94=x11.join(x95);
        Formula x93=x94.in(x9);
        Expression x98=x11.product(x19);
        Expression x97=x11.join(x98);
        Expression x99=x9.product(x9);
        Formula x96=x97.in(x99);
        Formula x100=x19.totalOrder(x9,x18,x21);
        Expression x111=Expression.INTS.union(x5);
        Expression x110=x111.union(x26);
        Expression x109=x110.union(x8);
        Expression x108=x109.union(x9);
        Expression x107=x108.union(x10);
        Expression x106=x107.union(x11);
        Expression x105=x106.product(Expression.UNIV);
        Expression x103=Expression.IDEN.intersection(x105);
        Expression x102=x103.intersection(x12);
        Formula x101=x102.no();
        Expression x114=x12.transpose();
        Formula x113=x114.in(x12);
        Expression x118=x12.closure();
        Expression x120=x106.product(Expression.UNIV);
        Expression x119=Expression.IDEN.intersection(x120);
        Expression x117=x118.union(x119);
        Expression x116=x6.join(x117);
        Formula x115=x26.in(x116);
        Variable x123=Variable.unary("Closure_s");
        Expression x126=x19.join(x9);
        Expression x125=x9.difference(x126);
        Expression x124=x9.difference(x125);
        Decls x122=x123.oneOf(x124);
        Variable x131=Variable.unary("Closure_p");
        Decls x130=x131.oneOf(x26);
        Expression x135=x123.join(x14);
        Expression x134=x131.join(x135);
        Expression x138=x123.join(x19);
        Expression x137=x138.join(x14);
        Expression x136=x131.join(x137);
        Formula x133=x134.eq(x136);
        Expression x141=x123.join(x15);
        Expression x140=x131.join(x141);
        Expression x143=x138.join(x15);
        Expression x142=x131.join(x143);
        Formula x139=x140.eq(x142);
        Formula x132=x133.and(x139);
        Formula x129=x132.forAll(x130);
        Formula x128=x129.not();
        Variable x146=Variable.unary("Closure_p");
        Decls x145=x146.oneOf(x26);
        Expression x151=x123.join(x14);
        Expression x150=x146.join(x151);
        Formula x149=x150.no();
        Formula x153=x146.eq(x6);
        Expression x156=x146.join(x12);
        Expression x157=x123.join(x14);
        Expression x155=x156.join(x157);
        Formula x154=x155.some();
        Formula x152=x153.or(x154);
        Formula x148=x149.and(x152);
        Formula x147=x148.not();
        Formula x144=x147.forAll(x145);
        Formula x127=x128.or(x144);
        Formula x121=x127.forAll(x122);
        Expression x160=x18.join(x14);
        Formula x159=x160.no();
        Expression x162=x18.join(x15);
        Formula x161=x162.no();
        Formula x158=x159.and(x161);
        Variable x165=Variable.unary("Closure_s");
        Expression x166=x9.difference(x125);
        Decls x164=x165.oneOf(x166);
        Variable x169=Variable.unary("Closure_p");
        Decls x168=x169.oneOf(x26);
        Expression x173=x165.join(x13);
        Formula x172=x169.in(x173);
        Expression x178=x165.join(x14);
        Expression x177=x169.join(x178);
        Formula x176=x177.no();
        Formula x181=x169.eq(x6);
        Expression x186=x165.join(x19);
        Expression x185=x186.join(x14);
        Expression x184=x169.join(x185);
        Formula x183=x184.eq(x16);
        Expression x189=x186.join(x15);
        Expression x188=x169.join(x189);
        Formula x187=x188.no();
        Formula x182=x183.and(x187);
        Formula x180=x181.implies(x182);
        Formula x191=x181.not();
        Variable x194=Variable.unary("TRAct_adjProc");
        Expression x195=x169.join(x12);
        Decls x193=x194.oneOf(x195);
        Expression x200=x165.join(x14);
        Expression x199=x194.join(x200);
        Formula x198=x199.some();
        Expression x203=x186.join(x14);
        Expression x202=x169.join(x203);
        Expression x204=x199.join(x17);
        Formula x201=x202.eq(x204);
        Formula x197=x198.and(x201);
        Expression x207=x186.join(x15);
        Expression x206=x169.join(x207);
        Formula x205=x206.eq(x194);
        Formula x196=x197.and(x205);
        Formula x192=x196.forSome(x193);
        Formula x190=x191.implies(x192);
        Formula x179=x180.and(x190);
        Formula x175=x176.and(x179);
        Expression x211=x165.join(x14);
        Expression x210=x169.join(x211);
        Expression x213=x186.join(x14);
        Expression x212=x169.join(x213);
        Formula x209=x210.eq(x212);
        Expression x216=x165.join(x15);
        Expression x215=x169.join(x216);
        Expression x218=x186.join(x15);
        Expression x217=x169.join(x218);
        Formula x214=x215.eq(x217);
        Formula x208=x209.and(x214);
        Formula x174=x175.or(x208);
        Formula x171=x172.implies(x174);
        Formula x220=x172.not();
        Expression x224=x165.join(x14);
        Expression x223=x169.join(x224);
        Expression x226=x186.join(x14);
        Expression x225=x169.join(x226);
        Formula x222=x223.eq(x225);
        Expression x229=x165.join(x15);
        Expression x228=x169.join(x229);
        Expression x231=x186.join(x15);
        Expression x230=x169.join(x231);
        Formula x227=x228.eq(x230);
        Formula x221=x222.and(x227);
        Formula x219=x220.implies(x221);
        Formula x170=x171.and(x219);
        Formula x167=x170.forAll(x168);
        Formula x163=x167.forAll(x164);
        Variable x235=Variable.unary("Closure_s");
        Expression x236=x9.difference(x125);
        Decls x234=x235.oneOf(x236);
        Expression x245=x235.join(x15);
        Expression x244=x245.transpose();
        Expression x243=x244.closure();
        Expression x247=x106.product(Expression.UNIV);
        Expression x246=Expression.IDEN.intersection(x247);
        Expression x242=x243.union(x246);
        Expression x241=x6.join(x242);
        Formula x240=x26.in(x241);
        Variable x250=Variable.unary("acyclic_x");
        Decls x249=x250.oneOf(x26);
        Expression x256=x235.join(x15);
        Expression x255=x256.transpose();
        Expression x254=x255.closure();
        Expression x253=x250.join(x254);
        Formula x252=x250.in(x253);
        Formula x251=x252.not();
        Formula x248=x251.forAll(x249);
        Formula x239=x240.and(x248);
        Formula x238=x239.not();
        Expression x258=x235.join(x15);
        Expression x260=x235.join(x19);
        Expression x259=x260.join(x15);
        Formula x257=x258.eq(x259);
        Formula x237=x238.or(x257);
        Formula x233=x237.forAll(x234);
        Formula x232=x233.not();
        Formula x261=x0.eq(x0);
        Formula x262=x1.eq(x1);
        Formula x263=x2.eq(x2);
        Formula x264=x3.eq(x3);
        Formula x265=x4.eq(x4);
        Formula x266=x5.eq(x5);
        Formula x267=x6.eq(x6);
        Formula x268=x7.eq(x7);
        Formula x269=x8.eq(x8);
        Formula x270=x9.eq(x9);
        Formula x271=x10.eq(x10);
        Formula x272=x11.eq(x11);
        Formula x273=x12.eq(x12);
        Formula x274=x13.eq(x13);
        Formula x275=x14.eq(x14);
        Formula x276=x15.eq(x15);
        Formula x277=x16.eq(x16);
        Formula x278=x17.eq(x17);
        Formula x279=x18.eq(x18);
        Formula x280=x19.eq(x19);
        Formula x281=x20.eq(x20);
        Formula x282=x21.eq(x21);
        Formula x22=Formula.compose(FormulaOperator.AND, x23, x29, x32, x37, x39, x59, x62, x82, x85, x88, x92, x93, x96, x100, x101, x113, x115, x121, x158, x163, x232, x261, x262, x263, x264, x265, x266, x267, x268, x269, x270, x271, x272, x273, x274, x275, x276, x277, x278, x279, x280, x281, x282);

        Solver solver = new Solver();
        solver.options().setSolver(SATFactory.MiniSat);
        solver.options().setBitwidth(4);
        //solver.options().setFlatten(false);
        solver.options().setIntEncoding(Options.IntEncoding.TWOSCOMPLEMENT);
        solver.options().setSymmetryBreaking(20);
        solver.options().setSkolemDepth(0);
        System.out.println("Solving...");
        System.out.flush();
        Solution sol = solver.solve(x22,bounds);
        System.out.println(sol.toString());
    }}