#! /usr/bin/env python
# encoding: utf-8

import shutil
import subprocess

def options(opt):
    opt.load('compiler_cxx')
    opt.load('java')

def configure(conf):
    conf.load('compiler_cxx')
    conf.load('java')
    conf.check_jni_headers()
    MINISAT = conf.path.abspath() + '/minisat'
    shutil.rmtree(MINISAT, True)
    subprocess.check_call(['git', 'clone', 'https://github.com/stp/minisat.git', MINISAT])


def build(bld):
    DEFINES = ['__STDC_LIMIT_MACROS', '__STDC_FORMAT_MACROS']
    INCLUDES = ['.','./minisat'] 
    CXXFLAGS = [ '-w', '-O3', '-fPIC']
    
    bld.objects(source = ['minisat/minisat/utils/Options.cc', 'minisat/minisat/utils/System.cc'],
                target = 'minisat-utils',
                includes = INCLUDES, cxxflags = CXXFLAGS, defines = DEFINES)
    
    bld.objects(source = 'minisat/minisat/core/Solver.cc',
                target = 'minisat-core', use = 'minisat-utils',
                includes = INCLUDES, cxxflags = CXXFLAGS, defines = DEFINES)
    
    bld.shlib(source = 'kodkod_engine_satlab_MiniSat.cpp',
              target = 'minisat', use = 'minisat-core', uselib = 'JAVA',
              includes = INCLUDES, cxxflags = CXXFLAGS, defines = DEFINES)
            
def distclean(ctx):
    from waflib import Scripting
    Scripting.distclean(ctx)
    shutil.rmtree(ctx.path.abspath() + '/minisat', True)
    
    
