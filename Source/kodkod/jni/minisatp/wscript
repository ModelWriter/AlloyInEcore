#! /usr/bin/env python
# encoding: utf-8

import shutil
import subprocess

def options(opt):
    opt.load('compiler_cxx')
    opt.load('java')

def configure(conf):
    conf.load('compiler_cxx')
    conf.load('java')
    conf.check_jni_headers()
    MINISAT = conf.path.abspath() + '/minisatp'
    shutil.rmtree(MINISAT, True)
    subprocess.check_call(['git', 'clone', 'https://github.com/emina/minisatp.git', MINISAT])
 
def build(bld):
    DEFINES = ['__STDC_LIMIT_MACROS', '__STDC_FORMAT_MACROS']
    INCLUDES = ['.', './minisatp'] 
    CXXFLAGS = [ '-w', '-O3', '-fPIC', '-ffloat-store']
    
    bld.objects(source = ['minisatp/Solver.C', 'minisatp/Proof.C', 'minisatp/File.C'],
                target = 'minisatp-core',
                includes = INCLUDES, cxxflags = CXXFLAGS, defines = DEFINES)
      
    bld.shlib(source = 'kodkod_engine_satlab_MiniSatProver.cpp',
              target = 'minisatprover', use = 'minisatp-core', uselib = 'JAVA',
              includes = INCLUDES, cxxflags = CXXFLAGS, defines = DEFINES)


def distclean(ctx):
    from waflib import Scripting
    Scripting.distclean(ctx)
    shutil.rmtree(ctx.path.abspath() + '/minisatp', True)
    

    
    
